--- ../../../../UE4-QA/Engine/Plugins/Runtime/OculusRift/Source/OculusRift/OculusRift.Build.cs	2014-09-13 16:42:13.000000000 -0700
+++ ./Engine/Plugins/Runtime/OculusRift/Source/OculusRift/OculusRift.Build.cs	2014-11-05 17:41:58.000000000 -0800
@@ -28,6 +28,7 @@
 					"HeadMountedDisplay",
 					"Slate",
 					"SlateCore",
+					"UnrealEd",
 				}
 				);
 
--- ../../../../UE4-QA/Engine/Plugins/Runtime/OculusRift/Source/OculusRift/Private/OculusRiftHMD.cpp	2014-11-05 14:55:32.000000000 -0800
+++ ./Engine/Plugins/Runtime/OculusRift/Source/OculusRift/Private/OculusRiftHMD.cpp	2014-11-20 15:56:25.000000000 -0800
@@ -6,6 +6,10 @@
 #include "Runtime/Analytics/Analytics/Public/Interfaces/IAnalyticsProvider.h"
 #include "SceneViewport.h"
 
+#if WITH_EDITOR
+#include "Editor/UnrealEd/Classes/Editor/EditorEngine.h"
+#endif
+
 #if !UE_BUILD_SHIPPING
 // Should be changed to CAPI when available.
 #if PLATFORM_SUPPORTS_PRAGMA_PACK
@@ -276,13 +280,14 @@
 {
 	// only supposed to be used from the game thread
 	checkf(IsInGameThread());
-	GetCurrentPose(CurHmdOrientation, CurrentPosition);
-	CurrentOrientation = LastHmdOrientation = CurHmdOrientation;
+	GetCurrentPose(CurrentOrientation, CurrentPosition);
+	LastHmdOrientation = CurrentOrientation;
 }
 
 void FOculusRiftHMD::GetCurrentPose(FQuat& CurrentHmdOrientation, FVector& CurrentHmdPosition)
 {
 	check(IsInGameThread());
+	check(Hmd);
 
 	if (Flags.bNeedUpdateStereoRenderingParams)
 		UpdateStereoRenderingParams();
@@ -322,6 +327,7 @@
 
 	ViewRotation.Normalize();
 
+	FQuat CurHmdOrientation;
 	FVector CurHmdPosition;
 	GetCurrentPose(CurHmdOrientation, CurHmdPosition);
 	LastHmdOrientation = CurHmdOrientation;
@@ -354,6 +360,7 @@
 	if (Flags.bDoNotUpdateOnGT)
 		return;
 #endif
+	FQuat	CurHmdOrientation;
 	FVector CurHmdPosition;
 	GetCurrentPose(CurHmdOrientation, CurHmdPosition);
 	LastHmdOrientation = CurHmdOrientation;
@@ -461,22 +468,9 @@
 {
 	if (FParse::Command( &Cmd, TEXT("STEREO") ))
 	{
-		if (FParse::Command(&Cmd, TEXT("ON")))
-		{
-			if (!IsHMDEnabled())
-			{
-				Ar.Logf(TEXT("HMD is disabled. Use 'hmd enable' to re-enable it."));
-			}
-			EnableStereo(true);
-			if (!Flags.bStereoEnabled)
-			{
-				Ar.Logf(TEXT("Stereo can't be enabled (is HMD connected?)"));
-			}
-			return true;
-		}
-		else if (FParse::Command(&Cmd, TEXT("OFF")))
+		if (FParse::Command(&Cmd, TEXT("OFF")))
 		{
-			EnableStereo(false);
+			DoEnableStereo(false, true);
 			return true;
 		}
 		else if (FParse::Command(&Cmd, TEXT("TOGGLE")))
@@ -502,6 +496,28 @@
 				FMath::RadiansToDegrees(HFOVInRadians), FMath::RadiansToDegrees(VFOVInRadians),
 				(NearClippingPlane) ? NearClippingPlane : GNearClippingPlane, FarClippingPlane);
 		}
+		else
+		{
+			bool on, hmd = false;
+			on = FParse::Command(&Cmd, TEXT("ON"));
+			if (!on)
+			{
+				hmd = FParse::Command(&Cmd, TEXT("HMD"));
+			}
+			if (on || hmd)
+			{
+				if (!IsHMDEnabled())
+				{
+					Ar.Logf(TEXT("HMD is disabled. Use 'hmd enable' to re-enable it."));
+				}
+				DoEnableStereo(true, hmd);
+				if (!Flags.bStereoEnabled)
+				{
+					Ar.Logf(TEXT("Stereo can't be enabled (is HMD connected?)"));
+				}
+				return true;
+			}
+		}
 
 		// normal configuration
 		float val;
@@ -1021,7 +1037,6 @@
 			Flags.bHeadTrackingEnforced = !Flags.bHeadTrackingEnforced;
 			if (!Flags.bHeadTrackingEnforced)
 			{
-				CurHmdOrientation = FQuat::Identity;
 				ResetControlRotation();
 			}
 			return true;
@@ -1029,7 +1044,6 @@
 		else if (!FCString::Stricmp(*CmdName, TEXT("RESET")))
 		{
 			Flags.bHeadTrackingEnforced = false;
-			CurHmdOrientation = FQuat::Identity;
 			ResetControlRotation();
 			return true;
 		}
@@ -1176,44 +1190,116 @@
 #endif
 }
 
+class FSceneViewport* FOculusRiftHMD::FindSceneViewport()
+{
+	if (!GIsEditor)
+	{
+		UGameEngine* GameEngine = Cast<UGameEngine>(GEngine);
+		return GameEngine->SceneViewport.Get();
+	}
+#if WITH_EDITOR
+	else
+	{
+		UEditorEngine* EditorEngine = Cast<UEditorEngine>(GEngine);
+		return (FSceneViewport*)(EditorEngine->GetPIEViewport());
+	}
+#endif
+	return nullptr;
+}
+
 //---------------------------------------------------
 // Oculus Rift IStereoRendering Implementation
 //---------------------------------------------------
 bool FOculusRiftHMD::IsStereoEnabled() const
 {
-	return Flags.bStereoEnabled && Flags.bHMDEnabled && !GIsEditor;
+	return Flags.bStereoEnabled && Flags.bHMDEnabled /* && !GIsEditor*/;
 }
 
-bool FOculusRiftHMD::EnableStereo(bool stereo)
+bool FOculusRiftHMD::EnableStereo(bool bStereo)
 {
-	if (GIsEditor) return false;
-	bool stereoEnabled = (IsHMDEnabled()) ? stereo : false;
+	return DoEnableStereo(bStereo, true);
+}
+
+bool FOculusRiftHMD::DoEnableStereo(bool bStereo, bool bApplyToHmd)
+{
+	FSceneViewport* SceneVP = FindSceneViewport();
+	if (bStereo && (!SceneVP || !SceneVP->IsStereoRenderingAllowed()))
+	{
+		return false;
+	}
+
+	bool stereoEnabled = (IsHMDEnabled()) ? bStereo : false;
+
+	if ((Flags.bStereoEnabled && stereoEnabled) || (!Flags.bStereoEnabled && !stereoEnabled))
+	{
+		// already in the desired mode
+		return Flags.bStereoEnabled;
+	}
+
 	bool wasFullscreenAllowed = IsFullscreenAllowed();
 	if (OnOculusStateChange(stereoEnabled))
 	{
 		Flags.bStereoEnabled = stereoEnabled;
 
-		UGameEngine* GameEngine = Cast<UGameEngine>(GEngine);
-
+		if (SceneVP)
+		{
 		if (!IsFullscreenAllowed() && stereoEnabled)
 		{
 			if (Hmd)
 			{
 				// keep window size, but set viewport size to Rift resolution
-				GameEngine->SceneViewport->SetViewportSize(Hmd->Resolution.w, Hmd->Resolution.h);
+					SceneVP->SetViewportSize(Hmd->Resolution.w, Hmd->Resolution.h);
 			}
 		}
-		else if (!wasFullscreenAllowed && !stereoEnabled)
+			else if ((!wasFullscreenAllowed && !stereoEnabled))
 		{
 			// restoring original viewport size (to be equal to window size).
-			TSharedPtr<SWindow> Window = GameEngine->SceneViewport->FindWindow();
+				TSharedPtr<SWindow> Window = SceneVP->FindWindow();
 			if (Window.IsValid())
 			{
 				FVector2D size = Window->GetSizeInScreen();
-				GameEngine->SceneViewport->SetViewportSize(size.X, size.Y);
+					SceneVP->SetViewportSize(size.X, size.Y);
 				Window->SetViewportSizeDrivenByWindow(true);
 			}
 		}
+
+			if (bApplyToHmd && IsFullscreenAllowed() && SceneVP)
+			{
+				TSharedPtr<SWindow> Window = SceneVP->FindWindow();
+				if (Window.IsValid())
+				{
+					FVector2D size = Window->GetSizeInScreen();
+					SceneVP->SetViewportSize(size.X, size.Y);
+					Window->SetViewportSizeDrivenByWindow(true);
+
+					if (stereoEnabled)
+					{
+						EWindowMode::Type wm = (!GIsEditor) ? EWindowMode::Fullscreen : EWindowMode::WindowedFullscreen;
+						FVector2D size = Window->GetSizeInScreen();
+						SceneVP->ResizeFrame(size.X, size.Y, wm, 0, 0);
+					}
+					else
+					{
+						// In Editor we cannot use ResizeFrame trick since it is called too late and App::IsGame
+						// returns false.
+						if (GIsEditor)
+						{
+							FSlateRect PreFullScreenRect;
+							PopPreFullScreenRect(PreFullScreenRect);
+							if (PreFullScreenRect.GetSize().X > 0 && PreFullScreenRect.GetSize().Y > 0 && IsFullscreenAllowed())
+							{
+								Window->MoveWindowTo(FVector2D(PreFullScreenRect.Left, PreFullScreenRect.Top));
+							}
+						}
+						else
+						{
+							FVector2D size = Window->GetSizeInScreen();
+							SceneVP->ResizeFrame(size.X, size.Y, EWindowMode::Windowed, 0, 0);
+						}
+					}
+				}
+			}
+		}
 	}
 	return Flags.bStereoEnabled;
 }
@@ -1340,6 +1426,7 @@
 void FOculusRiftHMD::CalculateStereoViewOffset(const EStereoscopicPass StereoPassType, const FRotator& ViewRotation, const float WorldToMeters, FVector& ViewLocation)
 {
 	check(WorldToMeters != 0.f);
+	check(Hmd);
 
 	const int idx = (StereoPassType == eSSP_LEFT_EYE) ? 0 : 1;
 
@@ -1359,8 +1446,9 @@
 			{
 				// Usually, the pose is updated either from ApplyHmdOrientation or from UpdateCameraOrientation methods.
 				// However, in Editor those methods are not called.
+				FQuat	CurrentHmdOrientation;
 				FVector CurrentHmdPosition;
-				GetCurrentPose(CurHmdOrientation, CurrentHmdPosition);
+				GetCurrentPose(CurrentHmdOrientation, CurrentHmdPosition);
 			}
 
 			FVector CurEyePosition;
@@ -1602,9 +1690,6 @@
 
 #ifndef OVR_SDK_RENDERING
 	InViewFamily.bUseSeparateRenderTarget = false;
-#else
-	InViewFamily.bUseSeparateRenderTarget = ShouldUseSeparateRenderTarget();
-#endif
 
 	// check and save texture size. 
 	if (InView.StereoPass == eSSP_LEFT_EYE)
@@ -1615,11 +1700,14 @@
 			Flags.bNeedUpdateStereoRenderingParams = true;
 		}
 	}
+#else
+	InViewFamily.bUseSeparateRenderTarget = ShouldUseSeparateRenderTarget();
+#endif
 }
 
 bool FOculusRiftHMD::IsHeadTrackingAllowed() const
 {
-	return Flags.bHeadTrackingEnforced || GEngine->IsStereoscopic3D();
+	return Hmd && (Flags.bHeadTrackingEnforced || GEngine->IsStereoscopic3D());
 }
 
 //---------------------------------------------------
@@ -1640,7 +1728,6 @@
 	, MirrorWindowSize(0, 0)
 	, NearClippingPlane(0)
 	, FarClippingPlane(0)
-	, CurHmdOrientation(FQuat::Identity)
 	, DeltaControlRotation(FRotator::ZeroRotator)
 	, DeltaControlOrientation(FQuat::Identity)
 	, LastHmdOrientation(FQuat::Identity)
@@ -1678,6 +1765,11 @@
 #else
 	AlternateFrameRateDivider = 1;
 #endif
+	if (GIsEditor)
+	{
+		Flags.bOverrideScreenPercentage = true;
+		ScreenPercentage = 100;
+	}
 	SupportedTrackingCaps = SupportedDistortionCaps = SupportedHmdCaps = 0;
 	OSWindowHandle = nullptr;
 	Startup();
@@ -1736,6 +1828,7 @@
 	if (GIsEditor)
 	{
 		Flags.bHeadTrackingEnforced = true;
+		//AlternateFrameRateDivider = 2;
 	}
 
 	bool forced = true;
@@ -2113,6 +2206,8 @@
 			Flags.bVSync = v;
 		}
 	}
+	if (!GIsEditor)
+	{
 	if (GConfig->GetBool(OculusSettings, TEXT("bOverrideScreenPercentage"), v, GEngineIni))
 	{
 		Flags.bOverrideScreenPercentage = v;
@@ -2121,6 +2216,7 @@
 			ScreenPercentage = f;
 		}
 	}
+	}
 	if (GConfig->GetBool(OculusSettings, TEXT("bAllowFinishCurrentFrame"), v, GEngineIni))
 	{
 		Flags.bAllowFinishCurrentFrame = v;
@@ -2168,12 +2264,15 @@
 		GConfig->SetBool(OculusSettings, TEXT("VSync"), Flags.bVSync, GEngineIni);
 	}
 
+	if (!GIsEditor)
+	{
 	GConfig->SetBool(OculusSettings, TEXT("bOverrideScreenPercentage"), Flags.bOverrideScreenPercentage, GEngineIni);
 	if (Flags.bOverrideScreenPercentage)
 	{
 		// Save the current ScreenPercentage state
 		GConfig->SetFloat(OculusSettings, TEXT("ScreenPercentage"), ScreenPercentage, GEngineIni);
 	}
+	}
 	GConfig->SetBool(OculusSettings, TEXT("bAllowFinishCurrentFrame"), Flags.bAllowFinishCurrentFrame, GEngineIni);
 
 	GConfig->SetBool(OculusSettings, TEXT("bLowPersistenceMode"), Flags.bLowPersistenceMode, GEngineIni);
@@ -2206,7 +2305,6 @@
 	// This call make sense when 'Play' is used from the Editor;
 	if (GIsEditor)
 	{
-		//LastHmdPosition = 
 		PositionOffset = FVector::ZeroVector;
 		DeltaControlRotation = FRotator::ZeroRotator;
 		BaseOrientation = LastHmdOrientation = DeltaControlOrientation = FQuat::Identity;
@@ -2221,6 +2319,7 @@
 {
 	if (GIsEditor)
 	{
+		EnableStereo(false);
 		ReleaseDevice();
 	}
 }
--- ../../../../UE4-QA/Engine/Plugins/Runtime/OculusRift/Source/OculusRift/Private/OculusRiftHMD.h	2014-10-29 15:43:04.000000000 -0700
+++ ./Engine/Plugins/Runtime/OculusRift/Source/OculusRift/Private/OculusRiftHMD.h	2014-11-20 15:56:24.000000000 -0800
@@ -81,7 +81,6 @@
 
 	virtual void SetInterpupillaryDistance(float NewInterpupillaryDistance) override;
 	virtual float GetInterpupillaryDistance() const override;
-    //virtual float GetFieldOfViewInRadians() const override;
 	virtual void GetFieldOfView(float& OutHFOVInDegrees, float& OutVFOVInDegrees) const override;
 
 	virtual void GetCurrentOrientationAndPosition(FQuat& CurrentOrientation, FVector& CurrentPosition) override;
@@ -170,6 +169,7 @@
 
 	virtual void DrawDebug(UCanvas* Canvas, EStereoscopicPass StereoPass) override;
 
+	bool DoEnableStereo(bool bStereo, bool bApplyToHmd);
 	void GetCurrentPose(FQuat& CurrentHmdOrientation, FVector& CurrentHmdPosition);
 	void BeginRendering_RenderThread();
 
@@ -406,6 +406,8 @@
 
 	void PoseToOrientationAndPosition(const ovrPosef& InPose, FQuat& OutOrientation, FVector& OutPosition) const;
 
+	class FSceneViewport* FindSceneViewport();
+
 #if !UE_BUILD_SHIPPING
 	void DrawDebugTrackingCameraFrustum(class UWorld* InWorld, const FVector& ViewLocation);
 #endif // #if !UE_BUILD_SHIPPING
@@ -575,9 +577,6 @@
 	/** Optional far clipping plane for projection matrix */
 	float					FarClippingPlane;
 
-	/** Player's orientation tracking */
-	FQuat					CurHmdOrientation;
-
 	FRotator				DeltaControlRotation;    // same as DeltaControlOrientation but as rotator
 	FQuat					DeltaControlOrientation; // same as DeltaControlRotation but as quat
 
@@ -651,7 +650,6 @@
 		Ptr<FDistortionMesh>	pDistortionMesh[2]; // 0 - left, 1 - right, same as Views
 		ovrVector2f				UVScale[2];			// 0 - left, 1 - right, same as Views
 		ovrVector2f				UVOffset[2];		// 0 - left, 1 - right, same as Views
-		FQuat					CurHmdOrientation;
 #else
 		ovrFovPort				EyeFov[2];			// 0 - left, 1 - right, same as Views
 #endif // OVR_SDK_RENDERING
--- ../../../../UE4-QA/Engine/Plugins/Runtime/OculusRift/Source/OculusRift/Private/OculusRiftRender.cpp	2014-10-30 09:26:52.000000000 -0700
+++ ./Engine/Plugins/Runtime/OculusRift/Source/OculusRift/Private/OculusRiftRender.cpp	2014-11-20 15:56:25.000000000 -0800
@@ -26,10 +26,6 @@
 
 FOculusRiftHMD::FRenderParams::FRenderParams(FOculusRiftHMD* plugin)
 	: 
-#ifndef OVR_SDK_RENDERING
-	  CurHmdOrientation(FQuat::Identity)
-	,
-#endif // OVR_SDK_RENDERING
 	  FrameNumber(~0u)
 	, bFrameBegun(false)
 	, bTimeWarp(false)
@@ -557,11 +553,20 @@
 {
 	check(IsInGameThread());
 
+	if (GIsEditor)
+	{
+		// In editor we are going to check if the viewport widget supports stereo rendering or not.
+		if (!ViewportWidget->IsStereoRenderingAllowed())
+		{
+			return;
+		}
+	}
+
 	FRHIViewport* const ViewportRHI = InViewport.GetViewportRHI().GetReference();
 
 	if (!IsStereoEnabled())
 	{
-		if (!bUseSeparateRenderTarget)
+		if ((!bUseSeparateRenderTarget || GIsEditor) && ViewportRHI)
 		{
 			ViewportRHI->SetCustomPresent(nullptr);
 		}
@@ -588,12 +593,15 @@
 	}
 
 #if PLATFORM_WINDOWS
+	if (ViewportRHI)
+	{
 	void *wnd = ViewportRHI->GetNativeWindow();
 	if (wnd && wnd != OSWindowHandle)
 	{
 		OSWindowHandle = wnd;
 		ovrHmd_AttachToWindow(Hmd, OSWindowHandle, NULL, NULL);
  	}
+	}
 #endif
 
 #ifdef OVR_SDK_RENDERING
@@ -848,16 +856,16 @@
 
 	if (Cfg.D3D11.pBackBufferRT != pD3DBBRT ||
 		Cfg.D3D11.pSwapChain != pD3DSC ||
-		Cfg.D3D11.Header.RTSize.w != Viewport.GetSizeXY().X ||
-		Cfg.D3D11.Header.RTSize.h != Viewport.GetSizeXY().Y)
+		Cfg.D3D11.Header.BackBufferSize.w != Viewport.GetSizeXY().X ||
+		Cfg.D3D11.Header.BackBufferSize.h != Viewport.GetSizeXY().Y)
 	{
 		OVR::Lock::Locker lock(&ModifyLock);
 		// Note, neither BackBufferRT nor SwapChain are AddRef-ed here. Not sure, if we need to.
 		// If yes, then them should be released in ReleaseBackBuffer().
 		Cfg.D3D11.pBackBufferRT = pD3DBBRT;
 		Cfg.D3D11.pSwapChain = pD3DSC;
-		Cfg.D3D11.Header.RTSize.w = Viewport.GetSizeXY().X;
-		Cfg.D3D11.Header.RTSize.h = Viewport.GetSizeXY().Y;
+		Cfg.D3D11.Header.BackBufferSize.w = Viewport.GetSizeXY().X;
+		Cfg.D3D11.Header.BackBufferSize.h = Viewport.GetSizeXY().Y;
 		bNeedReinitRendererAPI = true;
 		Plugin->RenderParams_RenderThread.bFrameBegun = false;
 	}
@@ -1056,12 +1064,12 @@
 	//@TODO
 #endif
 	if (bWinChanged ||
-		Cfg.OGL.Header.RTSize.w != Viewport.GetSizeXY().X ||
-		Cfg.OGL.Header.RTSize.h != Viewport.GetSizeXY().Y)
+		Cfg.OGL.Header.BackBufferSize.w != Viewport.GetSizeXY().X ||
+		Cfg.OGL.Header.BackBufferSize.h != Viewport.GetSizeXY().Y)
 	{
 		OVR::Lock::Locker lock(&ModifyLock);
 
-		Cfg.OGL.Header.RTSize = Sizei(Viewport.GetSizeXY().X, Viewport.GetSizeXY().Y);
+		Cfg.OGL.Header.BackBufferSize = Sizei(Viewport.GetSizeXY().X, Viewport.GetSizeXY().Y);
 #if PLATFORM_WINDOWS
 		Cfg.OGL.Window = Window;
 #elif PLATFORM_MAC
--- ../../../../UE4-QA/Engine/Source/Editor/EditorStyle/Private/SlateEditorStyle.cpp	2014-11-11 10:33:00.000000000 -0800
+++ ./Engine/Source/Editor/EditorStyle/Private/SlateEditorStyle.cpp	2014-11-20 15:51:25.000000000 -0800
@@ -4609,6 +4609,8 @@
 		Set( "PlayWorld.PlayInViewport.Small", new IMAGE_BRUSH("Icons/icon_playInSelectedViewport_40x", Icon20x20 ) );
 		Set( "PlayWorld.PlayInEditorFloating", new IMAGE_BRUSH( "Icons/icon_playInWindow_40x", Icon40x40 ) );
 		Set( "PlayWorld.PlayInEditorFloating.Small", new IMAGE_BRUSH( "Icons/icon_playInWindow_40x", Icon20x20 ) );
+		Set( "PlayWorld.PlayInVR", new IMAGE_BRUSH( "Icons/icon_playInVR_40x", Icon40x40 ) );
+		Set( "PlayWorld.PlayInVR.Small", new IMAGE_BRUSH( "Icons/icon_playInVR_40x", Icon20x20 ) );
 		Set( "PlayWorld.PlayInMobilePreview", new IMAGE_BRUSH( "Icons/icon_PlayMobilePreview_40x", Icon40x40 ) );
 		Set( "PlayWorld.PlayInMobilePreview.Small", new IMAGE_BRUSH( "Icons/icon_PlayMobilePreview_16x", Icon20x20 ) );
 		Set( "PlayWorld.PlayInNewProcess", new IMAGE_BRUSH( "Icons/icon_PlayStandalone_40x", Icon40x40 ) );
--- ../../../../UE4-QA/Engine/Source/Editor/UnrealEd/Classes/Editor/EditorEngine.h	2014-11-05 12:35:33.000000000 -0800
+++ ./Engine/Source/Editor/UnrealEd/Classes/Editor/EditorEngine.h	2014-11-20 15:52:01.000000000 -0800
@@ -390,6 +390,10 @@
 	UPROPERTY()
 	uint32 bUseMobilePreviewForPlayWorld:1;
 
+	/** True to enable VR preview mode when launching the game from the editor on PC platform */
+	UPROPERTY()
+	uint32 bUseVRPreviewForPlayWorld:1;
+
 	/** True if we're Simulating In Editor, as opposed to Playing In Editor.  In this mode, simulation takes place right the level editing environment */
 	UPROPERTY()
 	uint32 bIsSimulatingInEditor:1;
@@ -1533,8 +1537,9 @@
 	 * @param	StartRotation			If specified, this is the rotation to start playing at
 	 * @param	DestinationConsole		Where to play the game - -1 means in editor, 0 or more is an index into the GConsoleSupportContainer
 	 * @param	bUseMobilePreview		True to enable mobile preview mode (PC platform only)
+	 * @param	bUseVRPreview			True to enable VR preview mode (PC platform only)
 	 */
-	void RequestPlaySession( bool bAtPlayerStart, TSharedPtr<class ILevelViewport> DestinationViewport, bool bInSimulateInEditor, const FVector* StartLocation = NULL, const FRotator* StartRotation = NULL, int32 DestinationConsole = -1, bool bUseMobilePreview = false );
+	void RequestPlaySession( bool bAtPlayerStart, TSharedPtr<class ILevelViewport> DestinationViewport, bool bInSimulateInEditor, const FVector* StartLocation = NULL, const FRotator* StartRotation = NULL, int32 DestinationConsole = -1, bool bUseMobilePreview = false, bool bUseVRPreview = false );
 
 	// @todo gmp: temp hack for Rocket demo
 	void RequestPlaySession( const FVector* StartLocation, const FRotator* StartRotation, bool MobilePreview );
--- ../../../../UE4-QA/Engine/Source/Editor/UnrealEd/Classes/Settings/LevelEditorPlaySettings.h	2014-10-27 03:36:47.000000000 -0700
+++ ./Engine/Source/Editor/UnrealEd/Classes/Settings/LevelEditorPlaySettings.h	2014-11-13 16:30:33.000000000 -0800
@@ -58,6 +58,9 @@
 	/** Runs in a new process. */
 	PlayMode_InNewProcess,
 
+	/** Runs in VR. */
+	PlayMode_InVR,
+
 	/** Simulates in viewport without possessing the player */
 	PlayMode_Simulate,
 
--- ../../../../UE4-QA/Engine/Source/Editor/UnrealEd/Private/Kismet2/DebuggerCommands.cpp	2014-10-27 01:17:32.000000000 -0700
+++ ./Engine/Source/Editor/UnrealEd/Private/Kismet2/DebuggerCommands.cpp	2014-11-20 15:53:13.000000000 -0800
@@ -20,6 +20,8 @@
 #include "ProjectTargetPlatformEditor.h"
 #include "PlatformInfo.h"
 
+#include "IHeadMountedDisplay.h"
+
 //@TODO: Remove this dependency
 #include "Editor/LevelEditor/Public/LevelEditor.h"
 #include "Editor/LevelEditor/Public/ILevelViewport.h"
@@ -52,6 +54,8 @@
 	static bool PlayInEditorFloating_CanExecute();
 	static void PlayInNewProcess_Clicked( bool MobilePreview );
 	static bool PlayInNewProcess_CanExecute();
+	static void PlayInVR_Clicked();
+	static bool PlayInVR_CanExecute();
 	static bool PlayInModeIsChecked( EPlayModeType PlayMode );
 
 	static bool PlayInLocation_CanExecute( EPlayModeLocations Location );
@@ -103,6 +107,7 @@
 	static bool IsStoppedAtBreakpoint();
 
 	static bool CanShowNonPlayWorldOnlyActions();
+	static bool CanShowVROnlyActions();
 
 	static int32 GetNumberOfClients();
 	static void SetNumberOfClients(int32 NumClients, ETextCommit::Type CommitInfo);
@@ -217,6 +222,7 @@
 	UI_COMMAND( RepeatLastPlay, "Play", "Launches a game preview session in the same mode as the last game preview session launched from the Game Preview Modes dropdown next to the Play button on the level editor toolbar", EUserInterfaceActionType::Button, FInputGesture( EKeys::P, EModifierKey::Alt ) )
 	UI_COMMAND( PlayInViewport, "Selected Viewport", "Play this level in the active level editor viewport", EUserInterfaceActionType::Check, FInputGesture() );
 	UI_COMMAND( PlayInEditorFloating, "New Editor Window", "Play this level in a new window", EUserInterfaceActionType::Check, FInputGesture() );
+	UI_COMMAND( PlayInVR, "VR Preview", "Play this level in VR", EUserInterfaceActionType::Check, FInputGesture() );
 	UI_COMMAND( PlayInMobilePreview, "Mobile Preview", "Play this level as a mobile device preview (runs in its own process)", EUserInterfaceActionType::Check, FInputGesture() );
 	UI_COMMAND( PlayInNewProcess, "Standalone Game", "Play this level in a new window that runs in its own process", EUserInterfaceActionType::Check, FInputGesture() );
 	UI_COMMAND( PlayInCameraLocation, "Current Camera Location", "Spawn the player at the current camera location", EUserInterfaceActionType::RadioButton, FInputGesture() );
@@ -280,6 +286,13 @@
 		FIsActionButtonVisible::CreateStatic( &FInternalPlayWorldCommandCallbacks::CanShowNonPlayWorldOnlyActions )
 		);
 
+	ActionList.MapAction(Commands.PlayInVR,
+		FExecuteAction::CreateStatic(&FInternalPlayWorldCommandCallbacks::PlayInVR_Clicked),
+		FCanExecuteAction::CreateStatic(&FInternalPlayWorldCommandCallbacks::PlayInVR_CanExecute),
+		FIsActionChecked::CreateStatic(&FInternalPlayWorldCommandCallbacks::PlayInModeIsChecked, PlayMode_InVR),
+		FIsActionButtonVisible::CreateStatic(&FInternalPlayWorldCommandCallbacks::CanShowVROnlyActions)
+		);
+
 	ActionList.MapAction( Commands.PlayInMobilePreview,
 		FExecuteAction::CreateStatic( &FInternalPlayWorldCommandCallbacks::PlayInNewProcess_Clicked, true ),
 		FCanExecuteAction::CreateStatic( &FInternalPlayWorldCommandCallbacks::PlayInNewProcess_CanExecute ),
@@ -496,6 +509,10 @@
 				PlayModeCommand = FPlayWorldCommands::Get().PlayInViewport;
 				break;
 
+			case PlayMode_InVR:
+				PlayModeCommand = FPlayWorldCommands::Get().PlayInVR;
+				break;
+
 			case PlayMode_Simulate:
 				PlayModeCommand = FPlayWorldCommands::Get().Simulate;
 				break;
@@ -517,6 +534,7 @@
 		FLocal::AddPlayModeMenuEntry(MenuBuilder, PlayMode_InViewPort);
 		FLocal::AddPlayModeMenuEntry(MenuBuilder, PlayMode_InMobilePreview);
 		FLocal::AddPlayModeMenuEntry(MenuBuilder, PlayMode_InEditorFloating);
+		FLocal::AddPlayModeMenuEntry(MenuBuilder, PlayMode_InVR);
 		FLocal::AddPlayModeMenuEntry(MenuBuilder, PlayMode_InNewProcess);
 		FLocal::AddPlayModeMenuEntry(MenuBuilder, PlayMode_Simulate);
 	}
@@ -992,6 +1010,11 @@
 	case PlayMode_InNewProcess:
 		Command = Commands.PlayInNewProcess.ToSharedRef();
 		break;
+
+	case PlayMode_InVR:
+		Command = Commands.PlayInVR.ToSharedRef();
+		break;
+
 	case PlayMode_Simulate:
 		Command = Commands.Simulate.ToSharedRef();
 	}
@@ -1202,6 +1225,56 @@
 	return !HasPlayWorld() || !GUnrealEd->bIsSimulatingInEditor;
 }
 
+void FInternalPlayWorldCommandCallbacks::PlayInVR_Clicked()
+{
+	FLevelEditorModule& LevelEditorModule = FModuleManager::GetModuleChecked<FLevelEditorModule>(TEXT("LevelEditor"));
+
+	SetLastExecutedPlayMode(PlayMode_InVR);
+
+	// Is a PIE session already running?  If not, then we'll kick off a new one
+	if (!HasPlayWorld())
+	{
+		RecordLastExecutedPlayMode();
+
+		const bool bAtPlayerStart = (GetPlayModeLocation() == PlayLocation_DefaultPlayerStart);
+		const bool bSimulateInEditor = false;
+
+		const FVector* StartLoc = NULL;
+		const FRotator* StartRot = NULL;
+
+		if (!bAtPlayerStart)
+		{
+			TSharedPtr<ILevelViewport> ActiveLevelViewport = LevelEditorModule.GetFirstActiveViewport();
+
+			// Make sure we can find a path to the view port.  This will fail in cases where the view port widget
+			// is in a backgrounded tab, etc.  We can't currently support starting PIE in a backgrounded tab
+			// due to how PIE manages focus and requires event forwarding from the application.
+			if (ActiveLevelViewport.IsValid() &&
+				FSlateApplication::Get().FindWidgetWindow(ActiveLevelViewport->AsWidget()).IsValid())
+			{
+				// Start the player where the camera is if not forcing from player start
+				StartLoc = &ActiveLevelViewport->GetLevelViewportClient().GetViewLocation();
+				StartRot = &ActiveLevelViewport->GetLevelViewportClient().GetViewRotation();
+			}
+		}
+
+		const bool bHMDIsReady = (GEngine && GEngine->HMDDevice.IsValid() && GEngine->HMDDevice->IsHMDConnected());
+		// Spawn a new window to play in.
+		GUnrealEd->RequestPlaySession(bAtPlayerStart, NULL, bSimulateInEditor, StartLoc, StartRot, -1, false, bHMDIsReady);
+	}
+	else
+	{
+		// Terminate existing session
+		GUnrealEd->EndPlayMap();
+	}
+}
+
+
+bool FInternalPlayWorldCommandCallbacks::PlayInVR_CanExecute()
+{
+	return (!HasPlayWorld() || !GUnrealEd->bIsSimulatingInEditor) && GEngine && GEngine->HMDDevice.IsValid();
+}
+
 
 void FInternalPlayWorldCommandCallbacks::PlayInNewProcess_Clicked( bool MobilePreview )
 {
@@ -1650,6 +1723,10 @@
 	return !HasPlayWorld();
 }
 
+bool FInternalPlayWorldCommandCallbacks::CanShowVROnlyActions()
+{
+	return !HasPlayWorld() && GEngine && GEngine->HMDDevice.IsValid();
+}
 
 bool FInternalPlayWorldCommandCallbacks::HasPlayWorld()
 {
--- ../../../../UE4-QA/Engine/Source/Editor/UnrealEd/Private/PlayLevel.cpp	2014-10-30 09:20:04.000000000 -0700
+++ ./Engine/Source/Editor/UnrealEd/Private/PlayLevel.cpp	2014-11-20 16:50:51.000000000 -0800
@@ -47,6 +47,11 @@
 
 void UEditorEngine::EndPlayMap()
 {
+	if (GEngine->HMDDevice.IsValid())
+	{
+		GEngine->HMDDevice->OnEndPlay();
+	}
+
 	// Matinee must be closed before PIE can stop - matinee during PIE will be editing a PIE-world actor
 	if( GLevelEditorModeTools().IsModeActive(FBuiltinEditorModes::EM_InterpEdit) )
 	{
@@ -195,11 +200,6 @@
 		EditorWorld->GetNavigationSystem()->OnPIEEnd();
 	}
 
-	if (GEngine->HMDDevice.IsValid())
-	{
-		GEngine->HMDDevice->OnEndPlay();
-	}
-
 	EditorWorld->bAllowAudioPlayback = true;
 	EditorWorld = NULL;
 
@@ -545,6 +545,7 @@
 
 	// Set whether or not we want to use mobile preview mode (PC platform only)
 	bUseMobilePreviewForPlayWorld = bUseMobilePreview;
+	bUseVRPreviewForPlayWorld = false;
 
 	// Set whether or not we want to start movie capturing immediately (PC platform only)
 	bStartMovieCapture = bMovieCapture;
@@ -560,7 +561,7 @@
 }
 
 
-void UEditorEngine::RequestPlaySession( bool bAtPlayerStart, TSharedPtr<class ILevelViewport> DestinationViewport, bool bInSimulateInEditor, const FVector* StartLocation, const FRotator* StartRotation, int32 DestinationConsole, bool bUseMobilePreview )
+void UEditorEngine::RequestPlaySession( bool bAtPlayerStart, TSharedPtr<class ILevelViewport> DestinationViewport, bool bInSimulateInEditor, const FVector* StartLocation, const FRotator* StartRotation, int32 DestinationConsole, bool bUseMobilePreview, bool bUseVRPreview )
 {
 	// Remember whether or not we were attempting to play from playerstart or from viewport
 	GIsPIEUsingPlayerStart = bAtPlayerStart;
@@ -588,6 +589,8 @@
 	// Set whether or not we want to use mobile preview mode (PC platform only)
 	bUseMobilePreviewForPlayWorld = bUseMobilePreview;
 
+	bUseVRPreviewForPlayWorld = bUseVRPreview;
+
 	// Not capturing a movie
 	bStartMovieCapture = false;
 
@@ -2581,11 +2584,26 @@
 					CenterNewWindow = true;
 				}
 
+				bool bUseOSWndBorder = false;
+				bool bRenderDirectlyToWindow = false;
+				bool bEnableStereoRendering = false;
+				if (bUseVRPreviewForPlayWorld)
+				{
+					// modify window and viewport properties for VR.
+					bUseOSWndBorder = true;
+					bRenderDirectlyToWindow = true;
+					bEnableStereoRendering = true;
+					CenterNewWindow = true;
+				}
+
 				TSharedRef<SWindow> PieWindow = SNew(SWindow)
 					.Title(ViewportName)
 					.ScreenPosition(FVector2D( NewWindowPosition.X, NewWindowPosition.Y ))
 					.ClientSize(FVector2D( NewWindowWidth, NewWindowHeight ))
-					.AutoCenter(CenterNewWindow ? EAutoCenter::PreferredWorkArea : EAutoCenter::None);
+					.AutoCenter(CenterNewWindow ? EAutoCenter::PreferredWorkArea : EAutoCenter::None)
+					.UseOSWindowBorder(bUseOSWndBorder)
+					.SizingRule(ESizingRule::UserSized);
+
 
 				// Setup a delegate for switching to the play world on slate input events, drawing and ticking
 				FOnSwitchWorldHack OnWorldSwitch = FOnSwitchWorldHack::CreateUObject( this, &UEditorEngine::OnSwitchWorldForSlatePieWindow );
@@ -2600,6 +2618,8 @@
 					SNew( SViewport )
 						.IsEnabled(FSlateApplication::Get().GetNormalExecutionAttribute())
 						.EnableGammaCorrection( false )// Gamma correction in the game is handled in post processing in the scene renderer
+						.RenderDirectlyToWindow( bRenderDirectlyToWindow )
+						.EnableStereoRendering( bEnableStereoRendering )
 						[
 							SNew(SScissorRectBox)
 							[
@@ -2651,6 +2671,16 @@
 
 							// Route the callback
 							PIEViewportWidget.Pin()->OnWindowClosed( WindowBeingClosed );
+
+							if (PIEViewportWidget.Pin()->IsStereoRenderingAllowed() && GEngine->HMDDevice.IsValid())
+							{
+								// restore previously minimized root window.
+								TSharedPtr<SWindow> RootWindow = FGlobalTabmanager::Get()->GetRootWindow();
+								if (RootWindow.IsValid())
+								{
+									RootWindow->Restore();
+								}
+							}
 						}
 					};
 				
@@ -2673,6 +2703,18 @@
 
 				// Ensure the window has a valid size before calling BeginPlay
 				SlatePlayInEditorSession.SlatePlayInEditorWindowViewport->ResizeFrame( PieWindow->GetSizeInScreen().X, PieWindow->GetSizeInScreen().Y, EWindowMode::Windowed, PieWindow->GetPositionInScreen().X, PieWindow->GetPositionInScreen().Y );
+
+				if (bUseVRPreviewForPlayWorld && GEngine->HMDDevice.IsValid())
+				{
+					GEngine->HMDDevice->EnableStereo(true);
+
+					// minimize the root window to provide max performance for the preview.
+					TSharedPtr<SWindow> RootWindow = FGlobalTabmanager::Get()->GetRootWindow();
+					if (RootWindow.IsValid())
+					{
+						RootWindow->Minimize();
+					}
+				}
 			}
 		}
 	}
--- ../../../../UE4-QA/Engine/Source/Editor/UnrealEd/Public/Kismet2/DebuggerCommands.h	2014-06-13 02:10:12.000000000 -0700
+++ ./Engine/Source/Editor/UnrealEd/Public/Kismet2/DebuggerCommands.h	2014-11-13 17:20:18.000000000 -0800
@@ -45,6 +45,7 @@
 	TSharedPtr<FUICommandInfo> RepeatLastPlay;
 	TSharedPtr<FUICommandInfo> PlayInViewport;
 	TSharedPtr<FUICommandInfo> PlayInEditorFloating;
+	TSharedPtr<FUICommandInfo> PlayInVR;
 	TSharedPtr<FUICommandInfo> PlayInMobilePreview;
 	TSharedPtr<FUICommandInfo> PlayInNewProcess;
 	TSharedPtr<FUICommandInfo> PlayInCameraLocation;
--- ../../../../UE4-QA/Engine/Source/Runtime/AIModule/Private/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.cpp	2014-10-24 05:46:57.000000000 -0700
+++ ./Engine/Source/Runtime/AIModule/Private/EnvironmentQuery/Generators/EnvQueryGenerator_BlueprintBase.cpp	2014-12-03 19:32:02.576830100 -0800
@@ -50,14 +50,12 @@
 void UEnvQueryGenerator_BlueprintBase::AddGeneratedVector(FVector Vector)
 {
 	check(CachedQueryInstance);
-	ensure(ItemType->GetClass()->IsChildOf(UEnvQueryItemType_VectorBase::StaticClass()));
 	CachedQueryInstance->AddItemData<UEnvQueryItemType_Point>(Vector);
 }
 
 void UEnvQueryGenerator_BlueprintBase::AddGeneratedActor(AActor* Actor)
 {
 	check(CachedQueryInstance);
-	//ensure(ItemType->GetClass()->IsChildOf(UEnvQueryItemType_ActorBase::StaticClass()));
 	CachedQueryInstance->AddItemData<UEnvQueryItemType_Actor>(Actor);
 }
 
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Classes/Engine/Engine.h	2014-11-04 16:01:27.000000000 -0800
+++ ./Engine/Source/Runtime/Engine/Classes/Engine/Engine.h	2014-11-15 19:41:55.000000000 -0800
@@ -2007,8 +2007,8 @@
 	/** @return whether we're currently running in split screen (more than one local player) */
 	bool IsSplitScreen(UWorld *InWorld);
 
-	/** @return whether we're currently running with stereoscopic 3D enabled */
-	bool IsStereoscopic3D();
+	/** @return whether we're currently running with stereoscopic 3D enabled for the specified viewport (or globally, if viewport is NULL) */
+	bool IsStereoscopic3D(FViewport* InViewport = nullptr);
 
 	/**
 	 * Adds a world location as a secondary view location for purposes of texture streaming.
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Classes/Engine/LocalPlayer.h	2014-10-08 16:45:12.000000000 -0700
+++ ./Engine/Source/Runtime/Engine/Classes/Engine/LocalPlayer.h	2014-11-20 15:54:20.000000000 -0800
@@ -218,7 +218,7 @@
 	 * Retrieve the viewpoint of this player.
 	 * @param OutViewInfo - Upon return contains the view information for the player.
 	 */
-	void GetViewPoint(FMinimalViewInfo& OutViewInfo);
+	void GetViewPoint(FMinimalViewInfo& OutViewInfo, EStereoscopicPass StereoPass);
 
 	/** @todo document */
 	void ExecMacro( const TCHAR* Filename, FOutputDevice& Ar );
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Private/GameEngine.cpp	2014-11-12 06:11:48.000000000 -0800
+++ ./Engine/Source/Runtime/Engine/Private/GameEngine.cpp	2014-11-20 15:54:53.000000000 -0800
@@ -115,6 +115,7 @@
 			// Render directly to the window backbuffer unless capturing a movie or getting screenshots
 			// @todo TEMP
 			.RenderDirectlyToWindow( !GEngine->bStartWithMatineeCapture && GIsDumpingMovie == 0 )
+			.EnableStereoRendering(true)
 			[
 				SNew(SDPIScaler)
 				.DPIScale(TAttribute<float>::Create(TAttribute<float>::FGetter::CreateUObject(this, &UGameEngine::GetGameViewportDPIScale, GameViewportClient)))
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Private/GameViewportClient.cpp	2014-11-24 18:01:17.000000000 -0800
+++ ./Engine/Source/Runtime/Engine/Private/GameViewportClient.cpp	2014-12-03 19:33:33.391830100 -0800
@@ -676,7 +676,7 @@
 	DebugCanvasObject->Canvas = DebugCanvas;	
 	DebugCanvasObject->Init(InViewport->GetSizeXY().X, InViewport->GetSizeXY().Y, NULL);
 
-	const bool bScaledToRenderTarget = GEngine->HMDDevice.IsValid() && GEngine->IsStereoscopic3D();
+	const bool bScaledToRenderTarget = GEngine->HMDDevice.IsValid() && GEngine->IsStereoscopic3D(InViewport);
 	if (bScaledToRenderTarget)
 	{
 		// Allow HMD to modify screen settings
@@ -739,7 +739,7 @@
 		.SetRealtimeUpdate(true));
 
 	// Allow HMD to modify the view later, just before rendering
-	if (GEngine->HMDDevice.IsValid() && GEngine->IsStereoscopic3D())
+	if (GEngine->HMDDevice.IsValid() && GEngine->IsStereoscopic3D(InViewport))
 	{
 		ISceneViewExtension* HmdViewExt = GEngine->HMDDevice->GetViewExtension();
 		if (HmdViewExt)
@@ -768,7 +768,7 @@
 			ULocalPlayer* LocalPlayer = Cast<ULocalPlayer>(PlayerController->Player);
 			if (LocalPlayer)
 			{
-				const bool bEnableStereo = GEngine->IsStereoscopic3D();
+				const bool bEnableStereo = GEngine->IsStereoscopic3D(InViewport);
 				int32 NumViews = bEnableStereo ? 2 : 1;
 
 				for( int i = 0; i < NumViews; ++i )
@@ -990,7 +990,7 @@
 
 							DebugCanvasObject->SceneView = View;
 							PlayerController->MyHUD->SetCanvas(CanvasObject, DebugCanvasObject);
-							if (GEngine->IsStereoscopic3D())
+							if (GEngine->IsStereoscopic3D(InViewport))
 							{
 								check(GEngine->StereoRenderingDevice.IsValid());
 								GEngine->StereoRenderingDevice->PushViewportCanvas(eSSP_LEFT_EYE, SceneCanvas, CanvasObject, Viewport);
@@ -1065,7 +1065,7 @@
 		// Render the console.
 		if (ViewportConsole)
 		{
-			if (GEngine->IsStereoscopic3D())
+			if (GEngine->IsStereoscopic3D(InViewport))
 			{
 				GEngine->StereoRenderingDevice->PushViewportCanvas(eSSP_LEFT_EYE, DebugCanvas, DebugCanvasObject, Viewport);
 				ViewportConsole->PostRender_Console(DebugCanvasObject);
@@ -1112,7 +1112,7 @@
 		}
 	}
 
-	if (GEngine->IsStereoscopic3D())
+	if (GEngine->IsStereoscopic3D(InViewport))
 	{
 		GEngine->StereoRenderingDevice->PushViewportCanvas(eSSP_LEFT_EYE, DebugCanvas, DebugCanvasObject, InViewport);
 		DrawStatsHUD(GetWorld(), InViewport, DebugCanvas, DebugCanvasObject, DebugProperties, PlayerCameraLocation, PlayerCameraRotation);
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Private/LocalPlayer.cpp	2014-10-30 12:30:33.000000000 -0700
+++ ./Engine/Source/Runtime/Engine/Private/LocalPlayer.cpp	2014-11-20 15:50:32.000000000 -0800
@@ -404,7 +404,7 @@
 			else
 			{
 				FMinimalViewInfo MinViewInfo;
-				Player->GetViewPoint(MinViewInfo);
+				Player->GetViewPoint(MinViewInfo, eSSP_FULL);
 				PlayerState.ViewPoint.Location = MinViewInfo.Location;
 				PlayerState.ViewPoint.Rotation = MinViewInfo.Rotation;
 				PlayerState.ViewPoint.FOV = MinViewInfo.FOV;
@@ -422,7 +422,7 @@
 			else
 			{
 				FMinimalViewInfo MinViewInfo;
-				Player->GetViewPoint(MinViewInfo);
+				Player->GetViewPoint(MinViewInfo, eSSP_FULL);
 				PlayerState.ViewPoint.Location = MinViewInfo.Location;
 				PlayerState.ViewPoint.Rotation = MinViewInfo.Rotation;
 				PlayerState.ViewPoint.FOV = MinViewInfo.FOV;
@@ -618,7 +618,7 @@
 	FConsoleCommandDelegate::CreateStatic(FLockedViewState::CopyLockedViews)
 	);
 
-void ULocalPlayer::GetViewPoint(FMinimalViewInfo& OutViewInfo)
+void ULocalPlayer::GetViewPoint(FMinimalViewInfo& OutViewInfo, EStereoscopicPass StereoPass)
 {
 	if (FLockedViewState::Get().GetViewPoint(this, OutViewInfo.Location, OutViewInfo.Rotation, OutViewInfo.FOV) == false
 		&& PlayerController != NULL)
@@ -636,7 +636,7 @@
 	}
 
     // allow HMDs to override fov
-    if (GEngine->HMDDevice.IsValid() && GEngine->IsStereoscopic3D())
+    if (StereoPass != eSSP_FULL && GEngine->HMDDevice.IsValid() && GEngine->IsStereoscopic3D())
     {
 		float HFOV, VFOV;
         GEngine->HMDDevice->GetFieldOfView(HFOV, VFOV);
@@ -681,7 +681,7 @@
 	// Get the viewpoint...technically doing this twice
 	// but it makes GetProjectionData better
 	FMinimalViewInfo ViewInfo;
-	GetViewPoint(ViewInfo);
+	GetViewPoint(ViewInfo, StereoPass);
 	
 	OutViewLocation = ViewInfo.Location;
 	OutViewRotation = ViewInfo.Rotation;
@@ -972,10 +972,10 @@
 
 	// Get the viewpoint.
 	FMinimalViewInfo ViewInfo;
-	GetViewPoint(/*out*/ ViewInfo);
+	GetViewPoint(/*out*/ ViewInfo, StereoPass);
 
 	// If stereo rendering is enabled, update the size and offset appropriately for this pass
-	const bool bNeedStereo = GEngine->IsStereoscopic3D() && (StereoPass != eSSP_FULL);
+	const bool bNeedStereo = (StereoPass != eSSP_FULL) && GEngine->IsStereoscopic3D();
 	if( bNeedStereo )
 	{
 		GEngine->StereoRenderingDevice->AdjustViewRect(StereoPass, X, Y, SizeX, SizeY);
@@ -985,7 +985,7 @@
 	PlayerController->LocalPlayerCachedLODDistanceFactor = ViewInfo.FOV / FMath::Max<float>(0.01f, (PlayerController->PlayerCameraManager != NULL) ? PlayerController->PlayerCameraManager->DefaultFOV : 90.f);
 	
     FVector StereoViewLocation = ViewInfo.Location;
-    if ((GEngine->IsStereoscopic3D() && StereoPass != eSSP_FULL) || (GEngine->HMDDevice.IsValid() && GEngine->HMDDevice->IsHeadTrackingAllowed()))
+    if (bNeedStereo || (GEngine->HMDDevice.IsValid() && GEngine->HMDDevice->IsHeadTrackingAllowed()))
     {
         GEngine->StereoRenderingDevice->CalculateStereoViewOffset(StereoPass, ViewInfo.Rotation, GetWorld()->GetWorldSettings()->WorldToMeters, StereoViewLocation);
     }
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Private/Slate/SceneViewport.cpp	2014-11-21 13:42:05.000000000 -0800
+++ ./Engine/Source/Runtime/Engine/Private/Slate/SceneViewport.cpp	2014-12-04 15:03:41.792792700 -0800
@@ -9,7 +9,6 @@
 
 #include "IHeadMountedDisplay.h"
 
-extern int32 GetBoundFullScreenModeCVar();
 extern EWindowMode::Type GetWindowModeType(EWindowMode::Type WindowMode);
 
 FSceneViewport::FSceneViewport( FViewportClient* InViewportClient, TSharedPtr<SViewport> InViewportWidget )
@@ -846,13 +845,12 @@
 			// scaling so we actual render to the resolution we've been asked for.
 			if (DesiredWindowMode == EWindowMode::WindowedFullscreen)
 			{
-				FSlateRect Rect = WindowToResize->GetFullScreenInfo();
-				if (Rect.IsValid())
-				{
-					NewSizeX = Rect.GetSize().X;
-					NewSizeY = Rect.GetSize().Y;
-				}
+				FDisplayMetrics DisplayMetrics;
+				FSlateApplication::Get().GetInitialDisplayMetrics(DisplayMetrics);
+				NewSizeX = DisplayMetrics.PrimaryDisplayWidth;;
+				NewSizeY = DisplayMetrics.PrimaryDisplayHeight;;
 			}
+
 			uint32 ViewportSizeX = NewSizeX;
 			uint32 ViewportSizeY = NewSizeY;
 
@@ -966,6 +964,15 @@
 	return FSlateApplication::Get().FindWidgetWindow(ViewportWidget.Pin().ToSharedRef());
 }
 
+bool FSceneViewport::IsStereoRenderingAllowed() const
+{
+	if (ViewportWidget.IsValid())
+	{
+		return ViewportWidget.Pin()->IsStereoRenderingAllowed();
+	}
+	return false;
+}
+
 void FSceneViewport::ResizeViewport(uint32 NewSizeX, uint32 NewSizeY, EWindowMode::Type NewWindowMode, int32 InPosX, int32 InPosY)
 {
 	// Do not resize if the viewport is an invalid size or our UI should be responsive
@@ -1072,7 +1079,7 @@
 	check( IsInGameThread() );
 
 	// check if we need to reallocate rendertarget for HMD and update HMD rendering viewport 
-	if (!GIsEditor && GEngine->StereoRenderingDevice.IsValid())
+	if (GEngine->StereoRenderingDevice.IsValid() && IsStereoRenderingAllowed())
 	{
 		bool bNewUseSepRenTarget = GEngine->StereoRenderingDevice->ShouldUseSeparateRenderTarget();
 		if (bNewUseSepRenTarget != bUseSeparateRenderTarget ||
@@ -1091,7 +1098,7 @@
 	// If we dont have the ViewportRHI then we need to get it before rendering
 	// Note, we need ViewportRHI even if bUseSeparateRenderTarget is true when stereo rendering
 	// is enabled.
-	if( !IsValidRef(ViewportRHI) && (!bUseSeparateRenderTarget || (GEngine->StereoRenderingDevice.IsValid() && GEngine->StereoRenderingDevice->ShouldUseSeparateRenderTarget()) ))
+	if( !IsValidRef(ViewportRHI) )
 	{
 		// Get the viewport for this window from the renderer so we can render directly to the backbuffer
 		TSharedPtr<FSlateRenderer> Renderer = FSlateApplication::Get().GetRenderer();
@@ -1203,7 +1210,7 @@
 	if( bUseSeparateRenderTarget )
 	{
 		uint32 TexSizeX = SizeX, TexSizeY = SizeY;
-		if (GEngine->StereoRenderingDevice.IsValid() && GEngine->StereoRenderingDevice->IsStereoEnabled())
+		if (GEngine->IsStereoscopic3D(this))
 		{
 			GEngine->StereoRenderingDevice->CalculateRenderTargetSize(TexSizeX, TexSizeY);
 		}
@@ -1215,11 +1222,11 @@
 		if( !SlateRenderTargetHandle )
 		{
 			SlateRenderTargetHandle = new FSlateRenderTargetRHI( ShaderResourceTextureRHI, TexSizeX, TexSizeY );
-//			UE_LOG(LogSlate, Log, TEXT("SRTH: %p, %d x %d"), ShaderResourceTextureRHI.GetReference(), TexSizeX, TexSizeY);
+			UE_LOG(LogSlate, Log, TEXT("SRTH: %p, %d x %d"), ShaderResourceTextureRHI.GetReference(), TexSizeX, TexSizeY);
 		}
 		else
 		{
-//			UE_LOG(LogSlate, Log, TEXT("SRTH: %p, %d x %d, prev %p"), ShaderResourceTextureRHI.GetReference(), TexSizeX, TexSizeY, SlateRenderTargetHandle->GetRHIRef().GetReference());
+			UE_LOG(LogSlate, Log, TEXT("SRTH: %p, %d x %d, prev %p"), ShaderResourceTextureRHI.GetReference(), TexSizeX, TexSizeY, SlateRenderTargetHandle->GetRHIRef().GetReference());
 			SlateRenderTargetHandle->SetRHIRef( ShaderResourceTextureRHI, TexSizeX, TexSizeY );
 		}
 
@@ -1227,7 +1234,7 @@
 		if (Window.IsValid())
 		{
 			// We need to pass a texture to the renderer only for stereo rendering. Otherwise, Editor will be rendered incorrectly.
-			if (GEngine->StereoRenderingDevice.IsValid() && GEngine->StereoRenderingDevice->IsStereoEnabled())
+			if (GEngine->IsStereoscopic3D(this))
 			{
 				Renderer->SetWindowRenderTarget(*Window, RenderTargetTextureRHI);
 			}
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Private/UnrealEngine.cpp	2014-11-12 14:34:06.000000000 -0800
+++ ./Engine/Source/Runtime/Engine/Private/UnrealEngine.cpp	2014-11-20 16:19:45.000000000 -0800
@@ -930,6 +930,9 @@
 	}
 
 	delete ScreenSaverInhibitorRunnable;
+
+	StereoRenderingDevice.Reset();
+	HMDDevice.Reset();
 }
 
 void UEngine::TickDeferredCommands()
@@ -1720,7 +1723,7 @@
 
 bool UEngine::InitializeHMDDevice()
 {
-	if (!GIsEditor)
+	//if (!GIsEditor)
 	{
 		if (FParse::Param(FCommandLine::Get(), TEXT("emulatestereo")))
 		{
@@ -1762,7 +1765,7 @@
 bool UEngine::IsSplitScreen(UWorld *InWorld)
 {
 	if (InWorld == NULL)
-{
+	{
 		// If no specified world, return true if any world context has multiple local players
 		for (auto It = WorldList.CreateIterator(); It; ++It)
 		{
@@ -1779,9 +1782,10 @@
 }
 
 /** @return whether we're currently running with stereoscopic 3D enabled */
-bool UEngine::IsStereoscopic3D()
+bool UEngine::IsStereoscopic3D(FViewport* InViewport)
 {
-	return !GIsEditor && StereoRenderingDevice.IsValid() && StereoRenderingDevice->IsStereoEnabled();
+	return (!InViewport || InViewport->IsStereoRenderingAllowed()) &&
+		   (StereoRenderingDevice.IsValid() && StereoRenderingDevice->IsStereoEnabled());
 }
 
 ULocalPlayer* GetLocalPlayerFromControllerId_local(const TArray<class ULocalPlayer*>& GamePlayers, int32 ControllerId)
@@ -6662,7 +6666,7 @@
 
 	//@todo joeg: Move this stuff to a function, make safe to use on consoles by
 	// respecting the various safe zones, and make it compile out.
-	const int32 FPSXOffset	= (GEngine->IsStereoscopic3D()) ? Viewport->GetSizeXY().X * 0.5f * 0.334f : (FPlatformProperties::SupportsWindowedMode() ? 110 : 250);
+	const int32 FPSXOffset	= (GEngine->IsStereoscopic3D(Viewport)) ? Viewport->GetSizeXY().X * 0.5f * 0.334f : (FPlatformProperties::SupportsWindowedMode() ? 110 : 250);
 	const int32 StatsXOffset	= FPlatformProperties::SupportsWindowedMode() ?  4 : 100;
 
 	int32 MessageY = 35;
@@ -6856,7 +6860,7 @@
 
 	{
 		int32 X = (CanvasObject) ? CanvasObject->SizeX - FPSXOffset : Viewport->GetSizeXY().X - FPSXOffset; //??
-		int32 Y = (GEngine->IsStereoscopic3D()) ? FMath::TruncToInt(Viewport->GetSizeXY().Y * 0.40f) : FMath::TruncToInt(Viewport->GetSizeXY().Y * 0.20f);
+		int32 Y = (GEngine->IsStereoscopic3D(Viewport)) ? FMath::TruncToInt(Viewport->GetSizeXY().Y * 0.40f) : FMath::TruncToInt(Viewport->GetSizeXY().Y * 0.20f);
 
 		//give the viewport first shot at drawing stats
 		Y = Viewport->DrawStatsHUD(Canvas, X, Y);
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Private/UserInterface/Canvas.cpp	2014-11-05 08:00:04.000000000 -0800
+++ ./Engine/Source/Runtime/Engine/Private/UserInterface/Canvas.cpp	2014-11-15 19:43:45.000000000 -0800
@@ -1725,20 +1725,18 @@
 	SceneView = InView;
 	if (InView)
 	{
-		if (GEngine->StereoRenderingDevice.IsValid() && GEngine->IsStereoscopic3D() && HmdOrientation != FQuat::Identity)
+		if (GEngine->StereoRenderingDevice.IsValid() && InView->StereoPass != eSSP_FULL && HmdOrientation != FQuat::Identity)
 		{
 			GEngine->StereoRenderingDevice->InitCanvasFromView(InView, this);
 		}
 		else
 		{
 			ViewProjectionMatrix = InView->ViewProjectionMatrix;
-			//ViewRotation = InView->ViewRotation;
 		}
 	}
 	else
 	{
 		ViewProjectionMatrix.SetIdentity();
-		//ViewRotation = FRotator(0,0,0);
 	}
 }
 
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Public/Slate/SceneViewport.h	2014-10-30 08:57:20.000000000 -0700
+++ ./Engine/Source/Runtime/Engine/Public/Slate/SceneViewport.h	2014-11-15 19:20:34.000000000 -0800
@@ -212,6 +212,10 @@
 	
 	void SetViewportSize(uint32 NewSizeX,uint32 NewSizeY);
 	TSharedPtr<SWindow> FindWindow();
+
+	/** Should return true, if stereo rendering is allowed in this viewport */
+	virtual bool IsStereoRenderingAllowed() const;
+
 private:
 	/**
 	 * Called when this viewport is destroyed
--- ../../../../UE4-QA/Engine/Source/Runtime/Engine/Public/UnrealClient.h	2014-10-21 08:38:37.000000000 -0700
+++ ./Engine/Source/Runtime/Engine/Public/UnrealClient.h	2014-11-15 19:19:58.000000000 -0800
@@ -503,6 +503,9 @@
   	 **/
 	ENGINE_API bool TakeHighResScreenShot();
 
+	/** Should return true, if stereo rendering is allowed in this viewport */
+	virtual bool IsStereoRenderingAllowed() const { return false; }
+
 protected:
 
 	/** The viewport's client. */
--- ../../../../UE4-QA/Engine/Source/Runtime/Renderer/Private/ForwardShadingRenderer.cpp	2014-10-27 10:59:45.000000000 -0700
+++ ./Engine/Source/Runtime/Renderer/Private/ForwardShadingRenderer.cpp	2014-11-15 20:04:31.000000000 -0800
@@ -184,7 +184,7 @@
 		// Finish rendering for each view, or the full stereo buffer if enabled
 		if (ViewFamily.bResolveScene)
 		{
-			if (GEngine->IsStereoscopic3D())
+			if (ViewFamily.EngineShowFlags.StereoRendering)
 			{
 				check(Views.Num() > 1);
 
--- ../../../../UE4-QA/Engine/Source/Runtime/Slate/Private/Widgets/SViewport.cpp	2014-10-28 16:35:08.000000000 -0700
+++ ./Engine/Source/Runtime/Slate/Private/Widgets/SViewport.cpp	2014-11-13 10:51:08.000000000 -0800
@@ -11,6 +11,7 @@
 SViewport::SViewport()
 	: bRenderDirectlyToWindow(false)
 	, bEnableGammaCorrection(true)
+	, bEnableStereoRendering(false)
 { }
 
 
@@ -23,6 +24,7 @@
 	bRenderDirectlyToWindow = InArgs._RenderDirectlyToWindow;
 	bEnableGammaCorrection = InArgs._EnableGammaCorrection;
 	bEnableBlending = InArgs._EnableBlending;
+	bEnableStereoRendering = InArgs._EnableStereoRendering;
 	bIgnoreTextureAlpha = InArgs._IgnoreTextureAlpha;
 	ViewportInterface = InArgs._ViewportInterface;
 	ViewportSize = InArgs._ViewportSize;
--- ../../../../UE4-QA/Engine/Source/Runtime/Slate/Public/Widgets/SViewport.h	2014-10-28 16:35:08.000000000 -0700
+++ ./Engine/Source/Runtime/Slate/Public/Widgets/SViewport.h	2014-11-15 19:22:08.000000000 -0800
@@ -14,6 +14,7 @@
 		, _RenderDirectlyToWindow(false)
 		, _EnableGammaCorrection(true)
 		, _EnableBlending(false)
+		, _EnableStereoRendering(false)
 		, _IgnoreTextureAlpha(true)
 		, _ViewportSize(FVector2D(320.0f, 240.0f))
 	{ }
@@ -36,6 +37,9 @@
 		/** Allow this viewport to blend with its background. */
 		SLATE_ARGUMENT( bool, EnableBlending )
 
+		/** Whether or not to enable stereo rendering. */
+		SLATE_ARGUMENT(bool, EnableStereoRendering )
+
 		/**
 		 * If true, the viewport's texture alpha is ignored when performing blending.  In this case only the viewport tint opacity is used
 		 * If false, the texture alpha is used during blending
@@ -109,6 +113,9 @@
 	/** @return Whether or not this viewport renders directly to the backbuffer */
 	bool ShouldRenderDirectly() const { return bRenderDirectlyToWindow; }
 
+	/** @return Whether or not this viewport supports stereo rendering */
+	bool IsStereoRenderingAllowed() const { return bEnableStereoRendering; }
+
 	/**
 	 * Sets a widget that should become focused when this window is next activated
 	 *
@@ -193,6 +200,9 @@
 	/** Whether or not to blend this viewport with the background. */
 	bool bEnableBlending;
 
+	/** Whether or not to enable stereo rendering. */
+	bool bEnableStereoRendering;
+
 	/** Whether or not to allow texture alpha to be used in blending calculations. */
 	bool bIgnoreTextureAlpha;
 };
--- ../../../../UE4-QA/Engine/Source/Runtime/SlateRHIRenderer/Private/SlateRHIRenderer.cpp	2014-11-21 13:40:48.000000000 -0800
+++ ./Engine/Source/Runtime/SlateRHIRenderer/Private/SlateRHIRenderer.cpp	2014-12-03 19:33:45.750830100 -0800
@@ -345,7 +345,7 @@
 		uint32 ResX = OverrideResX ? OverrideResX : GSystemResolution.ResX;
 		uint32 ResY = OverrideResY ? OverrideResY : GSystemResolution.ResY;
 
-		if(GIsEditor || Window->GetWindowMode() == EWindowMode::WindowedFullscreen)
+		if( (GIsEditor && Window->IsViewportSizeDrivenByWindow()) || Window->GetWindowMode() == EWindowMode::WindowedFullscreen)
 		{
 			ResX = ViewInfo->Width;
 			ResY = ViewInfo->Height;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Include/OVR.h	2014-10-14 13:42:28.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Include/OVR.h	2014-12-03 13:25:22.000000000 -0800
@@ -4,7 +4,7 @@
 Content     :   The main public interface to Oculus for C++ Developers.
                 Includes C API and helper classes.
 
-Copyright   :   Copyright 2014 Oculus VR, Inc. All Rights reserved.
+Copyright   :   Copyright 2014 Oculus VR, LLC. All Rights reserved.
 
 Licensed under the Oculus VR Rift SDK License Version 3.2 (the "License"); 
 you may not use the Oculus VR Rift SDK except in compliance with the License, 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Include/OVR_Kernel.h	2014-10-14 13:42:28.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Include/OVR_Kernel.h	2014-12-03 13:25:22.000000000 -0800
@@ -4,7 +4,7 @@
 Content     :   This contains references to all OVR Kernel headers in Src folder.
                 Should be generated automatically based on PublicHeader tags.
 
-Copyright   :   Copyright 2014 Oculus VR, Inc. All Rights reserved.
+Copyright   :   Copyright 2014 Oculus VR, LLC. All Rights reserved.
 
 Licensed under the Oculus VR Rift SDK License Version 3.2 (the "License"); 
 you may not use the Oculus VR Rift SDK except in compliance with the License, 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Include/OVR_Version.h	2014-10-14 13:42:28.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Include/OVR_Version.h	2014-12-03 13:25:22.000000000 -0800
@@ -3,7 +3,7 @@
 Filename    :   OVRVersion.h
 Content     :
 
-Copyright   :   Copyright 2014 Oculus VR, Inc. All Rights reserved.
+Copyright   :   Copyright 2014 Oculus VR, LLC. All Rights reserved.
 
 Licensed under the Oculus VR Rift SDK License Version 3.2 (the "License");
 you may not use the Oculus VR Rift SDK except in compliance with the License,
@@ -27,8 +27,8 @@
 
 #define OVR_MAJOR_VERSION 0
 #define OVR_MINOR_VERSION 4
-#define OVR_BUILD_VERSION 3
-#define OVR_VERSION_STRING "0.4.3"
+#define OVR_BUILD_VERSION 4
+#define OVR_VERSION_STRING "0.4.4"
 
 #define OVR_DK2_LATEST_FIRMWARE_MAJOR_VERSION 2
 #define OVR_DK2_LATEST_FIRMWARE_MINOR_VERSION 12
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_DistortionRenderer.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_DistortionRenderer.h	2014-12-03 13:25:20.000000000 -0800
@@ -91,10 +91,10 @@
     }
 
 	// Stores the current graphics pipeline state so it can be restored later.
-	void SaveGraphicsState() { if (!(RState.DistortionCaps & ovrDistortionCap_NoRestore)) GfxState->Save(); }
+	void SaveGraphicsState() { if (GfxState && !(RState.DistortionCaps & ovrDistortionCap_NoRestore)) GfxState->Save(); }
 
 	// Restores the saved graphics pipeline state.
-	void RestoreGraphicsState() { if (!(RState.DistortionCaps & ovrDistortionCap_NoRestore)) GfxState->Restore(); }
+	void RestoreGraphicsState() { if (GfxState && !(RState.DistortionCaps & ovrDistortionCap_NoRestore)) GfxState->Restore(); }
 
     // *** Creation Factory logic
     
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_FrameTimeManager.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_FrameTimeManager.h	2014-12-03 13:25:20.000000000 -0800
@@ -202,7 +202,7 @@
     Posef            GetEyePredictionPose(ovrHmd hmd, ovrEyeType eye);
 
     void    GetTimewarpPredictions(ovrEyeType eye, double timewarpStartEnd[2]); 
-    void    GetTimewarpMatrices(ovrHmd hmd, ovrEyeType eye, ovrPosef renderPose, ovrMatrix4f twmOut[2]);
+    void    GetTimewarpMatrices(ovrHmd hmd, ovrEyeType eye, ovrPosef renderPose, ovrMatrix4f twmOut[2],double debugTimingOffsetInSeconds = 0.0);
 
     // Used by renderer to determine if it should time distortion rendering.
     bool    NeedDistortionTimeMeasurement() const;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_HMDRenderState.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_HMDRenderState.h	2014-12-03 13:25:20.000000000 -0800
@@ -65,7 +65,7 @@
 
     // Capabilities passed to Configure.
     unsigned                EnabledHmdCaps;
-    unsigned                DistortionCaps;
+    unsigned                DistortionCaps;     // enum ovrDistortionCaps
 };
 
 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_HMDState.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/CAPI_HMDState.h	2014-12-03 13:25:20.000000000 -0800
@@ -142,6 +142,7 @@
 
     static HMDState* CreateHMDState(Service::NetClient* client, const HMDNetworkInfo& netInfo);
     static HMDState* CreateHMDState(ovrHmdType hmdType); // Used for debug mode
+    static const OVR::List<HMDState>& GetHMDStateList();
 
     // *** Sensor Setup
 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/CAPI_D3D1X_DistortionRenderer.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/CAPI_D3D1X_DistortionRenderer.h	2014-12-03 13:25:20.000000000 -0800
@@ -85,15 +85,23 @@
 		BOOL memoryCleared;
 
 		ID3D1xRasterizerState* rasterizerState;
-		ID3D1xSamplerState* samplerStates[D3D1x_COMMONSHADER_SAMPLER_SLOT_COUNT];
 		ID3D1xInputLayout* inputLayoutState;
 
 		ID3D1xShaderResourceView* psShaderResourceState[D3D1x_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT];
-		ID3D1xShaderResourceView* vsShaderResourceState[D3D1x_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT];
-
+		ID3D1xSamplerState*         psSamplerStates[D3D1x_COMMONSHADER_SAMPLER_SLOT_COUNT];
 		ID3D1xBuffer* psConstantBuffersState[D3D1x_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT];
+
+        ID3D1xShaderResourceView*   vsShaderResourceState[D3D1x_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT];
+		ID3D1xSamplerState*         vsSamplerStates[D3D1x_COMMONSHADER_SAMPLER_SLOT_COUNT];
 		ID3D1xBuffer* vsConstantBuffersState[D3D1x_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT];
 
+#if (OVR_D3D_VERSION == 11)
+        ID3D1xShaderResourceView*   csShaderResourceState[D3D1x_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT];
+		ID3D1xSamplerState*         csSamplerStates[D3D1x_COMMONSHADER_SAMPLER_SLOT_COUNT];
+		ID3D1xBuffer*               csConstantBuffersState[D3D1x_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT];
+		ID3D1xUnorderedAccessView*  csUnorderedAccessViewState[D3D1x_SIMULTANEOUS_RENDER_TARGET_COUNT];
+#endif
+
 		ID3D1xRenderTargetView* renderTargetViewState[D3D1x_SIMULTANEOUS_RENDER_TARGET_COUNT];
 		ID3D1xDepthStencilView* depthStencilViewState;
 
@@ -117,6 +125,7 @@
 #if (OVR_D3D_VERSION == 11)
 		ID3D11HullShader* currentHullShader;
 		ID3D11DomainShader* currentDomainShader;
+		ID3D11ComputeShader* currentComputeShader;
 #endif
 
 	};
@@ -168,6 +177,7 @@
 
 	Ptr<Buffer>         DistortionMeshVBs[2];    // one per-eye
 	Ptr<Buffer>         DistortionMeshIBs[2];    // one per-eye
+	Ptr<Buffer>         DistortionPinBuffer[2];  // one per-eye
 
 	Ptr<ShaderSet>      DistortionShader;
 	Ptr<ID3D1xInputLayout> DistortionVertexIL;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/CAPI_D3D1X_Util.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/CAPI_D3D1X_Util.h	2014-12-03 13:25:20.000000000 -0800
@@ -97,6 +97,13 @@
 typedef ID3D1X(VertexShader)                    ID3D1xVertexShader;
 typedef ID3D1X(PixelShader)                     ID3D1xPixelShader;
 typedef ID3D1X(GeometryShader)                  ID3D1xGeometryShader;
+#if (OVR_D3D_VERSION>=11)
+typedef ID3D1X(UnorderedAccessView)             ID3D1xUnorderedAccessView;
+typedef ID3D1X(ComputeShader)                   ID3D1xComputeShader;
+#else
+// Typedeffing as int saves a lot of checking against DX version numbers when just copying around pointers.
+typedef int                                     ID3D1xUnorderedAccessView;
+#endif
 typedef ID3D1X(BlendState)                      ID3D1xBlendState;
 typedef ID3D1X(RasterizerState)                 ID3D1xRasterizerState;
 typedef ID3D1X(SamplerState)                    ID3D1xSamplerState;
@@ -114,6 +121,7 @@
 static const int D3D1x_SIMULTANEOUS_RENDER_TARGET_COUNT = D3D1X_(SIMULTANEOUS_RENDER_TARGET_COUNT);
 static const int D3D1x_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT = D3D1X_(IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT);
 static const int D3D1x_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT = D3D1X_(COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT);
+
 // Blob is the same
 typedef ID3D10Blob                 ID3D1xBlob;
 
@@ -139,8 +147,9 @@
     ID3D1xDevice*			pDevice;
     ID3D1xDeviceContext*    pContext;
     ID3D1xRenderTargetView* pBackBufferRT;
+    ID3D1xUnorderedAccessView*  pBackBufferUAV;
     IDXGISwapChain*         pSwapChain;
-    Sizei                   RTSize;
+    Sizei                       BackBufferSize;
     int                     Multisample;
 };
 
@@ -161,7 +170,8 @@
     Shader_Vertex   = 0,
     Shader_Fragment = 2,
     Shader_Pixel    = 2,
-    Shader_Count    = 3,
+    Shader_Compute  = 3,        // DX11+ only
+    Shader_Count    = 4,
 };
 
 enum MapFlags
@@ -179,6 +189,7 @@
     Buffer_Vertex   = 1,
     Buffer_Index    = 2,
     Buffer_Uniform  = 4,
+    Buffer_Compute  = 8,
     Buffer_TypeMask = 0xff,
     Buffer_ReadOnly = 0x100, // Buffer must be created with Data().
 };
@@ -305,6 +316,13 @@
         Matrix4f mt = m.Transposed();
         return SetUniform(name, 16, &mt.M[0][0]);
     }
+    virtual bool SetUniform3x3f(const char* name, const Matrix4f& m)
+    {
+        // float3x3 is actually stored the same way as float4x3, with the last items ignored by the code.
+        Matrix4f mt = m.Transposed();
+        return SetUniform(name, 12, &mt.M[0][0]);
+    }
+
 };
 
 
@@ -313,7 +331,9 @@
 class ShaderFill : public RefCountBase<ShaderFill>
 {
     Ptr<ShaderSet>     Shaders;
-    Ptr<class Texture> Textures[8];
+    Ptr<class Texture> PsTextures[8];
+    Ptr<class Texture> VsTextures[8];
+    Ptr<class Texture> CsTextures[8];
     void*              InputLayout; // HACK this should be abstracted
 
 public:
@@ -324,7 +344,17 @@
     void*       GetInputLayout() const  { return InputLayout; }
 
     virtual void Set(PrimitiveType prim = Prim_Unknown) const;   
-    virtual void SetTexture(int i, class Texture* tex) { if (i < 8) Textures[i] = tex; }
+
+    virtual void SetTexture(int i, class Texture* tex, ShaderStage stage)
+    {
+        if (i < 8)
+        {
+                 if(stage == Shader_Pixel)  PsTextures[i] = tex;
+            else if(stage == Shader_Vertex) VsTextures[i] = tex;
+            else if(stage == Shader_Compute) CsTextures[i] = tex;
+            else OVR_ASSERT(false);
+        }
+    }
     void SetInputLayout(void* newIL) { InputLayout = (void*)newIL; }
 };
 
@@ -391,6 +421,9 @@
 
 typedef ShaderImpl<Shader_Vertex,  ID3D1xVertexShader> VertexShader;
 typedef ShaderImpl<Shader_Fragment, ID3D1xPixelShader> PixelShader;
+#if (OVR_D3D_VERSION>=11)
+typedef ShaderImpl<Shader_Compute, ID3D1xComputeShader> ComputeShader;
+#endif
 
 
 class Buffer : public RefCountBase<Buffer>
@@ -398,20 +431,43 @@
 public:
     RenderParams*     pParams;
     Ptr<ID3D1xBuffer> D3DBuffer;
+    Ptr<ID3D1xShaderResourceView>   D3DSrv;
+#if (OVR_D3D_VERSION >= 11)
+    Ptr<ID3D1xUnorderedAccessView>  D3DUav;
+#endif
     size_t            Size;
     int               Use;
     bool              Dynamic;
 
 public:
-    Buffer(RenderParams* rp) : pParams(rp), D3DBuffer(), Size(0), Use(0), Dynamic(false) {}
+    Buffer(RenderParams* rp) : pParams(rp), D3DBuffer(), D3DSrv(),
+#if (OVR_D3D_VERSION >= 11)
+                               D3DUav(),
+#endif
+                               Size(0), Use(0), Dynamic(false) {}
     ~Buffer();
 
-    ID3D1xBuffer* GetBuffer() const { return D3DBuffer; }
+    ID3D1xBuffer* GetBuffer() const
+    {
+        return D3DBuffer;
+    }
+
+    ID3D1xShaderResourceView* GetSrv() const
+    {
+        return D3DSrv;
+    }
+
+#if (OVR_D3D_VERSION >= 11)
+    ID3D1xUnorderedAccessView* GetUav() const
+    {
+        return D3DUav;
+    }
+#endif
 
     virtual size_t GetSize()        { return Size; }
     virtual void*  Map(size_t start, size_t size, int flags = 0);
     virtual bool   Unmap(void *m);
-    virtual bool   Data(int use, const void* buffer, size_t size);
+    virtual bool   Data(int use, const void* buffer, size_t size, int computeBufferStride = -1);
 };
 
 
@@ -423,6 +479,7 @@
     Ptr<ID3D1xShaderResourceView>   TexSv;
     Ptr<ID3D1xRenderTargetView>     TexRtv;
     Ptr<ID3D1xDepthStencilView>     TexDsv;
+    // TODO: add UAV...
     mutable Ptr<ID3D1xSamplerState> Sampler;
     Sizei                           TextureSize;
     int                             Samples;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionChroma_ps.h	2014-10-14 13:42:18.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionChroma_ps.h	2014-12-03 13:25:20.000000000 -0800
@@ -2,11 +2,11 @@
 #define DISTORTIONCHROMA_PS_H
 
 static const unsigned char DistortionChroma_ps[] = {
-    0x44, 0x58, 0x42, 0x43, 0x6b, 0x03, 0x24, 0x57, 0x4c, 0xa2, 0x81, 0xe9, 
-    0x83, 0x80, 0x75, 0x87, 0xb2, 0x1e, 0x38, 0xdd, 0x01, 0x00, 0x00, 0x00, 
-    0xfc, 0x0a, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 
+    0x44, 0x58, 0x42, 0x43, 0xb7, 0x5b, 0x09, 0xd5, 0x8c, 0xb3, 0xcf, 0xc9, 
+    0x86, 0xe0, 0x0c, 0x3b, 0x65, 0x14, 0x61, 0x56, 0x01, 0x00, 0x00, 0x00, 
+    0xa4, 0x0b, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 
     0xbc, 0x01, 0x00, 0x00, 0x60, 0x02, 0x00, 0x00, 0xac, 0x02, 0x00, 0x00, 
-    0x80, 0x0a, 0x00, 0x00, 0x52, 0x44, 0x45, 0x46, 0x80, 0x01, 0x00, 0x00, 
+    0x28, 0x0b, 0x00, 0x00, 0x52, 0x44, 0x45, 0x46, 0x80, 0x01, 0x00, 0x00, 
     0x01, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
     0x1c, 0x00, 0x00, 0x00, 0x00, 0x04, 0xff, 0xff, 0x00, 0x01, 0x00, 0x00, 
     0x4c, 0x01, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
@@ -59,8 +59,8 @@
     0x38, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 
     0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0xab, 0xab, 
-    0x53, 0x48, 0x44, 0x52, 0xcc, 0x07, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
-    0xf3, 0x01, 0x00, 0x00, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 
+    0x53, 0x48, 0x44, 0x52, 0x74, 0x08, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
+    0x1d, 0x02, 0x00, 0x00, 0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 
     0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 
     0x00, 0x70, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 
@@ -73,167 +73,181 @@
     0xc2, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 
     0xf2, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x03, 
     0xf2, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x02, 
-    0x08, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x96, 0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
-    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x02, 0x00, 0x00, 0x00, 0xe6, 0x1a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
-    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0b, 0x62, 0x00, 0x10, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x0b, 0x32, 0x00, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0xa6, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x1f, 0x00, 0x04, 0x03, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x0b, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
-    0x0a, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x05, 
-    0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1a, 0x10, 0x10, 0x00, 
-    0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x32, 0x00, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x26, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x1f, 0x00, 0x04, 0x03, 0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x05, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x46, 0x14, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x05, 
+    0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x14, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x80, 0x81, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
     0xa6, 0x8a, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x06, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
-    0xa2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x56, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x96, 0x15, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x10, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
-    0xd6, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0xe6, 0x1a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x86, 0x08, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 
-    0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
+    0x22, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xd2, 0x00, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 
+    0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0xbe, 
+    0xab, 0xaa, 0xaa, 0xbe, 0x00, 0x00, 0x20, 0xbf, 0x00, 0x00, 0x20, 0xbf, 
+    0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 
+    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0xbe, 
+    0xab, 0xaa, 0xaa, 0xbe, 0x00, 0x00, 0x20, 0xbf, 0x00, 0x00, 0x20, 0xbf, 
+    0x46, 0x14, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 
+    0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0xab, 0xaa, 0xaa, 0xbe, 
+    0xab, 0xaa, 0xaa, 0xbe, 0x00, 0x00, 0x20, 0xbf, 0x00, 0x00, 0x20, 0xbf, 
+    0xe6, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
+    0x12, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 0xd2, 0x00, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0x80, 0x40, 0x06, 0x09, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
     0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x05, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 
-    0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x1a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
-    0xd2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 
-    0x05, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
-    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
-    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x86, 0x06, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x00, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
-    0x86, 0x08, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 
-    0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x07, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
     0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
-    0x06, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
     0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 
-    0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
-    0x1a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
-    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xd2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x06, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 
+    0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3f, 
+    0x00, 0x00, 0x20, 0x3f, 0xab, 0xaa, 0xaa, 0x3e, 0xab, 0xaa, 0xaa, 0x3e, 
+    0x96, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 
+    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3f, 
+    0x00, 0x00, 0x20, 0x3f, 0xab, 0xaa, 0xaa, 0x3e, 0xab, 0xaa, 0xaa, 0x3e, 
+    0x46, 0x14, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
     0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 
-    0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x66, 0x06, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
-    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
-    0x46, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0xe6, 0x0a, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x0a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
-    0x22, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 
-    0x07, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x06, 0x82, 0x00, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xa2, 0x00, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0xa6, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
-    0x56, 0x19, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
-    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0c, 
-    0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x66, 0x06, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 
-    0x00, 0x00, 0x80, 0xbf, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0xbf, 
-    0x46, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
-    0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3f, 
+    0x00, 0x00, 0x20, 0x3f, 0xab, 0xaa, 0xaa, 0x3e, 0xab, 0xaa, 0xaa, 0x3e, 
+    0xe6, 0x1e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
+    0x12, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0xe6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0xe6, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x45, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0xe6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
+    0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xd2, 0x00, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3e, 0x4b, 0x00, 0x00, 0x05, 
+    0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x15, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x09, 
-    0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe6, 0x1a, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
-    0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
-    0x04, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
-    0x36, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
-    0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
-    0x22, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
-    0x06, 0x09, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
-    0x06, 0x09, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
-    0x06, 0x09, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xd2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
-    0x06, 0x09, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x0a, 0xd2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x02, 0x40, 0x00, 0x00, 0xcd, 0xcc, 0x4c, 0x3e, 0x00, 0x00, 0x00, 0x00, 
-    0xcd, 0xcc, 0x4c, 0x3e, 0xcd, 0xcc, 0x4c, 0x3e, 0x4b, 0x00, 0x00, 0x05, 
-    0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 
-    0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 
-    0x02, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, 0xb2, 0x00, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x46, 0x08, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x15, 0x00, 0x00, 0x01, 0x38, 0x00, 0x00, 0x07, 0xd2, 0x00, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x06, 0x09, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
     0x06, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x04, 0x03, 
-    0x2a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x05, 
-    0x32, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x05, 
+    0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x10, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08, 0xc2, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x2d, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x2d, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
     0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 
-    0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
-    0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0b, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x86, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x0b, 
     0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
     0x03, 0x00, 0x00, 0x00, 0x06, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x56, 0x85, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
-    0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
     0x06, 0x10, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 
-    0x41, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x20, 0x00, 0x09, 
+    0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x20, 0x00, 0x09, 
     0x72, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
     0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
-    0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
+    0x86, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
     0x82, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
     0x00, 0x00, 0x80, 0x3f, 0x12, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 
-    0x72, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 
+    0x72, 0x20, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 
     0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 
     0x15, 0x00, 0x00, 0x01, 0x36, 0x00, 0x00, 0x05, 0x72, 0x20, 0x10, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x46, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x36, 0x00, 0x00, 0x05, 0x82, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x01, 
     0x53, 0x54, 0x41, 0x54, 0x74, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 
     0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
-    0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
-    0x1d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x1b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
     0x00, 0x00, 0x00, 0x00
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionChroma_ps.psh	2014-10-14 13:39:36.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionChroma_ps.psh	2014-12-03 13:22:36.000000000 -0800
@@ -32,34 +32,41 @@
 float3 ToLinear(float3 inColor) { return inColor * inColor; }
 float3 ToGamma(float3 inColor)	{ return sqrt(inColor); }
 
-float3 ApplyHqAa(float3 inColor, float2 oTexCoord0, float2 oTexCoord1, float2 oTexCoord2)
+void SampleStep(float2 oTexCoord0, float2 oTexCoord1, float2 oTexCoord2, float colorWeight, float2 texOffset,
+				inout float3 totalColor, inout float totalWeight)
 {
-	float2 uvDeriv = float2(ddx(oTexCoord1.x), ddy(oTexCoord1.y)) * AaDerivativeMult;
+	float3 newColor = 0;
+	newColor.r += Texture.Sample(Linear, oTexCoord0 + texOffset).r;
+	newColor.g += Texture.Sample(Linear, oTexCoord1 + texOffset).g;
+	newColor.b += Texture.Sample(Linear, oTexCoord2 + texOffset).b;
+	newColor = ToLinear(newColor);
 		
-	float ResultR = Texture.Sample(Linear, oTexCoord0 + float2(-uvDeriv.x, 0)).r;
-	float ResultG = Texture.Sample(Linear, oTexCoord1 + float2(-uvDeriv.x, 0)).g;
-	float ResultB = Texture.Sample(Linear, oTexCoord2 + float2(-uvDeriv.x, 0)).b;
-	float3 newColor0 = ToLinear(float3(ResultR, ResultG, ResultB));
-	
-	ResultR = Texture.Sample(Linear, oTexCoord0 + float2(uvDeriv.x, 0)).r;
-	ResultG = Texture.Sample(Linear, oTexCoord1 + float2(uvDeriv.x, 0)).g;
-	ResultB = Texture.Sample(Linear, oTexCoord2 + float2(uvDeriv.x, 0)).b;
-	float3 newColor1 = ToLinear(float3(ResultR, ResultG, ResultB));
-
-	ResultR = Texture.Sample(Linear, oTexCoord0 + float2(0, uvDeriv.y)).r;
-	ResultG = Texture.Sample(Linear, oTexCoord1 + float2(0, uvDeriv.y)).g;
-	ResultB = Texture.Sample(Linear, oTexCoord2 + float2(0, uvDeriv.y)).b;
-	float3 newColor2 = ToLinear(float3(ResultR, ResultG, ResultB));
-
-	ResultR = Texture.Sample(Linear, oTexCoord0 + float2(0, -uvDeriv.y)).r;
-	ResultG = Texture.Sample(Linear, oTexCoord1 + float2(0, -uvDeriv.y)).g;
-	ResultB = Texture.Sample(Linear, oTexCoord2 + float2(0, -uvDeriv.y)).b;
-	float3 newColor3 = ToLinear(float3(ResultR, ResultG, ResultB));
-
-	// apply gamma correct averaging
-	float3 outColor = ToLinear(inColor) + newColor0 + newColor1 + newColor2 + newColor3;
-	outColor = ToGamma(outColor * 0.2);
-	return outColor;
+	totalColor += newColor * colorWeight;
+	totalWeight += colorWeight;
+}
+
+float3 ApplyHqAa(float2 oTexCoord0, float2 oTexCoord1, float2 oTexCoord2)
+{
+	float2 texWidth = fwidth(oTexCoord1);
+	float2 texStep = texWidth * AaDerivativeMult;
+
+	float totalWeight = 0;
+	float3 totalColor = 0;
+
+	// center sample
+	SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, 4, 0, totalColor, totalWeight);
+
+	float3 smplExp = 1.0 / 3.0;
+	float3 smplWgt = 1.0;
+
+	SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, smplWgt.x, -1.000 * smplExp.x * texStep, totalColor, totalWeight);
+	//SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, smplWgt.y, -1.250 * smplExp.y * texStep, totalColor, totalWeight);
+	SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, smplWgt.z, -1.875 * smplExp.z * texStep, totalColor, totalWeight);
+	SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, smplWgt.z,  1.875 * smplExp.z * texStep, totalColor, totalWeight);
+	//SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, smplWgt.y,  1.250 * smplExp.y * texStep, totalColor, totalWeight);
+	SampleStep(oTexCoord0, oTexCoord1, oTexCoord2, smplWgt.x,  1.000 * smplExp.x * texStep, totalColor, totalWeight);
+
+	return ToGamma(totalColor.rgb / totalWeight);
 }
 
 void   main(in float4 oPosition  : SV_Position,
@@ -70,24 +77,42 @@
 			out float4 outColor0 : SV_Target0,
 			out float4 outColor1 : SV_Target1)
 {
-#if 0	// enable "SampleMode hqFilter = (distortionCaps ... " in code
+#define USE_ANISO 0
+
+#if USE_ANISO	// enable "SampleMode hqFilter = (distortionCaps ... " in code
 	// Using anisotropic sampling - requires sRGB sampling
+
+	#if 1	// feeding in proper ddx & ddy does not yield better visuals
 	float2 uvDeriv = float2(ddx(oTexCoord1.x), ddy(oTexCoord1.y));
 	float ResultR = Texture.SampleGrad(Linear, oTexCoord0, uvDeriv.x, uvDeriv.y).r;
 	float ResultG = Texture.SampleGrad(Linear, oTexCoord1, uvDeriv.x, uvDeriv.y).g;
 	float ResultB = Texture.SampleGrad(Linear, oTexCoord2, uvDeriv.x, uvDeriv.y).b;
 	float3 newColor = float3(ResultR, ResultG, ResultB);
-#else
-	float ResultR = Texture.Sample(Linear, oTexCoord0).r;
-	float ResultG = Texture.Sample(Linear, oTexCoord1).g;
-	float ResultB = Texture.Sample(Linear, oTexCoord2).b;
+	#else
+		float2 uvDerivX = ddx(oTexCoord1);
+		float2 uvDerivY = ddy(oTexCoord1);
+		float ResultR = Texture.SampleGrad(Linear, oTexCoord0, uvDerivX, uvDerivY).r;
+		float ResultG = Texture.SampleGrad(Linear, oTexCoord1, uvDerivX, uvDerivY).g;
+		float ResultB = Texture.SampleGrad(Linear, oTexCoord2, uvDerivX, uvDerivY).b;
 	float3 newColor = float3(ResultR, ResultG, ResultB);
+	#endif
 
+#else
+
+	float3 newColor;
 	// High quality anti-aliasing in distortion
 	if(AaDerivativeMult > 0)
 	{
-		newColor = ApplyHqAa(newColor, oTexCoord0, oTexCoord1, oTexCoord2);
+		newColor = ApplyHqAa(oTexCoord0, oTexCoord1, oTexCoord2);
+	}
+	else
+	{
+		float ResultR = Texture.Sample(Linear, oTexCoord0).r;
+		float ResultG = Texture.Sample(Linear, oTexCoord1).g;
+		float ResultB = Texture.Sample(Linear, oTexCoord2).b;
+		newColor = float3(ResultR, ResultG, ResultB);
 	}
+
 #endif
 
 	newColor = newColor * oColor.xxx;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionCS2x2.csh	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionCS2x2.csh	2014-12-03 13:22:36.000000000 -0800
@@ -0,0 +1,389 @@
+/************************************************************************************
+
+Filename    :   DistortionCS2x2Pentile.vsh
+
+Copyright   :   Copyright 2014 Oculus VR, LLC All Rights reserved.
+
+Licensed under the Oculus VR Rift SDK License Version 3.2 (the "License"); 
+you may not use the Oculus VR Rift SDK except in compliance with the License, 
+which is provided at the time of installation or download, or which 
+otherwise accompanies this software in either electronic or hard copy form.
+
+You may obtain a copy of the License at
+
+http://www.oculusvr.com/licenses/LICENSE-3.2 
+
+Unless required by applicable law or agreed to in writing, the Oculus VR SDK 
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+
+************************************************************************************/
+
+
+// Note - the only difference between the various Distortion Compute Shaders is these #defines.
+// The code is otherwise identical, so if you change one, rememeber to change the others!
+#define PENTILE_MODE 0
+#define ENABLE_OVERLAY 0
+#define ENABLE_TIMEWARP 1
+
+
+#define GRID_SIZE_IN_PIXELS 16
+#define PINS_PER_EDGE 128
+#define NXN_BLOCK_SIZE_PIXELS 2
+#define SIMD_SQUARE_SIZE 16
+
+
+struct DistortionComputePin
+{
+	float2      TanEyeAnglesR;  
+	float2      TanEyeAnglesG;  
+	float2      TanEyeAnglesB;  
+	int         Color;          
+	int         Padding[1];        
+};
+struct DistortionComputePinUnpacked
+{
+	float2      TanEyeAnglesR;  
+	float2      TanEyeAnglesG;  
+	float2      TanEyeAnglesB;  
+	float       TimewarpLerp;   
+	float       Fade;           
+};
+struct DistortionComputePinTimewarped
+{
+	float2      HmdSpcTexCoordR;  
+	float2      HmdSpcTexCoordG;  
+	float2      HmdSpcTexCoordB;
+#if ENABLE_OVERLAY
+	float2      OverlayTexCoordR;
+	float2      OverlayTexCoordG;
+	float2      OverlayTexCoordB;
+#endif
+};
+
+// Cut'n'pasted from D3DX_DXGIFormatConvert.inl. Obviously we should have #included it, but...
+typedef float4 XMFLOAT4;                                                   
+typedef uint UINT;                                                         
+#define D3DX11INLINE                                                       
+#define hlsl_precise precise                                               
+D3DX11INLINE XMFLOAT4 D3DX_R8G8B8A8_UNORM_to_FLOAT4(UINT packedInput)      
+{                                                                          
+	hlsl_precise XMFLOAT4 unpackedOutput;                                  
+	unpackedOutput.x = (FLOAT)  (packedInput      & 0x000000ff)  / 255;    
+	unpackedOutput.y = (FLOAT)(((packedInput>> 8) & 0x000000ff)) / 255;    
+	unpackedOutput.z = (FLOAT)(((packedInput>>16) & 0x000000ff)) / 255;    
+	unpackedOutput.w = (FLOAT)  (packedInput>>24)                / 255;    
+	return unpackedOutput;                                                 
+}                                                                          
+
+DistortionComputePinUnpacked UnpackPin ( DistortionComputePin src )       
+{                                                                                      
+	DistortionComputePinUnpacked result;                                         
+	result.TanEyeAnglesR = src.TanEyeAnglesR;                                          
+	result.TanEyeAnglesG = src.TanEyeAnglesG;                                          
+	result.TanEyeAnglesB = src.TanEyeAnglesB;                                          
+	float4 tempColor = D3DX_R8G8B8A8_UNORM_to_FLOAT4 ( src.Color );                    
+	result.Fade = tempColor.r * 2.0 - 1.0;                                             
+	result.TimewarpLerp = tempColor.a;                                                 
+	return result;                                                                     
+}                                                                                      
+
+
+float4x4 Padding1;
+float4x4 Padding2;
+float2 EyeToSourceUVScale;
+float2 EyeToSourceUVOffset;
+float3x3 EyeRotationStart;
+float3x3 EyeRotationEnd;
+float  UseOverlay = 1;
+float  RightEye = 1;
+float  FbSizePixelsX;
+
+
+RWTexture2D<float4> Framebuffer : register(u0);
+SamplerState Linear : register(s0);
+// Subtlety - fill->Set stops at the first NULL texture, so make sure you order them by priority!
+Texture2D HmdSpcTexture : register(t0);
+Texture2D OverlayTexture : register(t1);
+// t1, t2, t3 for layers in future.
+// This is set by other calls, so no problem putting it in t4.
+StructuredBuffer<DistortionComputePin> UntransformedGridPins : register(t4);
+
+// Each eye has a grid of "pins" - spaced every gridSizeInPixels apart in a square grid.
+// You can think of them as vertices in a mesh, but they are regularly
+// distributed in screen space, not pre-distorted.
+// Pins are laid out in a vertical scanline pattern,
+// scanning right to left, then within each scan going top to bottom, like DK2.
+// If we move to a different panel orientation, we may need to flip this around.
+// pinsPerEdge is the pitch of the buffer, and is fixed whatver the resolution
+// - it just needs to be large enough for the largest res we support.
+
+// The grid size remains fixed, but now each shader invocation does an NxN "tile" of output pixels.
+// This allows it to read, timewarp & project the input pins just once, then interpolate final UV over a number of pixels.
+// The "SIMD square size" is how large the square of dispatched pixels is - it's the
+// thing set in numthreads(N,N,1). For a SIMD size of 64-wide, it needs to be more than 8,
+// otherwise we'll starve the machine.
+
+// Summary:
+// Each SIMD lane does a tileBlockSizePixels^2 of pixels.
+// Each "CS group" (i.e. a virtualized SIMD thread) will cover a (simdSquareSize*tileBlockSizePixels)^2 block of pixels.
+// The pin grid is unaffected by any of these (except it has to be larger than tileBlockSizePixels).
+static const int gridSizeInPixels = GRID_SIZE_IN_PIXELS;
+static const int pinsPerEdge = PINS_PER_EDGE;
+static const int tileBlockSizePixels = NXN_BLOCK_SIZE_PIXELS;
+static const int simdSquareSize = SIMD_SQUARE_SIZE;
+static const int tilesPerGridSide = gridSizeInPixels / tileBlockSizePixels;
+
+DistortionComputePinTimewarped WarpAndDistort ( DistortionComputePinUnpacked inp )
+{
+	// Pin inputs are in TanEyeAngle space for the R,G,B channels (i.e. after chromatic aberration and distortion).
+#if ENABLE_TIMEWARP
+	// These are now "real world" vectors in direction (x,y,1) relative to the eye of the HMD.
+	float3 TanEyeAngle3R = float3 ( inp.TanEyeAnglesR.x, inp.TanEyeAnglesR.y, 1.0 );
+	float3 TanEyeAngle3G = float3 ( inp.TanEyeAnglesG.x, inp.TanEyeAnglesG.y, 1.0 );
+	float3 TanEyeAngle3B = float3 ( inp.TanEyeAnglesB.x, inp.TanEyeAnglesB.y, 1.0 );
+
+	// Apply the two 3x3 timewarp rotations to these vectors.
+	float3 TransformedRStart = mul ( EyeRotationStart, TanEyeAngle3R );
+	float3 TransformedGStart = mul ( EyeRotationStart, TanEyeAngle3G );
+	float3 TransformedBStart = mul ( EyeRotationStart, TanEyeAngle3B );
+	float3 TransformedREnd   = mul ( EyeRotationEnd,   TanEyeAngle3R );
+	float3 TransformedGEnd   = mul ( EyeRotationEnd,   TanEyeAngle3G );
+	float3 TransformedBEnd   = mul ( EyeRotationEnd,   TanEyeAngle3B );
+	// And blend between them.
+	float3 TransformedR = lerp ( TransformedRStart, TransformedREnd, inp.TimewarpLerp );
+	float3 TransformedG = lerp ( TransformedGStart, TransformedGEnd, inp.TimewarpLerp );
+	float3 TransformedB = lerp ( TransformedBStart, TransformedBEnd, inp.TimewarpLerp );
+
+	// Project them back onto the Z=1 plane of the rendered images.
+	float RecipZR = rcp ( TransformedR.z );
+	float RecipZG = rcp ( TransformedG.z );
+	float RecipZB = rcp ( TransformedB.z );
+	float2 FlattenedR = float2 ( TransformedR.x * RecipZR, TransformedR.y * RecipZR );
+	float2 FlattenedG = float2 ( TransformedG.x * RecipZG, TransformedG.y * RecipZG );
+	float2 FlattenedB = float2 ( TransformedB.x * RecipZB, TransformedB.y * RecipZB );
+#else
+    float2 FlattenedR = inp.TanEyeAnglesR;
+    float2 FlattenedG = inp.TanEyeAnglesG;
+    float2 FlattenedB = inp.TanEyeAnglesB;
+#endif
+
+	DistortionComputePinTimewarped result;
+
+	// These are now still in TanEyeAngle space.
+	// Scale them into the correct [0-1],[0-1] UV lookup space (depending on eye)
+	result.HmdSpcTexCoordR = FlattenedR * EyeToSourceUVScale + EyeToSourceUVOffset;
+	result.HmdSpcTexCoordG = FlattenedG * EyeToSourceUVScale + EyeToSourceUVOffset;
+	result.HmdSpcTexCoordB = FlattenedB * EyeToSourceUVScale + EyeToSourceUVOffset;
+
+#if ENABLE_OVERLAY
+	// Static layer texcoords don't get any time warp offset
+	result.OverlayTexCoordR = inp.TanEyeAnglesR * EyeToSourceUVScale + EyeToSourceUVOffset;
+	result.OverlayTexCoordG = inp.TanEyeAnglesG * EyeToSourceUVScale + EyeToSourceUVOffset;
+	result.OverlayTexCoordB = inp.TanEyeAnglesB * EyeToSourceUVScale + EyeToSourceUVOffset;
+#endif
+	return result;
+}
+
+float3 FindPixelColour ( float2 pinFrac,
+                         DistortionComputePinUnpacked PinTL,
+                         DistortionComputePinUnpacked PinTR,
+                         DistortionComputePinUnpacked PinBL,
+                         DistortionComputePinUnpacked PinBR,
+                         DistortionComputePinTimewarped PinWarpTL,
+                         DistortionComputePinTimewarped PinWarpTR,
+                         DistortionComputePinTimewarped PinWarpBL,
+                         DistortionComputePinTimewarped PinWarpBR)
+{
+	float pinWeightTL = (1.0-pinFrac.x) * (1.0-pinFrac.y);                                 
+	float pinWeightTR = (    pinFrac.x) * (1.0-pinFrac.y);                                 
+	float pinWeightBL = (1.0-pinFrac.x) * (    pinFrac.y);                                 
+	float pinWeightBR = (    pinFrac.x) * (    pinFrac.y);                                 
+                                                                                                               
+	float Fade = ( PinTL.Fade * pinWeightTL ) +                                                 
+				 ( PinTR.Fade * pinWeightTR ) +                                                 
+				 ( PinBL.Fade * pinWeightBL ) +                                                 
+				 ( PinBR.Fade * pinWeightBR );                                                  
+	float2 HmdSpcTexCoordR = ( PinWarpTL.HmdSpcTexCoordR * pinWeightTL ) +                      
+							 ( PinWarpTR.HmdSpcTexCoordR * pinWeightTR ) +                      
+							 ( PinWarpBL.HmdSpcTexCoordR * pinWeightBL ) +                      
+							 ( PinWarpBR.HmdSpcTexCoordR * pinWeightBR );                       
+	float2 HmdSpcTexCoordG = ( PinWarpTL.HmdSpcTexCoordG * pinWeightTL ) +                      
+							 ( PinWarpTR.HmdSpcTexCoordG * pinWeightTR ) +                      
+							 ( PinWarpBL.HmdSpcTexCoordG * pinWeightBL ) +                      
+							 ( PinWarpBR.HmdSpcTexCoordG * pinWeightBR );                       
+	float2 HmdSpcTexCoordB = ( PinWarpTL.HmdSpcTexCoordB * pinWeightTL ) +                      
+							 ( PinWarpTR.HmdSpcTexCoordB * pinWeightTR ) +                      
+							 ( PinWarpBL.HmdSpcTexCoordB * pinWeightBL ) +                      
+							 ( PinWarpBR.HmdSpcTexCoordB * pinWeightBR );                       
+
+	float3 finalColor;
+
+#if PENTILE_MODE > 0
+    // R & B channels have a 0.5 bias because of fewer pels.
+    const float mipBiasRB = 0.5;
+#else
+    const float mipBiasRB = 0.0;
+#endif
+	finalColor.r = HmdSpcTexture.SampleLevel(Linear, HmdSpcTexCoordR, mipBiasRB).r;
+	finalColor.g = HmdSpcTexture.SampleLevel(Linear, HmdSpcTexCoordG, 0        ).g;
+	finalColor.b = HmdSpcTexture.SampleLevel(Linear, HmdSpcTexCoordB, mipBiasRB).b;
+#if ENABLE_OVERLAY
+	if(UseOverlay > 0)
+	{
+		float2 OverlayTexCoordR = ( PinWarpTL.OverlayTexCoordR * pinWeightTL ) +                
+								  ( PinWarpTR.OverlayTexCoordR * pinWeightTR ) +                
+								  ( PinWarpBL.OverlayTexCoordR * pinWeightBL ) +                
+								  ( PinWarpBR.OverlayTexCoordR * pinWeightBR );                 
+		float2 OverlayTexCoordG = ( PinWarpTL.OverlayTexCoordG * pinWeightTL ) +                
+								  ( PinWarpTR.OverlayTexCoordG * pinWeightTR ) +                
+								  ( PinWarpBL.OverlayTexCoordG * pinWeightBL ) +                
+								  ( PinWarpBR.OverlayTexCoordG * pinWeightBR );                 
+		float2 OverlayTexCoordB = ( PinWarpTL.OverlayTexCoordB * pinWeightTL ) +                
+								  ( PinWarpTR.OverlayTexCoordB * pinWeightTR ) +                
+								  ( PinWarpBL.OverlayTexCoordB * pinWeightBL ) +                
+								  ( PinWarpBR.OverlayTexCoordB * pinWeightBR );                 
+		float2 overlayColorR = OverlayTexture.SampleLevel(Linear, OverlayTexCoordR, mipBiasRB).ra;
+		float2 overlayColorG = OverlayTexture.SampleLevel(Linear, OverlayTexCoordG, 0        ).ga;
+		float2 overlayColorB = OverlayTexture.SampleLevel(Linear, OverlayTexCoordB, mipBiasRB).ba;
+		// do premultiplied alpha blending - overlayColorX.x is color, overlayColorX.y is alpha
+		finalColor.r = finalColor.r * saturate(1-overlayColorR.y) + overlayColorR.x;
+		finalColor.g = finalColor.g * saturate(1-overlayColorG.y) + overlayColorG.x;
+		finalColor.b = finalColor.b * saturate(1-overlayColorB.y) + overlayColorB.x;
+	}
+#endif
+	finalColor.rgb = saturate(finalColor.rgb * Fade);
+	return finalColor;
+}
+
+
+[numthreads(simdSquareSize, simdSquareSize, 1)]
+void main(uint3 DTid : SV_DispatchThreadID, uint3 GTid : SV_GroupThreadID, uint3 Gid : SV_GroupID)
+// Reminder:
+// GroupThreadID.xy will range from 0 to (simdSquareSize-1).
+// GroupID.xy will range from 0 to (screen_size.xy)/(simdSquareSize*tileBlockSizePixels)
+// DispatchThreadID.xy = GroupID.xy * simdSquareSize + GroupThreadID.xy
+{
+    int2 PixelPosTile = DTid.xy * tileBlockSizePixels;                                                          
+    float2 PixelPosFloat = (float2)PixelPosTile;                                                                
+    float2 pinFracTileStart = (float2)PixelPosTile * ( 1.0 / gridSizeInPixels );                             
+    float2 pinWholeTileStart = floor ( pinFracTileStart );                                                
+    pinFracTileStart -= pinWholeTileStart;                                                                
+    int2 pinInt = (int2)pinWholeTileStart;                                                                
+    pinInt.x = (0.5*FbSizePixelsX/gridSizeInPixels - 1) - pinInt.x;                                           
+    pinFracTileStart.x = 1.0 - pinFracTileStart.x;                                                        
+    if ( RightEye > 0.5 )
+    {
+        PixelPosTile.x += 0.5*FbSizePixelsX;
+    }
+
+    int pinIndexTL = pinInt.x*pinsPerEdge + pinInt.y;                                                 
+    int pinIndexTR = pinIndexTL + pinsPerEdge;                                                           
+    int pinIndexBL = pinIndexTL + 1;                                                                      
+    int pinIndexBR = pinIndexTR + 1;                                                                      
+    DistortionComputePinUnpacked PinTL = UnpackPin ( UntransformedGridPins[pinIndexTL] );        
+    DistortionComputePinUnpacked PinTR = UnpackPin ( UntransformedGridPins[pinIndexTR] );        
+    DistortionComputePinUnpacked PinBL = UnpackPin ( UntransformedGridPins[pinIndexBL] );        
+    DistortionComputePinUnpacked PinBR = UnpackPin ( UntransformedGridPins[pinIndexBR] );        
+    if ( ( PinTL.Fade > 0.0 ) ||                                                                               
+         ( PinTR.Fade > 0.0 ) ||                                                                               
+         ( PinBL.Fade > 0.0 ) ||                                                                               
+         ( PinBR.Fade > 0.0 ) )                                                                                
+    {
+        DistortionComputePinTimewarped PinWarpTL = WarpAndDistort ( PinTL );                            
+        DistortionComputePinTimewarped PinWarpTR = WarpAndDistort ( PinTR );                            
+        DistortionComputePinTimewarped PinWarpBL = WarpAndDistort ( PinBL );                            
+        DistortionComputePinTimewarped PinWarpBR = WarpAndDistort ( PinBR );                            
+
+        float2 pinFrac;                                                                          
+        int2 PixelPos;
+        pinFrac.x = pinFracTileStart.x;                                        
+        pinFrac.y = pinFracTileStart.y;                                        
+        float3 finalColor00 = FindPixelColour ( pinFrac,                                               
+                                                PinTL,
+                                                PinTR,
+                                                PinBL,
+                                                PinBR,
+                                                PinWarpTL,
+                                                PinWarpTR,
+                                                PinWarpBL,
+                                                PinWarpBR);
+        pinFrac.x = pinFracTileStart.x - (1.0 / gridSizeInPixels);                                        
+        pinFrac.y = pinFracTileStart.y;                                        
+        float3 finalColor01 = FindPixelColour ( pinFrac,                                               
+                                                PinTL,
+                                                PinTR,
+                                                PinBL,
+                                                PinBR,
+                                                PinWarpTL,
+                                                PinWarpTR,
+                                                PinWarpBL,
+                                                PinWarpBR);
+        pinFrac.x = pinFracTileStart.x;                                        
+        pinFrac.y = pinFracTileStart.y + (1.0 / gridSizeInPixels);                                        
+        float3 finalColor10 = FindPixelColour ( pinFrac,                                               
+                                                PinTL,
+                                                PinTR,
+                                                PinBL,
+                                                PinBR,
+                                                PinWarpTL,
+                                                PinWarpTR,
+                                                PinWarpBL,
+                                                PinWarpBR);
+        pinFrac.x = pinFracTileStart.x - (1.0 / gridSizeInPixels);                                        
+        pinFrac.y = pinFracTileStart.y + (1.0 / gridSizeInPixels);                                        
+        float3 finalColor11 = FindPixelColour ( pinFrac,                                               
+                                                PinTL,
+                                                PinTR,
+                                                PinBL,
+                                                PinBR,
+                                                PinWarpTL,
+                                                PinWarpTR,
+                                                PinWarpBL,
+                                                PinWarpBR);
+
+        float3 finalOut00;
+        float3 finalOut01;
+        float3 finalOut10;
+        float3 finalOut11;
+#if PENTILE_MODE==0
+        // No pentile, so it's easy.
+        finalOut00 = finalColor00;
+        finalOut01 = finalColor01;
+        finalOut10 = finalColor10;
+        finalOut11 = finalColor11;
+#elif PENTILE_MODE==1
+        // Now the DK2 pentile swizzle. Don't try to understand it; just rope, throw and brand it.
+        finalOut00.g = finalColor10.g;
+        finalOut01.g = finalColor01.g;
+        finalOut10.g = finalColor00.g;
+        finalOut11.g = finalColor11.g;
+        finalOut00.r = finalColor10.r;
+        finalOut01.r = finalColor01.r;
+        finalOut10.r = finalColor00.b;
+        finalOut11.r = finalColor11.b;
+        finalOut00.b = 0.0;
+        finalOut01.b = 0.0;
+        finalOut10.b = 0.0;
+        finalOut11.b = 0.0;
+#endif
+
+        PixelPos.x = PixelPosTile.x;
+        PixelPos.y = PixelPosTile.y;
+        Framebuffer[PixelPos.xy] = float4 ( finalOut00, 0.0 );
+        PixelPos.x = PixelPosTile.x + 1;
+        PixelPos.y = PixelPosTile.y;
+        Framebuffer[PixelPos.xy] = float4 ( finalOut01, 0.0 );
+        PixelPos.x = PixelPosTile.x;
+        PixelPos.y = PixelPosTile.y + 1;
+        Framebuffer[PixelPos.xy] = float4 ( finalOut10, 0.0 );
+        PixelPos.x = PixelPosTile.x + 1;
+        PixelPos.y = PixelPosTile.y + 1;
+        Framebuffer[PixelPos.xy] = float4 ( finalOut11, 0.0 );
+    }
+};
+
+
+
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionCS2x2.h	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionCS2x2.h	2014-12-03 13:25:20.000000000 -0800
@@ -0,0 +1,887 @@
+#ifndef DISTORTIONCS2X2_H
+#define DISTORTIONCS2X2_H
+
+static const unsigned char DistortionCS2x2[] = {
+    0x44, 0x58, 0x42, 0x43, 0x08, 0x74, 0x15, 0x37, 0x48, 0x1d, 0x2c, 0xce, 
+    0x36, 0x3e, 0x2c, 0x71, 0x9b, 0xf3, 0x13, 0xa6, 0x01, 0x00, 0x00, 0x00, 
+    0x34, 0x29, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 
+    0xa8, 0x05, 0x00, 0x00, 0xb8, 0x05, 0x00, 0x00, 0xc8, 0x05, 0x00, 0x00, 
+    0x98, 0x28, 0x00, 0x00, 0x52, 0x44, 0x45, 0x46, 0x6c, 0x05, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x3c, 0x00, 0x00, 0x00, 0x00, 0x05, 0x53, 0x43, 0x00, 0x01, 0x00, 0x00, 
+    0x38, 0x05, 0x00, 0x00, 0x52, 0x44, 0x31, 0x31, 0x3c, 0x00, 0x00, 0x00, 
+    0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 
+    0x24, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xdc, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x07, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x13, 0x01, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x00, 0x48, 
+    0x6d, 0x64, 0x53, 0x70, 0x63, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 
+    0x00, 0x55, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 
+    0x65, 0x64, 0x47, 0x72, 0x69, 0x64, 0x50, 0x69, 0x6e, 0x73, 0x00, 0x46, 
+    0x72, 0x61, 0x6d, 0x65, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x00, 0x24, 
+    0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x00, 0x13, 0x01, 0x00, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x4c, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xb4, 0x02, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xc8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0xec, 0x02, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xc8, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+    0x00, 0x00, 0x00, 0x00, 0xf5, 0x02, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x34, 0x03, 0x00, 0x00, 
+    0x88, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0x48, 0x03, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x64, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+    0x00, 0x00, 0x00, 0x00, 0x88, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 
+    0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x64, 0x03, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x97, 0x03, 0x00, 0x00, 
+    0xec, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xa8, 0x03, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0xd0, 0x03, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 0xcc, 0x03, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
+    0x00, 0x00, 0x00, 0x00, 0xd9, 0x03, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x50, 0x61, 0x64, 0x64, 
+    0x69, 0x6e, 0x67, 0x31, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x78, 
+    0x34, 0x00, 0xab, 0xab, 0x03, 0x00, 0x03, 0x00, 0x04, 0x00, 0x04, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xbd, 0x02, 0x00, 0x00, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x32, 
+    0x00, 0x45, 0x79, 0x65, 0x54, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 
+    0x55, 0x56, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x00, 0x66, 0x6c, 0x6f, 0x61, 
+    0x74, 0x32, 0x00, 0xab, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x02, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x03, 0x00, 0x00, 0x45, 0x79, 0x65, 0x54, 0x6f, 0x53, 0x6f, 0x75, 
+    0x72, 0x63, 0x65, 0x55, 0x56, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x00, 
+    0x45, 0x79, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 
+    0x74, 0x61, 0x72, 0x74, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x78, 
+    0x33, 0x00, 0xab, 0xab, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x59, 0x03, 0x00, 0x00, 0x45, 0x79, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 
+    0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x00, 0x55, 0x73, 0x65, 0x4f, 0x76, 
+    0x65, 0x72, 0x6c, 0x61, 0x79, 0x00, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x00, 
+    0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa2, 0x03, 0x00, 0x00, 
+    0x00, 0x00, 0x80, 0x3f, 0x52, 0x69, 0x67, 0x68, 0x74, 0x45, 0x79, 0x65, 
+    0x00, 0x46, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x69, 0x78, 0x65, 0x6c, 
+    0x73, 0x58, 0x00, 0xab, 0x10, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
+    0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x24, 0x45, 0x6c, 0x65, 
+    0x6d, 0x65, 0x6e, 0x74, 0x00, 0x44, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x74, 
+    0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x69, 
+    0x6e, 0x00, 0x54, 0x61, 0x6e, 0x45, 0x79, 0x65, 0x41, 0x6e, 0x67, 0x6c, 
+    0x65, 0x73, 0x52, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00, 0x02, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x03, 0x00, 0x00, 0x54, 0x61, 0x6e, 0x45, 0x79, 0x65, 0x41, 0x6e, 
+    0x67, 0x6c, 0x65, 0x73, 0x47, 0x00, 0x54, 0x61, 0x6e, 0x45, 0x79, 0x65, 
+    0x41, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x42, 0x00, 0x43, 0x6f, 0x6c, 0x6f, 
+    0x72, 0x00, 0x69, 0x6e, 0x74, 0x00, 0xab, 0xab, 0x00, 0x00, 0x02, 0x00, 
+    0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x82, 0x04, 0x00, 0x00, 0x50, 0x61, 0x64, 0x64, 
+    0x69, 0x6e, 0x67, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x01, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x82, 0x04, 0x00, 0x00, 0x2e, 0x04, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x60, 0x04, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x6e, 0x04, 0x00, 0x00, 0x3c, 0x04, 0x00, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x7c, 0x04, 0x00, 0x00, 0x88, 0x04, 0x00, 0x00, 
+    0x18, 0x00, 0x00, 0x00, 0xac, 0x04, 0x00, 0x00, 0xb4, 0x04, 0x00, 0x00, 
+    0x1c, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 
+    0x00, 0x00, 0x05, 0x00, 0xd8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x19, 0x04, 0x00, 0x00, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 
+    0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4c, 0x53, 0x4c, 0x20, 0x53, 
+    0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 
+    0x65, 0x72, 0x20, 0x39, 0x2e, 0x32, 0x39, 0x2e, 0x39, 0x35, 0x32, 0x2e, 
+    0x33, 0x31, 0x31, 0x31, 0x00, 0xab, 0xab, 0xab, 0x49, 0x53, 0x47, 0x4e, 
+    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x4f, 0x53, 0x47, 0x4e, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x53, 0x48, 0x45, 0x58, 0xc8, 0x22, 0x00, 0x00, 
+    0x50, 0x00, 0x05, 0x00, 0xb2, 0x08, 0x00, 0x00, 0x6a, 0x08, 0x00, 0x01, 
+    0x59, 0x00, 0x00, 0x04, 0x46, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x03, 0x00, 0x60, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x58, 0x18, 0x00, 0x04, 0x00, 0x70, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x00, 0x00, 0xa2, 0x00, 0x00, 0x04, 
+    0x00, 0x70, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
+    0x9c, 0x18, 0x00, 0x04, 0x00, 0xe0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x55, 0x55, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x02, 0x32, 0x00, 0x02, 0x00, 
+    0x68, 0x00, 0x00, 0x02, 0x19, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x00, 0x04, 
+    0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x29, 0x00, 0x48, 0x09, 0x92, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x06, 0x04, 0x02, 0x00, 0x02, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x2b, 0x00, 0x38, 0x05, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0xc6, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x18, 0x0a, 
+    0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x96, 0x05, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3d, 
+    0x00, 0x00, 0x80, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x41, 0x00, 0x38, 0x05, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x16, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x40, 0x05, 
+    0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x40, 0x08, 0x82, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 
+    0x0e, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x80, 0x41, 0x00, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 0x00, 0x00, 0x40, 0x08, 
+    0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x80, 
+    0x41, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x40, 0x05, 0x82, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x29, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x38, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xa7, 0x00, 0x20, 0x8b, 0x02, 0x03, 0x01, 0x80, 0x83, 0x99, 0x19, 0x00, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x72, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 
+    0x56, 0x00, 0x40, 0x05, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x43, 
+    0x38, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 0xa7, 0x00, 0x20, 0x8b, 
+    0x02, 0x03, 0x01, 0x80, 0x83, 0x99, 0x19, 0x00, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x46, 0x72, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x56, 0x00, 0x40, 0x05, 
+    0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x43, 0x38, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
+    0x00, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x80, 0xbf, 0xa7, 0x00, 0x20, 0x8b, 0x02, 0x03, 0x01, 0x80, 
+    0x83, 0x99, 0x19, 0x00, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x46, 0x72, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0xff, 0x00, 0x00, 0x00, 0x56, 0x00, 0x40, 0x05, 0x82, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x7f, 0x43, 0x38, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 
+    0xa7, 0x00, 0x20, 0x8b, 0x02, 0x03, 0x01, 0x80, 0x83, 0x99, 0x19, 0x00, 
+    0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x72, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 
+    0x56, 0x00, 0x40, 0x05, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x43, 
+    0x38, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0xbf, 0x31, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x31, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x31, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x3c, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x31, 0x00, 0x40, 0x07, 0x82, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x3a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x40, 0x07, 
+    0x82, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x1f, 0x00, 0x04, 0x03, 0x3a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0d, 0x72, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x80, 0x3d, 0x00, 0x00, 0x80, 0x3d, 0x00, 0x00, 0x80, 0x3d, 
+    0x00, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x72, 0x00, 0x10, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 
+    0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x70, 0x3f, 0x00, 0x00, 0x00, 0x00, 
+    0x31, 0x00, 0x00, 0x08, 0x12, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x0a, 0x80, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x3f, 0x1a, 0x80, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x1b, 0x00, 0x00, 0x05, 0x22, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x09, 
+    0x22, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x8b, 
+    0x02, 0x03, 0x01, 0x80, 0x83, 0x99, 0x19, 0x00, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x55, 0x00, 0x08, 0x07, 0x12, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x56, 0x00, 0x08, 0x05, 
+    0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x8b, 0x02, 0x03, 0x01, 0x80, 
+    0x83, 0x99, 0x19, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x55, 0x00, 0x20, 0x07, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x18, 0x00, 0x00, 0x00, 0x56, 0x00, 0x20, 0x05, 0x42, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x28, 0x0a, 0x52, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x06, 0x02, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x7f, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x43, 
+    0x00, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x00, 0x8b, 0x02, 0x03, 0x01, 0x80, 
+    0x83, 0x99, 0x19, 0x00, 0xf2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x55, 0x00, 0x08, 0x07, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x18, 0x00, 0x00, 0x00, 0x56, 0x00, 0x08, 0x05, 0x12, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0xa7, 0x00, 0x00, 0x8b, 0x02, 0x03, 0x01, 0x80, 0x83, 0x99, 0x19, 0x00, 
+    0xf2, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x46, 0x7e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x55, 0x00, 0x10, 0x07, 
+    0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0x56, 0x00, 0x10, 0x05, 0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x18, 0x0a, 
+    0x32, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x43, 
+    0x00, 0x00, 0x7f, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0xb2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0c, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x46, 0x03, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x72, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 
+    0x41, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x81, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 
+    0x42, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0xf6, 0x0f, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 
+    0x0c, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x46, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 
+    0xf2, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0xb2, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0c, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x46, 0x03, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 
+    0x41, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x81, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 
+    0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x04, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 
+    0xf2, 0x00, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 
+    0x0f, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0xb2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x46, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0c, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x46, 0x03, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 
+    0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x81, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 
+    0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x04, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 
+    0xf2, 0x00, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x10, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 
+    0x72, 0x00, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 
+    0xb2, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0c, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x46, 0x03, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0xe2, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x06, 0x89, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0a, 0x72, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x96, 0x07, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x46, 0x82, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x72, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
+    0x72, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 
+    0x41, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x72, 0x00, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0x72, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x81, 0x00, 0x00, 0x05, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x2a, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 
+    0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x05, 0x42, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x04, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x04, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 
+    0xf2, 0x00, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x84, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0xe6, 0x8e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x0b, 0xf2, 0x00, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x06, 0x0a, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 
+    0x00, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x80, 0x3f, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x14, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x15, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x56, 0x0f, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0x52, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x56, 0x07, 0x10, 0x00, 
+    0x14, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x52, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x56, 0x07, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0x06, 0x02, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x52, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x56, 0x07, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 0x06, 0x02, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0x52, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x56, 0x07, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 0x06, 0x02, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x17, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x0e, 0x00, 0x00, 0x00, 
+    0x56, 0x0f, 0x10, 0x00, 0x14, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x0c, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x0a, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x07, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 
+    0x09, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 0x14, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0xe6, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0xe6, 0x0e, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 
+    0x15, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0xe6, 0x0e, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 
+    0x16, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x14, 0x00, 0x00, 0x00, 
+    0xe6, 0x0e, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x14, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x14, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0xe6, 0x0e, 0x10, 0x00, 0x11, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 
+    0x43, 0x55, 0x15, 0x00, 0x12, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x00, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 
+    0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x22, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x18, 0x00, 0x00, 0x00, 
+    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 
+    0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x13, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 
+    0x14, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 
+    0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x12, 0x00, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x17, 0x00, 0x00, 0x00, 
+    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 
+    0x22, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 
+    0x18, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 
+    0x43, 0x55, 0x15, 0x00, 0x42, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0xe6, 0x0a, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 
+    0x72, 0x00, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0xa6, 0x0a, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x1a, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x80, 0x3d, 0x00, 0x00, 0x00, 0x08, 0x22, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x10, 0x80, 0x41, 0x00, 0x00, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x0f, 0x10, 0x00, 
+    0x12, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x16, 0x00, 0x00, 0x00, 0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0x06, 0x0a, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x06, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x0a, 0x10, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0x32, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0xd6, 0x05, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 
+    0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0x32, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xf6, 0x0f, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0xd6, 0x05, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x46, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 
+    0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x0e, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x15, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x12, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x08, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x09, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x16, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x10, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 0xf2, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x07, 0xf2, 0x00, 0x10, 0x00, 
+    0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x0f, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x16, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x0d, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x15, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x06, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x12, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x09, 
+    0xf2, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x11, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 0x08, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 
+    0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x12, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 
+    0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 
+    0x22, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x46, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 
+    0x43, 0x55, 0x15, 0x00, 0x42, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x46, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x46, 0x7e, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x20, 0x00, 0x07, 
+    0x72, 0x00, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x46, 0x02, 0x10, 0x00, 0x05, 0x00, 0x00, 0x00, 
+    0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 
+    0x12, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 
+    0x03, 0x00, 0x00, 0x00, 0xc6, 0x79, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 0xc2, 0x00, 0x00, 0x80, 
+    0x43, 0x55, 0x15, 0x00, 0x42, 0x00, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 
+    0xe6, 0x0a, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0xc6, 0x79, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x8d, 
+    0xc2, 0x00, 0x00, 0x80, 0x43, 0x55, 0x15, 0x00, 0x82, 0x00, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0xe6, 0x0a, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 
+    0xc6, 0x79, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x38, 0x20, 0x00, 0x07, 0x72, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x56, 0x05, 0x10, 0x00, 0x02, 0x00, 0x00, 0x00, 0x86, 0x03, 0x10, 0x00, 
+    0x02, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 
+    0x14, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xa4, 0x00, 0x00, 0x07, 0xf2, 0xe0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xd6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x14, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x42, 0x00, 0x10, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 
+    0x82, 0x00, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xa4, 0x00, 0x00, 0x07, 0xf2, 0xe0, 0x11, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0xe6, 0x0f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x46, 0x0e, 0x10, 0x00, 0x13, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x08, 
+    0x12, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 
+    0x01, 0x40, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xa4, 0x00, 0x00, 0x07, 0xf2, 0xe0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x16, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x05, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x05, 0x82, 0x00, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0xa4, 0x00, 0x00, 0x07, 0xf2, 0xe0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x26, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x0e, 0x10, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x01, 0x3e, 0x00, 0x00, 0x01, 
+    0x53, 0x54, 0x41, 0x54, 0x94, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x00, 
+    0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
+    0x79, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 
+    0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+
+};
+
+#endif
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionCS2x2_refl.h	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D1X/Shaders/DistortionCS2x2_refl.h	2014-12-03 13:25:20.000000000 -0800
@@ -0,0 +1,16 @@
+#ifndef DistortionCS2x2_refl
+
+const OVR::CAPI::D3D_NS::ShaderBase::Uniform DistortionCS2x2_refl[] =
+{
+	{ "Padding1", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 0, 64 },
+	{ "Padding2", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 64, 64 },
+	{ "EyeToSourceUVScale", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 128, 8 },
+	{ "EyeToSourceUVOffset", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 136, 8 },
+	{ "EyeRotationStart", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 144, 44 },
+	{ "EyeRotationEnd", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 192, 44 },
+	{ "UseOverlay", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 236, 4 },
+	{ "RightEye", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 240, 4 },
+	{ "FbSizePixelsX", 	OVR::CAPI::D3D_NS::ShaderBase::VARTYPE_FLOAT, 244, 4 },
+};
+
+#endif
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D9/CAPI_D3D9_DistortionRenderer.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/D3D9/CAPI_D3D9_DistortionRenderer.h	2014-12-03 13:25:20.000000000 -0800
@@ -126,7 +126,7 @@
 
 	struct FOR_EACH_EYE
 	{
-        FOR_EACH_EYE() : TextureSize(0), RenderViewport(Sizei(0)) { }
+        FOR_EACH_EYE() : dxVerts(NULL), dxIndices(NULL), numVerts(0), numIndices(0), texture(NULL), /*UVScaleOffset[],*/ TextureSize(0, 0), RenderViewport(0, 0, 0, 0) { }
 
 		IDirect3DVertexBuffer9  * dxVerts;
 		IDirect3DIndexBuffer9   * dxIndices;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_DistortionRenderer.h	2014-10-23 05:26:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_DistortionRenderer.h	2014-12-03 13:25:20.000000000 -0800
@@ -44,7 +44,7 @@
     DistortionRenderer(ovrHmd hmd,
                        FrameTimeManager& timeManager,
                        const HMDRenderState& renderState);
-    ~DistortionRenderer();
+    virtual ~DistortionRenderer();
 
     
     // Creation function for the device.    
@@ -69,60 +69,10 @@
 
 protected:
     
-    
-    class GraphicsState : public CAPI::DistortionRenderer::GraphicsState
-    {
-    public:
-        GraphicsState();
-        virtual void Save();
-        virtual void Restore();
-        
-#ifdef OVR_OS_MAC
-        // Asking for Core Profile is equivalent to asking whether we have a
-        // 3.2+ context on mac.
-        bool isAtLeastOpenGL3();
-#endif
-
-    protected:
-        void ApplyBool(GLenum Name, GLint Value, GLint index = -1);
-        
-    public:
-        GLVersionAndExtensions GLVersionInfo;
-        
-        GLint Viewport[4];
-        GLfloat ClearColor[4];
-        GLint DepthTest;
-        GLint CullFace;
-        GLint SRGB;
-        GLint Program;
-        GLint ActiveTexture;
-        GLint TextureBinding;
-        GLint VertexArrayBinding;
-        GLint ElementArrayBufferBinding;
-        GLint ArrayBufferBinding;
-        GLint FrameBufferBinding;
-        
-        GLint Blend;
-        GLint ColorWritemask[4];
-        GLint Dither;
-        GLint Fog;
-        GLint Lighting;
-        GLint RasterizerDiscard;
-        GLint RenderMode;
-        GLint SampleMask;
-        GLint ScissorTest;
-        GLfloat ZoomX;
-        GLfloat ZoomY;
-    };
-
 	struct FOR_EACH_EYE
 	{
-        FOR_EACH_EYE() : TextureSize(0), RenderViewport(Sizei(0)) { }
+        FOR_EACH_EYE() : numVerts(0), numIndices(0), texture(0), /*UVScaleOffset[],*/ TextureSize(0, 0), RenderViewport(0, 0, 0, 0) { }
 
-#if 0
-		IDirect3DVertexBuffer9  * dxVerts;
-		IDirect3DIndexBuffer9   * dxIndices;
-#endif
 		int                       numVerts;
 		int                       numIndices;
 
@@ -138,7 +88,7 @@
 
     // GL context and utility variables.
     RenderParams        RParams;
-    Context             distortionContext;
+    Context             distortionContext;  // We are currently using this private OpenGL context instead of using the CAPI SaveGraphicsState/RestoreGraphicsState mechanism. To consider: Move this Context into SaveGraphicsState/RestoreGraphicState so there's consistency between DirectX and OpenGL.
 
 	// Helpers
     void initOverdrive();
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_DistortionShaders.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_DistortionShaders.h	2014-12-03 13:25:20.000000000 -0800
@@ -41,6 +41,7 @@
     "#define _FRAGCOLOR_DECLARATION\n"
     "#define _MRTFRAGCOLOR0_DECLARATION\n"
     "#define _MRTFRAGCOLOR1_DECLARATION\n"
+    "#define _GLFRAGCOORD_DECLARATION\n"
     "#define _VS_IN attribute\n"
     "#define _VS_OUT varying\n"
     "#define _FS_IN varying\n"
@@ -49,13 +50,16 @@
     "#define _FRAGCOLOR gl_FragColor\n"
     "#define _MRTFRAGCOLOR0 gl_FragData[0]\n"
     "#define _MRTFRAGCOLOR1 gl_FragData[1]\n"       // The texture coordinate [0.0,1.0] for texel i of a texture of size N is: (2i + 1)/2N
-    "#define _TEXELFETCHDECL vec4 texelFetch(sampler2D tex, ivec2 coord, int lod){ ivec2 size = textureSize2D(tex, lod); return texture2D(tex, vec2(float((coord.x * 2) + 1) / float(size.x * 2), float((coord.y * 2) + 1) / float(size.y * 2))); }\n";
+    "#ifdef GL_EXT_gpu_shader4\n"
+    "  #define _TEXELFETCHDECL vec4 texelFetch(sampler2D tex, ivec2 coord, int lod){ ivec2 size = textureSize2D(tex, lod); return texture2D(tex, vec2(float((coord.x * 2) + 1) / float(size.x * 2), float((coord.y * 2) + 1) / float(size.y * 2))); }\n"
+    "#endif\n";
     
     static const char glsl3Prefix[] =
     "#version 150\n"
     "#define _FRAGCOLOR_DECLARATION out vec4 FragColor;\n"
     "#define _MRTFRAGCOLOR0_DECLARATION out vec4 FragData0;\n"
     "#define _MRTFRAGCOLOR1_DECLARATION out vec4 FragData1;\n"
+    "#define _GLFRAGCOORD_DECLARATION in vec4 gl_FragCoord;\n"
     "#define _VS_IN in\n"
     "#define _VS_OUT out\n"
     "#define _FS_IN in\n"
@@ -309,10 +313,11 @@
     
     "_MRTFRAGCOLOR0_DECLARATION\n"   // Desired color (next frame's "PrevTexture")
     "_MRTFRAGCOLOR1_DECLARATION\n"   // Overdriven color (Back-buffer)
+    "_GLFRAGCOORD_DECLARATION\n"
 
-    "_FS_IN vec4 gl_FragCoord;\n"
-
-    "_TEXELFETCHDECL\n" // Defines texelFetch in case we're using GLSL 1.2 or earlier, which doesn't natively support it.
+    "#ifdef _TEXELFETCHDECL\n"
+    "_TEXELFETCHDECL\n"
+    "#endif\n"
     
     "void main()\n"
     "{\n"
@@ -324,6 +329,7 @@
     "   _MRTFRAGCOLOR0 = vec4(newColor, 1);\n"
     "   _MRTFRAGCOLOR1 = _MRTFRAGCOLOR0;\n"
 
+    "   #ifdef _TEXELFETCHDECL\n"
     // pixel luminance overdrive
     "   if(OverdriveScales_IsSrgb.x > 0.0)\n"
     "   {\n"
@@ -349,6 +355,11 @@
 
     "       _MRTFRAGCOLOR1 = vec4(overdriveColor, 1.0);\n"
     "   }\n"
+    "   #else\n"
+    // If statement to keep OverdriveScales_IsSrgb from being optimized out.
+    "   if(OverdriveScales_IsSrgb.x > 0.0)\n"
+    "     _MRTFRAGCOLOR1 = vec4(newColor, 1);\n"
+    "   #endif\n"
     "}\n";
 
     const OVR::CAPI::GL::ShaderBase::Uniform DistortionChroma_ps_refl[] =
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_HSWDisplay.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_HSWDisplay.h	2014-12-03 13:25:20.000000000 -0800
@@ -55,7 +55,6 @@
         void LoadGraphics();
 
         OVR::CAPI::GL::RenderParams        RenderParams;
-        GLVersionAndExtensions             GLVersionInfo;
         OVR::CAPI::GL::Context             GLContext;           // Our prive OpenGL context for drawing.
         GLuint                             FrameBuffer;         // This is a container for a texture, depth buffer, stencil buffer to be rendered to. To consider: Make a wrapper class, like the OculusWorldDemo RBuffer class. 
         Ptr<OVR::CAPI::GL::Texture>        pTexture;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_Util.h	2014-10-23 05:26:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GL_Util.h	2014-12-03 13:25:20.000000000 -0800
@@ -40,174 +40,26 @@
 #include <Windows.h>
 #endif
 
-#if defined(OVR_OS_MAC)
-#define GL_DO_NOT_WARN_IF_MULTI_GL_VERSION_HEADERS_INCLUDED
-#include <CoreGraphics/CGDirectDisplay.h>
-#include <OpenGL/OpenGL.h>
-#include <OpenGL/gl.h>
-#include <OpenGL/glext.h>
-#include <OpenGL/gl3.h>
-#include <OpenGL/gl3ext.h>
-#else
-#ifndef GL_GLEXT_PROTOTYPES
-#define GL_GLEXT_PROTOTYPES
-#endif
-#include <GL/gl.h>
-#include <GL/glext.h>
-#if defined(OVR_OS_WIN32)
-#include <GL/wglext.h>
-#elif defined(OVR_OS_LINUX)
-#include <GL/glx.h>
+#if !defined(OVR_DISABLE_GLE)   // By default we use the GLE module in order to link to OpenGL functions. However, if an external user 
+#include "CAPI_GLE.h"           // wants to use an alternative mechanism to connect to OpenGL functions, they can #define OVR_DISABLE_GLE.
 #endif
-#endif
-
-namespace OVR { namespace CAPI { namespace GL {
 
 
-// GL extension Hooks for Non-Mac.
-#if !defined(OVR_OS_MAC)
-
-// Let Windows apps build without linking GL.
-#if defined(OVR_OS_WIN32)
-
-typedef GLenum (__stdcall *PFNGLGETERRORPROC) ();
-typedef void (__stdcall *PFNGLENABLEPROC) (GLenum);
-typedef void (__stdcall *PFNGLDISABLEPROC) (GLenum);
-typedef void (__stdcall *PFNGLGETFLOATVPROC) (GLenum, GLfloat*);
-typedef const GLubyte * (__stdcall *PFNGLGETSTRINGPROC) (GLenum);
-typedef const GLubyte * (__stdcall *PFNGLGETSTRINGIPROC) (GLenum, GLuint);
-typedef void(__stdcall *PFNGLGETINTEGERVPROC) (GLenum, GLint*);
-typedef PROC(__stdcall *PFNWGLGETPROCADDRESSPROC) (LPCSTR);
-typedef BOOL(__stdcall *PFNWGLSHARELISTSPROC)(HGLRC hglrcShare, HGLRC hglrcSrc);
-typedef BOOL(__stdcall *PFNWGLMAKECURRENTPROC)(HDC, HGLRC);
-typedef HDC(__stdcall *PFNWGLGETCURRENTDCPROC)(void);
-typedef HGLRC(__stdcall *PFNWGLCREATECONTEXTPROC)(HDC hDC);
-typedef HGLRC(__stdcall *PFNWGLGETCURRENTCONTEXTPROC)(void);
-typedef BOOL(__stdcall *PFNWGLDELETECONTEXTPROC)(HGLRC hglrc);
-typedef void (__stdcall *PFNGLGETDOUBLEVPROC) (GLenum, GLdouble*);
-typedef PROC (__stdcall *PFNWGLGETPROCADDRESS) (LPCSTR);
-typedef void (__stdcall *PFNGLFLUSHPROC) ();
-typedef void (__stdcall *PFNGLFINISHPROC) ();
-typedef void (__stdcall *PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);
-typedef void (__stdcall *PFNGLCLEARPROC) (GLbitfield);
-typedef void (__stdcall *PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
-typedef void (__stdcall *PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
-typedef void (__stdcall *PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);
-typedef void (__stdcall *PFNGLDELETETEXTURESPROC) (GLsizei n, GLuint *textures);
-typedef void (__stdcall *PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);
-typedef void (__stdcall *PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLint format, GLenum type, const GLvoid *pixels);
-typedef void (__stdcall *PFNGLCLEARCOLORPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a);
-typedef void (__stdcall *PFNGLCLEARDEPTHPROC) (GLclampd depth);
-typedef void (__stdcall *PFNGLDEPTHMASKPROC) (GLboolean flag);
-typedef void (__stdcall *PFNGLDEPTHRANGEPROC) (GLclampd nearVal,  GLclampd farVal);
-typedef void (__stdcall *PFNGLDEPTHRANGEFPROC) (GLclampf nearVal,  GLclampf farVal);
-typedef void (__stdcall *PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);
-typedef void (__stdcall *PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);
-typedef void (__stdcall *PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);
-typedef void (__stdcall *PFNGLFRONTFACEPROC) (GLenum mode);
-typedef GLint (__stdcall *PFNGLRENDERMODEPROC) (GLenum mode);
-typedef void (__stdcall *PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);
-
-extern PFNWGLGETPROCADDRESS                     wglGetProcAddress;
-extern PFNWGLGETSWAPINTERVALEXTPROC             wglGetSwapIntervalEXT;
-extern PFNWGLSWAPINTERVALEXTPROC                wglSwapIntervalEXT;
-extern PFNWGLGETCURRENTDCPROC                   wglGetCurrentDC;
-extern PFNWGLGETCURRENTCONTEXTPROC              wglGetCurrentContext;
-extern PFNWGLCREATECONTEXTPROC                  wglCreateContext;
-extern PFNWGLSHARELISTSPROC                     wglShareLists;
-
-extern PFNGLGETERRORPROC                        glGetError;
-extern PFNGLENABLEPROC                          glEnable;
-extern PFNGLENABLEIPROC                         glEnablei;
-extern PFNGLDISABLEPROC                         glDisable;
-extern PFNGLDISABLEIPROC                        glDisablei;
-extern PFNGLCOLORMASKPROC                       glColorMask;
-extern PFNGLCOLORMASKIPROC                      glColorMaski;
-extern PFNGLGETFLOATVPROC                       glGetFloatv;
-extern PFNGLGETSTRINGPROC                       glGetString;
-extern PFNGLGETINTEGERVPROC                     glGetIntegerv;
-extern PFNGLGETINTEGERI_VPROC                   glGetIntegeri_v;
-extern PFNGLGETDOUBLEVPROC                      glGetDoublev;
-extern PFNGLCLEARPROC                           glClear;
-extern PFNGLCLEARCOLORPROC                      glClearColor;
-extern PFNGLCLEARDEPTHPROC                      glClearDepth;
-extern PFNGLDEPTHMASKPROC                       glDepthMask;
-extern PFNGLDEPTHRANGEPROC                      glDepthRange;
-extern PFNGLDEPTHRANGEFPROC                     glDepthRangef;
-extern PFNGLVIEWPORTPROC                        glViewport;
-extern PFNGLDRAWARRAYSPROC                      glDrawArrays;
-extern PFNGLDRAWELEMENTSPROC                    glDrawElements;
-extern PFNGLGENTEXTURESPROC                     glGenTextures;
-extern PFNGLDELETETEXTURESPROC                  glDeleteTextures;
-extern PFNGLBINDTEXTUREPROC                     glBindTexture;
-extern PFNGLTEXIMAGE2DPROC                      glTexImage2D;
-extern PFNGLTEXPARAMETERIPROC                   glTexParameteri;
-extern PFNGLFLUSHPROC                           glFlush;
-extern PFNGLFINISHPROC                          glFinish;
-extern PFNGLBLENDFUNCPROC                       glBlendFunc;
-extern PFNGLFRONTFACEPROC                       glFrontFace;
-extern PFNGLRENDERMODEPROC                      glRenderMode;
-extern PFNGLPOLYGONMODEPROC                     glPolygonMode;
-
-#elif defined(OVR_OS_LINUX)
-
-extern PFNGLXSWAPINTERVALEXTPROC                glXSwapIntervalEXT;
-
-#endif // defined(OVR_OS_WIN32)
+#if defined(OVR_OS_MAC)
+    #include <CoreGraphics/CGDirectDisplay.h>
+    #include <OpenGL/CGLTypes.h>
+#endif
 
-extern PFNGLGETSTRINGIPROC                      glGetStringi;
-extern PFNGLGENFRAMEBUFFERSPROC                 glGenFramebuffers;
-extern PFNGLDELETEFRAMEBUFFERSPROC              glDeleteFramebuffers;
-extern PFNGLDELETESHADERPROC                    glDeleteShader;
-extern PFNGLCHECKFRAMEBUFFERSTATUSPROC          glCheckFramebufferStatus;
-extern PFNGLFRAMEBUFFERRENDERBUFFERPROC         glFramebufferRenderbuffer;
-extern PFNGLFRAMEBUFFERTEXTURE2DPROC            glFramebufferTexture2D;
-extern PFNGLBINDFRAMEBUFFERPROC                 glBindFramebuffer;
-extern PFNGLACTIVETEXTUREPROC                   glActiveTexture;
-extern PFNGLGETVERTEXATTRIBIVPROC               glGetVertexAttribiv;
-extern PFNGLGETVERTEXATTRIBPOINTERVPROC         glGetVertexAttribPointerv;
-extern PFNGLDISABLEVERTEXATTRIBARRAYPROC        glDisableVertexAttribArray;
-extern PFNGLVERTEXATTRIBPOINTERPROC             glVertexAttribPointer;
-extern PFNGLENABLEVERTEXATTRIBARRAYPROC         glEnableVertexAttribArray;
-extern PFNGLBINDBUFFERPROC                      glBindBuffer;
-extern PFNGLUNIFORMMATRIX4FVPROC                glUniformMatrix4fv;
-extern PFNGLDELETEBUFFERSPROC                   glDeleteBuffers;
-extern PFNGLBUFFERDATAPROC                      glBufferData;
-extern PFNGLGENBUFFERSPROC                      glGenBuffers;
-extern PFNGLMAPBUFFERPROC                       glMapBuffer;
-extern PFNGLUNMAPBUFFERPROC                     glUnmapBuffer;
-extern PFNGLGETSHADERINFOLOGPROC                glGetShaderInfoLog;
-extern PFNGLGETSHADERIVPROC                     glGetShaderiv;
-extern PFNGLCOMPILESHADERPROC                   glCompileShader;
-extern PFNGLSHADERSOURCEPROC                    glShaderSource;
-extern PFNGLCREATESHADERPROC                    glCreateShader;
-extern PFNGLCREATEPROGRAMPROC                   glCreateProgram;
-extern PFNGLATTACHSHADERPROC                    glAttachShader;
-extern PFNGLDETACHSHADERPROC                    glDetachShader;
-extern PFNGLDELETEPROGRAMPROC                   glDeleteProgram;
-extern PFNGLUNIFORM1IPROC                       glUniform1i;
-extern PFNGLGETUNIFORMLOCATIONPROC              glGetUniformLocation;
-extern PFNGLGETACTIVEUNIFORMPROC                glGetActiveUniform;
-extern PFNGLUSEPROGRAMPROC                      glUseProgram;
-extern PFNGLGETPROGRAMINFOLOGPROC               glGetProgramInfoLog;
-extern PFNGLGETPROGRAMIVPROC                    glGetProgramiv;
-extern PFNGLLINKPROGRAMPROC                     glLinkProgram;
-extern PFNGLBINDATTRIBLOCATIONPROC              glBindAttribLocation;
-extern PFNGLGETATTRIBLOCATIONPROC               glGetAttribLocation;
-extern PFNGLUNIFORM4FVPROC                      glUniform4fv;
-extern PFNGLUNIFORM3FVPROC                      glUniform3fv;
-extern PFNGLUNIFORM2FVPROC                      glUniform2fv;
-extern PFNGLUNIFORM1FVPROC                      glUniform1fv;
-extern PFNGLGENVERTEXARRAYSPROC                 glGenVertexArrays;
-extern PFNGLDELETEVERTEXARRAYSPROC              glDeleteVertexArrays;
-extern PFNGLBINDVERTEXARRAYPROC                 glBindVertexArray;
-extern PFNGLBLENDFUNCSEPARATEPROC               glBlendFuncSeparate;
-extern PFNGLBLITFRAMEBUFFEREXTPROC              glBlitFramebuffer;
-extern PFNGLDRAWBUFFERSPROC                     glDrawBuffers;
 
-extern void InitGLExtensions();
+namespace OVR
+{
+    // Get the shared LibOVR GLEContext instance.
+    class GLEContext;
+    GLEContext* GetGLEContext();
+}
 
-#endif // !defined(OVR_OS_MAC)
+namespace OVR { namespace CAPI { namespace GL {
+void InitGLExtensions();
 
 
 // Rendering primitive type used to render Model.
@@ -282,11 +134,10 @@
     HWND   Window;
     HDC    DC;
 #elif defined(OVR_OS_LINUX)
-    _XDisplay*  Disp;
-    Window      Win;
+    struct _XDisplay* Disp;
 #endif
 
-    ovrSizei  RTSize;
+    ovrSizei    BackBufferSize;
     int    Multisample;
 };
 
@@ -372,6 +223,8 @@
         String Name;
         int    Location, Size;
         int    Type; // currently number of floats in vector
+
+        Uniform() : Name(), Location(0), Size(0), Type(0){}
     };
     Array<Uniform> UniformInfo;
 	
@@ -435,6 +288,14 @@
         return SetUniform(name, 16, &mt.M[0][0]);
     }
 
+    virtual bool SetUniform3x3f(const char* name, const Matrix4f& m)
+    {
+        Matrix4f mt = m.Transposed();
+        // float3x3 is actually stored the same way as float4x3, with the last items ignored by the code.
+        return SetUniform(name, 12, &mt.M[0][0]);
+    }
+
+
 protected:
 	GLint GetGLShader(Shader* s);
     bool Link();
@@ -608,54 +469,8 @@
 typedef ShaderImpl<Shader_Fragment, GL_FRAGMENT_SHADER> FragmentShader;
 
 
-//// GLVersionAndExtensions
-//
-// FIXME: CODE DUPLICATION WARNING
-// Right now we have this same code in CommonSrc and in CAPI::GL.
-// At some point we need to consolidate these, in Kernel or Util.
-// Be sure to update both locations for now!
-//
-// This class needs to be initialized at runtime with GetGLVersionAndExtensions,
-// after an OpenGL context has been created. It must be re-initialized any time
-// a new OpenGL context is created, as the new context may differ in version or
-// supported functionality.
-struct GLVersionAndExtensions
-{
-    // Version information
-    int         MajorVersion;        // Best guess at major version
-    int         MinorVersion;        // Best guess at minor version
-    int         WholeVersion;        // Equals ((MajorVersion * 100) + MinorVersion). Example usage: if(glv.WholeVersion >= 302) // If OpenGL v3.02+ ...
-    bool        IsGLES;              // Open GL ES?
-    bool        IsCoreProfile;       // Is the current OpenGL context a core profile context? Its trueness may be a false positive but will never be a false negative.
-
-    // Extension information
-    bool        SupportsVAO;         // Supports Vertex Array Objects?
-    bool        SupportsDrawBuffers; // Supports Draw Buffers?
-    const char* Extensions;          // Other extensions string (will not be null)
-
-    GLVersionAndExtensions()
-      : MajorVersion(0),
-        MinorVersion(0),
-        WholeVersion(0),
-        IsGLES(false),
-        IsCoreProfile(false),
-        SupportsVAO(false),
-        SupportsDrawBuffers(false),
-        Extensions("")
-    {
-    }
-    
-    bool HasGLExtension(const char* searchKey) const;
-    
-protected:
-    friend void GetGLVersionAndExtensions(GLVersionAndExtensions& versionInfo);
-    
-    void ParseGLVersion();
-    void ParseGLExtensions();
-};
-
-void GetGLVersionAndExtensions(GLVersionAndExtensions& versionInfo);
 
+// Allows us to have independent OpenGL contexts for our systems.
 class Context
 {
     bool                initialized;
@@ -689,6 +504,49 @@
 };
 
 
+// AutoContext
+//
+// Implements a common sequence of function calls with the Context class.
+// See the AutoContext constructor below for what it does. 
+//
+// Example usage:
+//     void SomeClass::Draw()
+//     {
+//         AutoContext autoContext(someClassContext);
+//
+//         <draw calls>
+//     }
+
+struct AutoContext
+{
+    Context  savedCurrentContext;
+    Context& ourContext;
+
+    AutoContext(Context& context) :
+        savedCurrentContext(), ourContext(context)
+    {
+        // We use a member savedCurrentContext which is initialized here, as opposed to having the user pass in a 
+        // pre-existing Context (which the user could declare as a global or C++ member variable). We have to do this
+        // because if we were to use some pre-existing Context the app might delete its underlying GL context behind our back
+        // or associate it with another thread, which would cause our bind of it in our dtor to be a bad operation.
+        savedCurrentContext.InitFromCurrent();
+        if(ourContext.GetIncarnation() == 0) // If not yet initialized...
+            ourContext.CreateShared(savedCurrentContext);
+        ourContext.Bind();
+        #if defined(OVR_OS_MAC) // To consider: merge the following into the Bind function.
+            ourContext.SetSurface(savedCurrentContext);
+        #endif
+    }
+
+   ~AutoContext()
+    {
+        savedCurrentContext.Bind();
+    }
+
+    OVR_NON_COPYABLE(AutoContext)
+};
+
+
 }}} // namespace OVR::CAPI::GL
 
 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GLE.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GLE.h	2014-12-03 13:25:20.000000000 -0800
@@ -33,6 +33,10 @@
 ///////////////////////////////////////////////////////////////////////////////
 // How to use this functionality
 //
+// - You #include this header instead of gl.h, glext.h, wglext.h (Windows), gl3.h (Apple), gl3ext.h (Apple), glx.h (Unix), and glxext.h (Unix).
+//   Currently you still would #include <Windows.h> for the base wgl functions on Windows and OpenGL.h or NSOpenGL for the 
+//   base Apple cgl functions.
+// 
 // - You call OpenGL functions just like you would if you were directly using OpenGL 
 //   headers and declarations. The difference is that this module automatically loads
 //   extensions on init and so you should never need to use GetProcAddress, wglGetProcAddress, etc.
@@ -116,27 +120,71 @@
     void* GLEGetProcAddress(const char* name);
 
 
-
+    // GLEContext
+    //
     // Manages a collection of OpenGL extension interfaces.
     // If the application has multiple OpenGL unrelated contexts then you will want to create a
     // different instance of this class for each one you intend to use it with.
     //
+    // Example usage:
+    //     GLEContext gGLEContext;
+    //
+    //     GLEContext::SetCurrentContext(&gGLEContext);
+    //     gGLEContext.PlatformInit(); // Initializes WGL/GLX/etc. platform-specific OpenGL functionality
+    //
+    //     if(GLE_WGL_ARB_create_context) // If wglCreateContextAttribsARB is available...
+    //     {
+    //         int attribList[] = { WGL_CONTEXT_MAJOR_VERSION_ARB, 3, WGL_CONTEXT_MINOR_VERSION_ARB, 2, WGL_CONTEXT_FLAGS_ARB, WGL_CONTEXT_DEBUG_BIT_ARB, None };
+    //         HGLRC h = wglCreateContextAttribsARB(hDC, 0, attribList);
+    //         [...]
+    //     }
+    //
+    //     gGLEContext.Init(); // Must be called after an OpenGL context has been created.
+    //
+    //     if(GLE_WHOLE_VERSION() >= 302) // If OpenGL 3.2 or later
+    //     {
+    //         glFramebufferTexture(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, someTexture, 0); // This is an OpenGL 3.2 function.
+    //         [...]
+    //     }
+    //
+    //     if(GLE_GL_ARB_texture_multisample) // If the GL_ARB_texture_multisample extension is available...
+    //     {
+    //         glEnable(GL_SAMPLE_MASK);
+    //         glSampleMaski(0, 0x1);
+    //         [...]
+    //     }
+    //
+    //     [...]
+    //
+    //     gGLEContext.Shutdown();
+    //
     GLE_CLASS_EXPORT class GLEContext
     {
     public:
         GLEContext();
        ~GLEContext();
       
-        // Loads all the extensions from the current OpenGL context.
+        // Initializes platform-specific functionality (e.g. Windows WGL, Unix GLX, Android EGL, Apple CGL).
+        // You would typically call this before creating an OpenGL context and using platform-specific functions.
+        void PlatformInit();
+        bool IsPlatformInitialized() const;
+
+        // Loads all the extensions from the current OpenGL context. This must be called after an OpenGL context 
+        // has been created and made current.
         void Init();
+        bool IsInitialized() const;
         
-        // Clears all the extensions
+        // Clears all the extensions initialized by PlatformInit and Init. 
         void Shutdown();
 
+        void SetEnableHookGetError(bool enabled)
+            { EnableHookGetError = enabled; }
+
         // Returns the default instance of this class.
         static GLEContext* GetCurrentContext();
         
         // Sets the default instance of this class. This should be called after enabling a new OpenGL context.
+        // This sets the current GLEContext; it does not set the underlying OpenGL context itself.
         static void SetCurrentContext(GLEContext*);
         
     public:
@@ -146,17 +194,27 @@
         int   WholeVersion;             // Equals ((MajorVersion * 100) + MinorVersion). Example usage: if(glv.WholeVersion >= 302) // If OpenGL v3.02+ ...
         bool  IsGLES;                   // Open GL ES?
         bool  IsCoreProfile;            // Is the current OpenGL context a core profile context? Its trueness may be a false positive but will never be a false negative.
+        bool  EnableHookGetError;       // If enabled then hook functions call glGetError after making the call.
+
+        int   PlatformMajorVersion;     // GLX/WGL/EGL/CGL version. Not the same as OpenGL version.
+        int   PlatformMinorVersion;
+        int   PlatformWholeVersion;
 
         void InitVersion();             // Initializes the version information (e.g. MajorVersion). Called by the public Init function.
         void InitExtensionLoad();       // Loads the function addresses into the function pointers.
         void InitExtensionSupport();    // Loads the boolean extension support booleans.
         
+        void InitPlatformVersion();
+        void InitPlatformExtensionLoad();
+        void InitPlatformExtensionSupport();
+
     public:
         // GL_VERSION_1_1
         // Not normally included because all OpenGL 1.1 functionality is always present. But if we have 
         // hooking enabled then we implement our own version of each function.
         #if defined(GLE_HOOKING_ENABLED)
-            void PostHook();            // Called at the end of a hook function.
+          //void PreHook(const char* functionName);             // Called at the beginning of a hook function.
+            void PostHook(const char* functionName);            // Called at the end of a hook function.
 
             void            glAccum_Hook(GLenum op, GLfloat value);
             void            glAlphaFunc_Hook(GLenum func, GLclampf ref);
@@ -849,7 +907,7 @@
             void   glDebugMessageCallbackAMD_Hook(GLDEBUGPROCAMD callback, GLvoid *userParam);
             GLuint glGetDebugMessageLogAMD_Hook(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
 
-        #if defined(GLE_APPLE_ENABLED)
+        #if defined(GLE_CGL_ENABLED)
             // GL_APPLE_element_array
             void glElementPointerAPPLE_Hook(GLenum type, const GLvoid *pointer);
             void glDrawElementArrayAPPLE_Hook(GLenum mode, GLint first, GLsizei count);
@@ -899,7 +957,7 @@
             void glMapVertexAttrib1fAPPLE_Hook(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
             void glMapVertexAttrib2dAPPLE_Hook(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
             void glMapVertexAttrib2fAPPLE_Hook(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
-        #endif // GLE_APPLE_ENABLED
+        #endif // GLE_CGL_ENABLED
 
             // GL_ARB_debug_output
             void   glDebugMessageControlARB_Hook(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
@@ -976,10 +1034,11 @@
             // GL_WIN_swap_hint
             void glAddSwapHintRectWIN_Hook(GLint x, GLint y, GLsizei width, GLsizei height);
 
-          #if defined(GLE_WINDOWS_ENABLED)
-            void PostWGLHook();
+          #if defined(GLE_WGL_ENABLED)
+            void PostWGLHook(const char* functionName);
 
             // WGL
+            /* Hooking of these is currently disabled.
             BOOL  wglCopyContext_Hook(HGLRC, HGLRC, UINT);
             HGLRC wglCreateContext_Hook(HDC);
             HGLRC wglCreateLayerContext_Hook(HDC, int);
@@ -999,6 +1058,7 @@
             BOOL  wglRealizeLayerPalette_Hook(HDC, int, BOOL);
             BOOL  wglSwapLayerBuffers_Hook(HDC, UINT);
             DWORD wglSwapMultipleBuffers_Hook(UINT, CONST WGLSWAP *);
+            */
 
             // WGL_ARB_buffer_region
             HANDLE wglCreateBufferRegionARB_Hook (HDC hDC, int iLayerPlane, UINT uType);
@@ -1088,10 +1148,10 @@
             BOOL   wglDXObjectAccessNV_Hook(HANDLE hObject, GLenum access);
             BOOL   wglDXLockObjectsNV_Hook(HANDLE hDevice, GLint count, HANDLE *hObjects);
             BOOL   wglDXUnlockObjectsNV_Hook(HANDLE hDevice, GLint count, HANDLE *hObjects);
-          #endif // GLE_WINDOWS_ENABLED
+          #endif // GLE_WGL_ENABLED
 
-          #if defined(GLE_UNIX_ENABLED)
-            void PostGLXHook();
+          #if defined(GLE_GLX_ENABLED)
+            void PostGLXHook(const char* functionName);
 
             // GLX_VERSION_1_0
             // GLX_VERSION_1_1
@@ -1122,6 +1182,9 @@
             // GLX_VERSION_1_4
             // We don't do hooking of this.
 
+            // GLX_ARB_create_context
+            GLXContext glXCreateContextAttribsARB_Hook(Display* dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list);
+
             // GLX_EXT_swap_control
             void glXSwapIntervalEXT_Hook(::Display* dpy, GLXDrawable drawable, int interval);
 
@@ -1132,7 +1195,11 @@
 			Bool    glXWaitForMscOML_Hook(::Display* dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t* ust, int64_t* msc, int64_t* sbc);
 			Bool    glXWaitForSbcOML_Hook(::Display* dpy, GLXDrawable drawable, int64_t target_sbc, int64_t* ust, int64_t* msc, int64_t* sbc);
 
-          #endif // GLE_UNIX_ENABLED
+            // GLX_MESA_swap_control
+            int glXGetSwapIntervalMESA_Hook();
+            int glXSwapIntervalMESA_Hook(unsigned int interval);
+
+          #endif // GLE_GLX_ENABLED
 
         #endif // #if defined(GLE_HOOKING_ENABLED)
 
@@ -1489,7 +1556,7 @@
         PFNGLDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD_Impl;
         PFNGLGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD_Impl;
 
-      #if defined(GLE_APPLE_ENABLED)
+      #if defined(GLE_CGL_ENABLED)
         // GL_APPLE_aux_depth_stencil
         // (no functions)
 
@@ -1563,7 +1630,7 @@
         PFNGLMAPVERTEXATTRIB1FAPPLEPROC glMapVertexAttrib1fAPPLE_Impl;
         PFNGLMAPVERTEXATTRIB2DAPPLEPROC glMapVertexAttrib2dAPPLE_Impl;
         PFNGLMAPVERTEXATTRIB2FAPPLEPROC glMapVertexAttrib2fAPPLE_Impl;
-      #endif // GLE_APPLE_ENABLED
+      #endif // GLE_CGL_ENABLED
       
         // GL_ARB_debug_output
         PFNGLDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallbackARB_Impl;
@@ -1612,6 +1679,9 @@
         // GL_ARB_texture_non_power_of_two
         // (no functions)
 
+        // GL_ARB_texture_rectangle
+        // (no functions)
+
         // GL_ARB_timer_query
         PFNGLGETQUERYOBJECTI64VPROC glGetQueryObjecti64v_Impl;
         PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v_Impl;
@@ -1651,7 +1721,7 @@
         // GL_WIN_swap_hint
         PFNGLADDSWAPHINTRECTWINPROC glAddSwapHintRectWIN_Impl;
 
-      #if defined(GLE_WINDOWS_ENABLED)
+      #if defined(GLE_WGL_ENABLED)
         // WGL
         // We don't declare pointers for these because we statically link to the implementations, same as with the OpenGL 1.1 functions.
         // BOOL  wglCopyContext_Hook(HGLRC, HGLRC, UINT);
@@ -1674,6 +1744,28 @@
         // BOOL  wglSwapLayerBuffers_Hook(HDC, UINT);
         // DWORD wglSwapMultipleBuffers_Hook(UINT, CONST WGLSWAP *);
 
+        #if 0
+        PFNWGLCOPYCONTEXTPROC            wglCopyContext_Impl;
+        PFNWGLCREATECONTEXTPROC          wglCreateContext_Impl;
+        PFNWGLCREATELAYERCONTEXTPROC     wglCreateLayerContext_Impl;
+        PFNWGLDELETECONTEXTPROC          wglDeleteContext_Impl;
+        PFNWGLGETCURRENTCONTEXTPROC      wglGetCurrentContext_Impl;
+        PFNWGLGETCURRENTDCPROC           wglGetCurrentDC_Impl;
+        PFNWGLGETPROCADDRESSPROC         wglGetProcAddress_Impl;
+        PFNWGLMAKECURRENTPROC            wglMakeCurrent_Impl;
+        PFNWGLSHARELISTSPROC             wglShareLists_Impl;
+        PFNWGLUSEFONTBITMAPSAPROC        wglUseFontBitmapsA_Impl;
+        PFNWGLUSEFONTBITMAPSWPROC        wglUseFontBitmapsW_Impl;
+        PFNWGLUSEFONTOUTLINESAPROC       wglUseFontOutlinesA_Impl;
+        PFNWGLUSEFONTOUTLINESWPROC       wglUseFontOutlinesW_Impl;
+        PFNWGLDESCRIBELAYERPLANEPROC     wglDescribeLayerPlane_Impl;
+        PFNWGLSETLAYERPALETTEENTRIESPROC wglSetLayerPaletteEntries_Impl;
+        PFNWGLGETLAYERPALETTEENTRIESPROC wglGetLayerPaletteEntries_Impl;
+        PFNWGLREALIZELAYERPALETTEPROC    wglRealizeLayerPalette_Impl;
+        PFNWGLSWAPLAYERBUFFERSPROC       wglSwapLayerBuffers_Impl;
+        PFNWGLSWAPMULTIPLEBUFFERSPROC    wglSwapMultipleBuffers_Impl;
+        #endif
+
         // WGL_ARB_buffer_region
         PFNWGLCREATEBUFFERREGIONARBPROC  wglCreateBufferRegionARB_Impl;
         PFNWGLDELETEBUFFERREGIONARBPROC  wglDeleteBufferRegionARB_Impl;
@@ -1739,9 +1831,6 @@
         PFNWGLWAITFORMSCOMLPROC          wglWaitForMscOML_Impl;
         PFNWGLWAITFORSBCOMLPROC          wglWaitForSbcOML_Impl;
 
-        // WGL_EXT_framebuffer_sRGB
-        // (no functions)
-
         // WGL_NV_video_output
         PFNWGLGETVIDEODEVICENVPROC     wglGetVideoDeviceNV_Impl;
         PFNWGLRELEASEVIDEODEVICENVPROC wglReleaseVideoDeviceNV_Impl;
@@ -1778,9 +1867,9 @@
         PFNWGLDXUNLOCKOBJECTSNVPROC          wglDXUnlockObjectsNV_Impl;
         PFNWGLDXUNREGISTEROBJECTNVPROC       wglDXUnregisterObjectNV_Impl;
 
-      #endif // GLE_WINDOWS_ENABLED
+      #endif // GLE_WGL_ENABLED
       
-      #if defined(GLE_UNIX_ENABLED)
+      #if defined(GLE_GLX_ENABLED)
         // GLX_VERSION_1_1
         // We don't create any pointers, because we assume these functions are always present.
         
@@ -1809,6 +1898,9 @@
         // GLX_VERSION_1_4
         // Nothing to declare
         
+        // GLX_ARB_create_context
+        PFNGLXCREATECONTEXTATTRIBSARBPROC glXCreateContextAttribsARB_Impl;
+
         // GLX_EXT_swap_control
         PFNGLXSWAPINTERVALEXTPROC glXSwapIntervalEXT_Impl;
 
@@ -1819,74 +1911,87 @@
         PFNGLXWAITFORMSCOMLPROC     glXWaitForMscOML_Impl;
         PFNGLXWAITFORSBCOMLPROC     glXWaitForSbcOML_Impl;
 
-      #endif // GLE_UNIX_ENABLED
+        // GLX_MESA_swap_control
+        PFNGLXGETSWAPINTERVALMESAPROC glXGetSwapIntervalMESA_Impl;
+        PFNGLXSWAPINTERVALMESAPROC    glXSwapIntervalMESA_Impl;
+
+      #endif // GLE_GLX_ENABLED
 
         
         // Boolean extension support indicators. Each of these identifies the
         // presence or absence of the given extension. A better solution here
         // might be to use an STL map<const char*, bool>.
-        bool gl_AMD_debug_output;
-      //bool gl_AMD_performance_monitor;
-        bool gl_APPLE_aux_depth_stencil;
-        bool gl_APPLE_client_storage;
-        bool gl_APPLE_element_array;
-        bool gl_APPLE_fence;
-        bool gl_APPLE_float_pixels;
-        bool gl_APPLE_flush_buffer_range;
-        bool gl_APPLE_object_purgeable;
-        bool gl_APPLE_pixel_buffer;
-        bool gl_APPLE_rgb_422;
-        bool gl_APPLE_row_bytes;
-        bool gl_APPLE_specular_vector;
-        bool gl_APPLE_texture_range;
-        bool gl_APPLE_transform_hint;
-        bool gl_APPLE_vertex_array_object;
-        bool gl_APPLE_vertex_array_range;
-        bool gl_APPLE_vertex_program_evaluators;
-        bool gl_APPLE_ycbcr_422;
-        bool gl_ARB_debug_output;
-      //bool gl_ARB_direct_state_access;
-        bool gl_ARB_ES2_compatibility;
-        bool gl_ARB_framebuffer_object;
-        bool gl_ARB_framebuffer_sRGB;
-        bool gl_ARB_texture_multisample;
-        bool gl_ARB_texture_non_power_of_two;
-        bool gl_ARB_timer_query;
-        bool gl_ARB_vertex_array_object;
-      //bool gl_ARB_vertex_attrib_binding;
-        bool gl_EXT_draw_buffers2;
-        bool gl_EXT_texture_filter_anisotropic;
-      //bool gl_KHR_context_flush_control;
-        bool gl_KHR_debug;
-      //bool gl_KHR_robust_buffer_access_behavior;
-      //bool gl_KHR_robustness;
-        bool gl_WIN_swap_hint;
-        
-      #if defined(GLE_WINDOWS_ENABLED)
-        bool gl_WGL_ARB_buffer_region;
-        bool gl_WGL_ARB_extensions_string;
-        bool gl_WGL_ARB_pixel_format;
-        bool gl_WGL_ARB_make_current_read;
-        bool gl_WGL_ARB_pbuffer;
-        bool gl_WGL_ARB_render_texture;
-        bool gl_WGL_TYPE_RGBA_FLOAT_ARB;
-        bool gl_WGL_ARB_framebuffer_sRGB;
-        bool gl_WGL_NV_present_video;
-        bool gl_WGL_ARB_create_context;
-        bool gl_WGL_ARB_create_context_profile;
-        bool gl_WGL_ARB_create_context_robustness;
-        bool gl_WGL_EXT_extensions_string;
-        bool gl_WGL_EXT_swap_control;
-        bool gl_WGL_OML_sync_control;
-        bool gl_WGL_EXT_framebuffer_sRGB;
-        bool gl_WGL_NV_video_output;
-        bool gl_WGL_NV_swap_group;
-        bool gl_WGL_NV_video_capture;
-        bool gl_WGL_NV_copy_image;
-        bool gl_WGL_NV_DX_interop;
-      #elif defined(GLE_UNIX_ENABLED)
-        bool gl_GLX_EXT_swap_control;
-        bool gl_GLX_OML_sync_control;
+        bool gle_AMD_debug_output;
+      //bool gle_AMD_performance_monitor;
+        bool gle_APPLE_aux_depth_stencil;
+        bool gle_APPLE_client_storage;
+        bool gle_APPLE_element_array;
+        bool gle_APPLE_fence;
+        bool gle_APPLE_float_pixels;
+        bool gle_APPLE_flush_buffer_range;
+        bool gle_APPLE_object_purgeable;
+        bool gle_APPLE_pixel_buffer;
+        bool gle_APPLE_rgb_422;
+        bool gle_APPLE_row_bytes;
+        bool gle_APPLE_specular_vector;
+        bool gle_APPLE_texture_range;
+        bool gle_APPLE_transform_hint;
+        bool gle_APPLE_vertex_array_object;
+        bool gle_APPLE_vertex_array_range;
+        bool gle_APPLE_vertex_program_evaluators;
+        bool gle_APPLE_ycbcr_422;
+        bool gle_ARB_debug_output;
+        bool gle_ARB_depth_buffer_float;
+      //bool gle_ARB_direct_state_access;
+        bool gle_ARB_ES2_compatibility;
+        bool gle_ARB_framebuffer_object;
+        bool gle_ARB_framebuffer_sRGB;
+        bool gle_ARB_texture_multisample;
+        bool gle_ARB_texture_non_power_of_two;
+        bool gle_ARB_texture_rectangle;
+        bool gle_ARB_timer_query;
+        bool gle_ARB_vertex_array_object;
+      //bool gle_ARB_vertex_attrib_binding;
+        bool gle_EXT_draw_buffers2;
+        bool gle_EXT_texture_compression_s3tc;
+        bool gle_EXT_texture_filter_anisotropic;
+      //bool gle_KHR_context_flush_control;
+        bool gle_KHR_debug;
+      //bool gle_KHR_robust_buffer_access_behavior;
+      //bool gle_KHR_robustness;
+        bool gle_WIN_swap_hint;
+        
+      #if defined(GLE_WGL_ENABLED)
+        bool gle_WGL_ARB_buffer_region;
+        bool gle_WGL_ARB_create_context;
+        bool gle_WGL_ARB_create_context_profile;
+        bool gle_WGL_ARB_create_context_robustness;
+        bool gle_WGL_ARB_extensions_string;
+        bool gle_WGL_ARB_framebuffer_sRGB;
+        bool gle_WGL_ARB_make_current_read;
+        bool gle_WGL_ARB_pbuffer;
+        bool gle_WGL_ARB_pixel_format;
+        bool gle_WGL_ARB_pixel_format_float;
+        bool gle_WGL_ARB_render_texture;
+        bool gle_WGL_ATI_render_texture_rectangle;
+        bool gle_WGL_EXT_extensions_string;
+        bool gle_WGL_EXT_swap_control;
+        bool gle_WGL_NV_copy_image;
+        bool gle_WGL_NV_DX_interop;
+        bool gle_WGL_NV_DX_interop2;
+        bool gle_WGL_NV_present_video;
+        bool gle_WGL_NV_render_texture_rectangle;
+        bool gle_WGL_NV_swap_group;
+        bool gle_WGL_NV_video_capture;
+        bool gle_WGL_NV_video_output;
+        bool gle_WGL_OML_sync_control;
+      #elif defined(GLE_GLX_ENABLED)
+        bool gle_GLX_ARB_create_context;
+        bool gle_GLX_ARB_create_context_profile;
+		bool gle_GLX_ARB_create_context_robustness;
+        bool gle_GLX_EXT_swap_control;
+        bool gle_GLX_OML_sync_control;
+        bool gle_MESA_swap_control;
       #endif
         
     }; // class GLEContext
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GLE_GL.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/CAPI/GL/CAPI_GLE_GL.h	2014-12-03 13:25:20.000000000 -0800
@@ -30,7 +30,7 @@
 
 
 // Windows headers
-//     <wingdi.h>            Windows-specific OpenGL 1.1 intefaces. Long ago this was <GL/wgl.h>.
+//     <wingdi.h>            Windows-specific OpenGL 1.1 interfaces. Long ago this was <GL/wgl.h>.
 //     <GL/gl.h>             OpenGL 1.1 interface.
 //     <GL/glext.h>          OpenGL 1.2+ compatibility profile and extension interfaces. Not provided by Microsoft.
 //     <GL/wglext.h>         Windows-specific extension interfaces. Not provided by Microsoft.
@@ -40,17 +40,17 @@
 //     <OpenGL/gl.h>         OpenGL 1.1 interface.
 //     <OpenGL/glext.h>      OpenGL 1.2+ compatibility profile and extension interfaces.
 //     <OpenGL/gl3.h>        Includes only interfaces supported in a core OpenGL 3.1 implementations plus a few related extensions.
-//     <OpenGL/gl3ext.h>     Includes extensions supproted in a core OpenGL 3.1 implmentation.
-//     <OpenGL/OpenGL.h>     Apple-specific extension interfaces.
+//     <OpenGL/gl3ext.h>     Includes extensions supported in a core OpenGL 3.1 implementation.
+//     <OpenGL/OpenGL.h>     Apple-specific OpenGL interfaces.
+//     <OpenGL/NSOpenGL.h>   Apple-specific OpenGL interfaces.
 //
 // Linux headers
 //     <GL/gl.h>             OpenGL 1.1 interface.
 //     <GL/glext.h>          OpenGL 1.2+ compatibility profile and extension interfaces.
-//     <GL/glx.h>            X Windows-specific OpenGL interfaces
+//     <GL/glx.h>            X Windows-specific OpenGL interfaces.
 //     <GL/glxext.h>         X Windows 1.3+ API and GLX extension interfaces.
 //     <GL/glcorearb.h>      OpenGL core profile and ARB extension interfaces. Doesn't include interfaces found only in the compatibility profile. Overlaps with gl.h and glext.h.
 
-
 #if defined(__gl_h_) || defined(__GL_H__) || defined(__X_GL_H)
     #error gl.h should be included after this, not before.
 #endif
@@ -78,22 +78,24 @@
 
 // GLE platform identification
 #if defined(_WIN32)
-    #define GLE_WINDOWS_ENABLED 1   // WGL interface
-#elif defined(__APPLE__)
-    #define GLE_APPLE_ENABLED 1     // CGL interface
+    #define GLE_WGL_ENABLED 1     // WGL interface
 #elif defined(__ANDROID__)
-    #define GLE_ANDROID_ENABLED 1   // EGL interface
+    #define GLE_EGL_ENABLED 1     // EGL interface
+#elif defined(__IPHONE__)
+    #define GLE_EAGL_ENABLED 1    // EAGL interface
+#elif defined(__APPLE__)
+    #define GLE_CGL_ENABLED 1     // CGL interface
 #else
-    #define GLE_UNIX_ENABLED        // GLX interface
+    #define GLE_GLX_ENABLED 1     // GLX interface
 #endif
 
 
 // GLAPI / GLAPIENTRY
 //
 // GLAPI is a wrapper for Microsoft __declspec(dllimport).
-// GLAPIENTRY is the calling convension (__stdcall under Microsoft).
+// GLAPIENTRY is the calling convention (__stdcall under Microsoft).
 //
-#if defined(GLE_WINDOWS_ENABLED)
+#if defined(GLE_WGL_ENABLED)
     #if !defined(WINAPI)
         #ifndef WIN32_LEAN_AND_MEAN
             #define WIN32_LEAN_AND_MEAN 1
@@ -135,7 +137,9 @@
 // When enabled, we intercept all OpenGL calls and do any useful internal processing before or after the call.
 // An example use case for this is to intercept OpenGL errors on platforms that don't support the OpenGL 
 // debug functionality (e.g. KHR_Debug).
-#define GLE_HOOKING_ENABLED 1
+#if !defined(GLE_WGL_ENABLED) && !defined(GLE_GLX_ENABLED) && defined(OVR_BUILD_DEBUG) // Windows and Unix don't need it because they have OpenGL debug extension support (e.g. KHR_Debug).
+    #define GLE_HOOKING_ENABLED 1
+#endif
 
 // When using hooking, we map all OpenGL function usage to our member functions that end with _Hook. 
 // These member hook functions will internally call the actual OpenGL functions after doing some internal processing.
@@ -147,6 +151,22 @@
     #define GLEGetCurrentVariable(x) GLEContext::GetCurrentContext()->x
 #endif
 
+// GLE_CURRENT_FUNCTION
+// Used by hooking in debug builds.
+#if defined(OVR_BUILD_DEBUG)
+    #define GLE_CURRENT_FUNCTION __FUNCTION__
+#else
+    #define GLE_CURRENT_FUNCTION NULL
+#endif
+
+
+// GLE_WHOLE_VERSION
+// Returns the major+minor version of the current GLEContext.
+// Example usage:
+//     if(GLE_WHOLE_VERSION() >= 302) // If OpenGL 3.2 or later...
+//         ...
+#define GLE_WHOLE_VERSION() GLEContext::GetCurrentContext()->WholeVersion()
+
 
 
 #ifdef __cplusplus
@@ -2549,8 +2569,6 @@
     #define glPrimitiveRestartIndex GLEGetCurrentFunction(glPrimitiveRestartIndex)
     #define glTexBuffer GLEGetCurrentFunction(glTexBuffer)
 
-    #define GLE_VERSION_3_1 GLEGetCurrentVariable(gl_VERSION_3_1)
-
 #endif // GL_VERSION_3_1
 
 
@@ -2589,8 +2607,6 @@
     #define glGetBufferParameteri64v GLEGetCurrentFunction(glGetBufferParameteri64v)
     #define glGetInteger64i_v GLEGetCurrentFunction(glGetInteger64i_v)
 
-    #define GLE_VERSION_3_2 GLEGetCurrentVariable(gl_VERSION_3_2)
-    
 #endif // GL_VERSION_3_2
 
 
@@ -2715,7 +2731,7 @@
     #define glDebugMessageInsertAMD   GLEGetCurrentFunction(glDebugMessageInsertAMD)
     #define glGetDebugMessageLogAMD   GLEGetCurrentFunction(glGetDebugMessageLogAMD)
 
-    #define GLE_AMD_debug_output GLEGetCurrentVariable(gl_AMD_debug_output)
+    #define GLE_AMD_debug_output GLEGetCurrentVariable(gle_AMD_debug_output)
 
 #endif // GL_AMD_debug_output
 
@@ -2757,19 +2773,19 @@
     #define glGetPerfMonitorGroupsAMD GLEGetCurrentFunction(glGetPerfMonitorGroupsAMD)
     #define glSelectPerfMonitorCountersAMD GLEGetCurrentFunction(glSelectPerfMonitorCountersAMD)
 
-    #define GLE_AMD_performance_monitor GLEGetCurrentVariable(gl_AMD_performance_monitor)
+    #define GLE_AMD_performance_monitor GLEGetCurrentVariable(gle_AMD_performance_monitor)
 
 #endif // GL_AMD_performance_monitor
 */
 
 
-#if defined(GLE_APPLE_ENABLED)
+#if defined(GLE_CGL_ENABLED)
     #ifndef GL_APPLE_aux_depth_stencil
         #define GL_APPLE_aux_depth_stencil 1
 
         #define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14g
 
-        #define GLE_APPLE_aux_depth_stencil GLEGetCurrentVariable(gl_APPLE_aux_depth_stencil)
+        #define GLE_APPLE_aux_depth_stencil GLEGetCurrentVariable(gle_APPLE_aux_depth_stencil)
     #endif
 
 
@@ -2779,7 +2795,7 @@
 
         #define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
 
-        #define GLE_APPLE_client_storage GLEGetCurrentVariable(gl_APPLE_client_storage)
+        #define GLE_APPLE_client_storage GLEGetCurrentVariable(gle_APPLE_client_storage)
     #endif
 
 
@@ -2803,7 +2819,7 @@
         #define glMultiDrawElementArrayAPPLE GLEGetCurrentFunction(glMultiDrawElementArrayAPPLE)
         #define glMultiDrawRangeElementArrayAPPLE GLEGetCurrentFunction(glMultiDrawRangeElementArrayAPPLE)
 
-        #define GLE_APPLE_element_array GLEGetCurrentVariable(gl_APPLE_element_array)
+        #define GLE_APPLE_element_array GLEGetCurrentVariable(gle_APPLE_element_array)
     #endif
 
 
@@ -2832,7 +2848,7 @@
         #define glTestFenceAPPLE GLEGetCurrentFunction(glTestFenceAPPLE)
         #define glTestObjectAPPLE GLEGetCurrentFunction(glTestObjectAPPLE)
 
-        #define GLE_APPLE_fence GLEGetCurrentVariable(gl_APPLE_fence)
+        #define GLE_APPLE_fence GLEGetCurrentVariable(gle_APPLE_fence)
 
     #endif
 
@@ -2856,7 +2872,7 @@
         #define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
         #define GL_COLOR_FLOAT_APPLE 0x8A0F
 
-        #define GLE_APPLE_float_pixels GLEGetCurrentVariable(gl_APPLE_float_pixels)
+        #define GLE_APPLE_float_pixels GLEGetCurrentVariable(gle_APPLE_float_pixels)
     #endif
 
 
@@ -2873,7 +2889,7 @@
         #define glBufferParameteriAPPLE GLEGetCurrentFunction(glBufferParameteriAPPLE)
         #define glFlushMappedBufferRangeAPPLE GLEGetCurrentFunction(glFlushMappedBufferRangeAPPLE)
 
-        #define GLE_APPLE_flush_buffer_range GLEGetCurrentVariable(gl_APPLE_flush_buffer_range)
+        #define GLE_APPLE_flush_buffer_range GLEGetCurrentVariable(gle_APPLE_flush_buffer_range)
     #endif
 
 
@@ -2896,7 +2912,7 @@
         #define glObjectPurgeableAPPLE GLEGetCurrentFunction(glObjectPurgeableAPPLE)
         #define glObjectUnpurgeableAPPLE GLEGetCurrentFunction(glObjectUnpurgeableAPPLE)
 
-        #define GLE_APPLE_object_purgeable GLEGetCurrentVariable(gl_APPLE_object_purgeable)
+        #define GLE_APPLE_object_purgeable GLEGetCurrentVariable(gle_APPLE_object_purgeable)
     #endif
 
 
@@ -2906,7 +2922,7 @@
 
         #define GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE 0x8A10
 
-        #define GLE_APPLE_pixel_buffer GLEGetCurrentVariable(gl_APPLE_pixel_buffer)
+        #define GLE_APPLE_pixel_buffer GLEGetCurrentVariable(gle_APPLE_pixel_buffer)
     #endif
 
 
@@ -2919,7 +2935,7 @@
         #define GL_RGB_422_APPLE 0x8A1F
         #define GL_RGB_RAW_422_APPLE 0x8A51
 
-        #define GLE_APPLE_rgb_422 GLEGetCurrentVariable(gl_APPLE_rgb_422)
+        #define GLE_APPLE_rgb_422 GLEGetCurrentVariable(gle_APPLE_rgb_422)
     #endif
 
 
@@ -2930,7 +2946,7 @@
         #define GL_PACK_ROW_BYTES_APPLE 0x8A15
         #define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
 
-        #define GLE_APPLE_row_bytes GLEGetCurrentVariable(gl_APPLE_row_bytes)
+        #define GLE_APPLE_row_bytes GLEGetCurrentVariable(gle_APPLE_row_bytes)
     #endif
 
 
@@ -2940,7 +2956,7 @@
 
         #define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
 
-        #define GLE_APPLE_specular_vector GLEGetCurrentVariable(gl_APPLE_specular_vector)
+        #define GLE_APPLE_specular_vector GLEGetCurrentVariable(gle_APPLE_specular_vector)
     #endif
 
 
@@ -2961,7 +2977,7 @@
         #define glGetTexParameterPointervAPPLE GLEGetCurrentFunction(glGetTexParameterPointervAPPLE)
         #define glTextureRangeAPPLE GLEGetCurrentFunction(glTextureRangeAPPLE)
 
-        #define GLE_APPLE_texture_range GLEGetCurrentVariable(gl_APPLE_texture_range)
+        #define GLE_APPLE_texture_range GLEGetCurrentVariable(gle_APPLE_texture_range)
     #endif
 
 
@@ -2970,7 +2986,7 @@
 
         #define GL_TRANSFORM_HINT_APPLE 0x85B1
 
-        #define GLE_APPLE_transform_hint GLEGetCurrentVariable(gl_APPLE_transform_hint)
+        #define GLE_APPLE_transform_hint GLEGetCurrentVariable(gle_APPLE_transform_hint)
     #endif
 
 
@@ -2995,7 +3011,7 @@
         #define glGenVertexArraysAPPLE    GLEGetCurrentFunction(glGenVertexArraysAPPLE)
         #define glIsVertexArrayAPPLE      GLEGetCurrentFunction(glIsVertexArrayAPPLE)
 
-        #define GLE_APPLE_vertex_array_object GLEGetCurrentVariable(gl_APPLE_vertex_array_object)
+        #define GLE_APPLE_vertex_array_object GLEGetCurrentVariable(gle_APPLE_vertex_array_object)
     #endif
 
 
@@ -3020,7 +3036,7 @@
         #define glVertexArrayParameteriAPPLE GLEGetCurrentFunction(glVertexArrayParameteriAPPLE)
         #define glVertexArrayRangeAPPLE GLEGetCurrentFunction(glVertexArrayRangeAPPLE)
 
-        #define GLE_APPLE_vertex_array_range GLEGetCurrentVariable(gl_APPLE_vertex_array_range)
+        #define GLE_APPLE_vertex_array_range GLEGetCurrentVariable(gle_APPLE_vertex_array_range)
     #endif
 
 
@@ -3055,10 +3071,10 @@
         #define glMapVertexAttrib2dAPPLE GLEGetCurrentFunction(glMapVertexAttrib2dAPPLE)
         #define glMapVertexAttrib2fAPPLE GLEGetCurrentFunction(glMapVertexAttrib2fAPPLE)
 
-        #define GLE_APPLE_vertex_program_evaluators GLEGetCurrentVariable(gl_APPLE_vertex_program_evaluators)
+        #define GLE_APPLE_vertex_program_evaluators GLEGetCurrentVariable(gle_APPLE_vertex_program_evaluators)
     #endif
 
-#endif // GLE_APPLE_ENABLED
+#endif // GLE_CGL_ENABLED
 
 
 #ifndef GL_ARB_debug_output
@@ -3099,12 +3115,23 @@
     #define glDebugMessageInsertARB GLEGetCurrentFunction(glDebugMessageInsertARB)
     #define glGetDebugMessageLogARB GLEGetCurrentFunction(glGetDebugMessageLogARB)
 
-    #define GLE_ARB_debug_output GLEGetCurrentVariable(gl_ARB_debug_output)
+    #define GLE_ARB_debug_output GLEGetCurrentVariable(gle_ARB_debug_output)
 
 #endif // GL_ARB_debug_output
 
 
 
+#ifndef GL_ARB_depth_buffer_float
+    #define GL_ARB_depth_buffer_float 1
+
+    // Supercededs GL_NV_depth_buffer_float
+    #define GL_DEPTH_COMPONENT32F             0x8CAC
+    #define GL_DEPTH32F_STENCIL8              0x8CAD
+    #define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
+
+    #define GLE_ARB_depth_buffer_float GLEGetCurrentVariable(gle_ARB_depth_buffer_float)
+#endif
+
 
 /* Disabled until needed
 #ifndef GL_ARB_direct_state_access
@@ -3302,7 +3329,7 @@
     #define glVertexArrayVertexBuffer GLEGetCurrentFunction(glVertexArrayVertexBuffer)
     #define glVertexArrayVertexBuffers GLEGetCurrentFunction(glVertexArrayVertexBuffers)
 
-    #define GLE_ARB_direct_state_access GLEGetCurrentVariable(gl_ARB_direct_state_access)
+    #define GLE_ARB_direct_state_access GLEGetCurrentVariable(gle_ARB_direct_state_access)
 #endif // GL_ARB_direct_state_access */
 
 
@@ -3342,7 +3369,7 @@
     #define glReleaseShaderCompiler    GLEGetCurrentFunction(glReleaseShaderCompiler)
     #define glShaderBinary             GLEGetCurrentFunction(glShaderBinary)
 
-    #define GLE_ARB_ES2_compatibility GLEGetCurrentVariable(gl_ARB_ES2_compatibility)
+    #define GLE_ARB_ES2_compatibility GLEGetCurrentVariable(gle_ARB_ES2_compatibility)
 #endif
 
 
@@ -3468,7 +3495,7 @@
     #define glRenderbufferStorage                 GLEGetCurrentFunction(glRenderbufferStorage)
     #define glRenderbufferStorageMultisample      GLEGetCurrentFunction(glRenderbufferStorageMultisample)
 
-    #define GLE_ARB_framebuffer_object GLEGetCurrentVariable(gl_ARB_framebuffer_object)
+    #define GLE_ARB_framebuffer_object GLEGetCurrentVariable(gle_ARB_framebuffer_object)
 
 #endif // GL_ARB_framebuffer_object
 
@@ -3480,7 +3507,7 @@
     // GL_ARB_framebuffer_sRGB is part of the OpenGL 4.4 core profile.
     #define GL_FRAMEBUFFER_SRGB 0x8DB9
 
-    #define GLE_ARB_framebuffer_sRGB GLEW_GET_VAR(gle_ARB_framebuffer_sRGB)
+    #define GLE_ARB_framebuffer_sRGB GLEGetCurrentVariable(gle_ARB_framebuffer_sRGB)
 #endif
 
 
@@ -3520,7 +3547,7 @@
     #define glTexImage2DMultisample GLEGetCurrentFunction(glTexImage2DMultisample)
     #define glTexImage3DMultisample GLEGetCurrentFunction(glTexImage3DMultisample)
 
-    #define GLE_ARB_texture_multisample GLEGetCurrentVariable(gl_ARB_texture_multisample)
+    #define GLE_ARB_texture_multisample GLEGetCurrentVariable(gle_ARB_texture_multisample)
 
 #endif // GL_ARB_texture_multisample
 
@@ -3529,7 +3556,27 @@
 #ifndef GL_ARB_texture_non_power_of_two
     #define GL_ARB_texture_non_power_of_two 1
 
-    #define GLE_ARB_texture_non_power_of_two GLEGetCurrentVariable(gl;e_ARB_texture_non_power_of_two)
+    #define GLE_ARB_texture_non_power_of_two GLEGetCurrentVariable(gle_ARB_texture_non_power_of_two)
+#endif
+
+
+
+#ifndef GL_ARB_texture_rectangle
+    #define GL_ARB_texture_rectangle 1
+
+    // texture_rectangle was added to the OpenGL 3.1 core profile and so this extension is not needed
+    // unless using an earlier version of OpenGL.
+    // There are also the GL_EXT_texture_rectangle and GL_NV_texture_rectangle extensions. Apple reports
+    // the preseence of GL_EXT_texture_rectangle but not GL_ARB_texture_rectangle or GL_NV_texture_rectangle.
+    // You should check for GL_ARB_texture_rectangle instead of these other two.
+    #define GL_TEXTURE_RECTANGLE_ARB          0x84F5
+    #define GL_TEXTURE_BINDING_RECTANGLE_ARB  0x84F6
+    #define GL_PROXY_TEXTURE_RECTANGLE_ARB    0x84F7
+    #define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
+    #define GL_SAMPLER_2D_RECT_ARB            0x8B63
+    #define GL_SAMPLER_2D_RECT_SHADOW_ARB     0x8B64
+
+    #define GLE_ARB_texture_rectangle GLEGetCurrentVariable(gle_ARB_texture_rectangle)
 #endif
 
 
@@ -3548,7 +3595,7 @@
     #define glGetQueryObjectui64v GLEGetCurrentFunction(glGetQueryObjectui64v)
     #define glQueryCounter        GLEGetCurrentFunction(glQueryCounter)
 
-    #define GLE_ARB_timer_query GLEGetCurrentVariable(gl_ARB_timer_query)
+    #define GLE_ARB_timer_query GLEGetCurrentVariable(gle_ARB_timer_query)
 #endif
 
 
@@ -3568,7 +3615,7 @@
     #define glGenVertexArrays    GLEGetCurrentFunction(glGenVertexArrays)
     #define glIsVertexArray      GLEGetCurrentFunction(glIsVertexArray)
 
-    #define GLE_ARB_vertex_array_object GLEGetCurrentVariable(gl_ARB_vertex_array_object)
+    #define GLE_ARB_vertex_array_object GLEGetCurrentVariable(gle_ARB_vertex_array_object)
 #endif
 
 
@@ -3612,7 +3659,7 @@
     #define glVertexAttribLFormat GLEGetCurrentFunction(glVertexAttribLFormat)
     #define glVertexBindingDivisor GLEGetCurrentFunction(glVertexBindingDivisor)
 
-    #define GLE_ARB_vertex_attrib_binding GLEGetCurrentVariable(gl_ARB_vertex_attrib_binding)
+    #define GLE_ARB_vertex_attrib_binding GLEGetCurrentVariable(gle_ARB_vertex_attrib_binding)
 #endif
 */
 
@@ -3634,7 +3681,20 @@
     #define glGetIntegerIndexedvEXT GLEGetCurrentFunction(glGetIntegerIndexedvEXT)
     #define glIsEnabledIndexedEXT   GLEGetCurrentFunction(glIsEnabledIndexedEXT)
 
-    #define GLE_EXT_draw_buffers2 GLEGetCurrentVariable(gl_EXT_draw_buffers2)
+    #define GLE_EXT_draw_buffers2 GLEGetCurrentVariable(gle_EXT_draw_buffers2)
+#endif
+
+
+
+#ifndef GL_EXT_texture_compression_s3tc
+    #define GL_EXT_texture_compression_s3tc 1
+
+    #define GL_COMPRESSED_RGB_S3TC_DXT1_EXT  0x83F0
+    #define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
+    #define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
+    #define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
+
+    #define GLE_EXT_texture_compression_s3tc GLEGetCurrentVariable(gle_EXT_texture_compression_s3tc)
 #endif
 
 
@@ -3645,7 +3705,7 @@
     #define GL_TEXTURE_MAX_ANISOTROPY_EXT     0x84FE
     #define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
 
-    #define GLE_EXT_texture_filter_anisotropic GLEW_GET_VAR(gle_EXT_texture_filter_anisotropic)
+    #define GLE_EXT_texture_filter_anisotropic GLEGetCurrentVariable(gle_EXT_texture_filter_anisotropic)
 #endif
 
 
@@ -3654,7 +3714,7 @@
 #ifndef GL_KHR_context_flush_control
     #define GL_KHR_context_flush_control 1
 
-    #define GLE_KHR_context_flush_control GLEGetCurrentVariable(gl_KHR_context_flush_control)
+    #define GLE_KHR_context_flush_control GLEGetCurrentVariable(gle_KHR_context_flush_control)
 #endif
 */
 
@@ -3728,7 +3788,7 @@
     #define glPopDebugGroup GLEGetCurrentFunction(glPopDebugGroup)
     #define glPushDebugGroup GLEGetCurrentFunction(glPushDebugGroup)
 
-    #define GLE_KHR_debug GLEGetCurrentVariable(gl_KHR_debug)
+    #define GLE_KHR_debug GLEGetCurrentVariable(gle_KHR_debug)
 #endif // GL_KHR_debug
 
 
@@ -3736,7 +3796,7 @@
 #ifndef GL_KHR_robust_buffer_access_behavior
     #define GL_KHR_robust_buffer_access_behavior 1
 
-    #define GLE_KHR_robust_buffer_access_behavior GLEGetCurrentVariable(gl_KHR_robust_buffer_access_behavior)
+    #define GLE_KHR_robust_buffer_access_behavior GLEGetCurrentVariable(gle_KHR_robust_buffer_access_behavior)
 #endif
 
 
@@ -3764,7 +3824,7 @@
     #define glGetnUniformuiv GLEGetCurrentFunction(glGetnUniformuiv)
     #define glReadnPixels    GLEGetCurrentFunction(glReadnPixels)
 
-    #define GLE_KHR_robustness GLEGetCurrentVariable(gl_KHR_robustness)
+    #define GLE_KHR_robustness GLEGetCurrentVariable(gle_KHR_robustness)
 
 #endif // GL_KHR_robustness
 */
@@ -3778,7 +3838,7 @@
 
     #define glAddSwapHintRectWIN GLEGetCurrentFunction(glAddSwapHintRectWIN)
 
-    #define GLE_WIN_swap_hint GLEGetCurrentVariable(gl_WIN_swap_hint)
+    #define GLE_WIN_swap_hint GLEGetCurrentVariable(gle_WIN_swap_hint)
 #endif
 
 
@@ -3787,7 +3847,7 @@
    Windows-specific (WGL) functionality
 ************************************************************************************/
 
-#if defined(GLE_WINDOWS_ENABLED)
+#if defined(GLE_WGL_ENABLED)
     #ifdef __wglext_h_
         #error wglext.h was included before this header. This header needs to be inlcuded instead of or at least before wglext.h
     #endif
@@ -3797,7 +3857,7 @@
     DECLARE_HANDLE(HPBUFFERARB); // This type is used by a couple extensions.
 
     // WGL functions from <wingdi.h>
-    #if defined(GLE_HOOKING_ENABLED)
+    #if 0 // defined(GLE_HOOKING_ENABLED) We currently don't hook these.
         #define wglCopyContext(...)              GLEGetCurrentFunction(wglCopyContext)(__VA_ARGS__)
         #define wglCreateContext(...)            GLEGetCurrentFunction(wglCreateContext)(__VA_ARGS__)
         #define wglCreateLayerContext(...)       GLEGetCurrentFunction(wglCreateLayerContext)(__VA_ARGS__)
@@ -3820,27 +3880,47 @@
     #else
         // The following functions are directly declared in Microsoft's <wingdi.h> without associated typedefs, and are exported from Opengl32.dll.
         // We can link to them directly through Opengl32.lib/dll (same as OpenGL 1.1 functions) or we can dynamically link them from OpenGL32.dll at runtime.
-        /*
-        WINGDIAPI BOOL  WINAPI wglCopyContext(HGLRC, HGLRC, UINT);
-        WINGDIAPI HGLRC WINAPI wglCreateContext(HDC);
-        WINGDIAPI HGLRC WINAPI wglCreateLayerContext(HDC, int);
-        WINGDIAPI BOOL  WINAPI wglDeleteContext(HGLRC);
-        WINGDIAPI HGLRC WINAPI wglGetCurrentContext(VOID);
-        WINGDIAPI HDC   WINAPI wglGetCurrentDC(VOID);
-        WINGDIAPI PROC  WINAPI wglGetProcAddress(LPCSTR);
-        WINGDIAPI BOOL  WINAPI wglMakeCurrent(HDC, HGLRC);
-        WINGDIAPI BOOL  WINAPI wglShareLists(HGLRC, HGLRC);
-        WINGDIAPI BOOL  WINAPI wglUseFontBitmapsA(HDC, DWORD, DWORD, DWORD);
-        WINGDIAPI BOOL  WINAPI wglUseFontBitmapsW(HDC, DWORD, DWORD, DWORD);
-        WINGDIAPI BOOL  WINAPI wglUseFontOutlinesA(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);
-        WINGDIAPI BOOL  WINAPI wglUseFontOutlinesW(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);
-        WINGDIAPI BOOL  WINAPI wglDescribeLayerPlane(HDC, int, int, UINT, LPLAYERPLANEDESCRIPTOR);
-        WINGDIAPI int   WINAPI wglSetLayerPaletteEntries(HDC, int, int, int, CONST COLORREF *);
-        WINGDIAPI int   WINAPI wglGetLayerPaletteEntries(HDC, int, int, int, COLORREF *);
-        WINGDIAPI BOOL  WINAPI wglRealizeLayerPalette(HDC, int, BOOL);
-        WINGDIAPI BOOL  WINAPI wglSwapLayerBuffers(HDC, UINT);
-        WINGDIAPI DWORD WINAPI wglSwapMultipleBuffers(UINT, CONST WGLSWAP *);
-        */
+        typedef BOOL  (WINAPI * PFNWGLCOPYCONTEXTPROC)(HGLRC, HGLRC, UINT);
+        typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTPROC)(HDC);
+        typedef HGLRC (WINAPI * PFNWGLCREATELAYERCONTEXTPROC)(HDC, int);
+        typedef BOOL  (WINAPI * PFNWGLDELETECONTEXTPROC)(HGLRC);
+        typedef HGLRC (WINAPI * PFNWGLGETCURRENTCONTEXTPROC)(VOID);
+        typedef HDC   (WINAPI * PFNWGLGETCURRENTDCPROC)(VOID);
+        typedef PROC  (WINAPI * PFNWGLGETPROCADDRESSPROC)(LPCSTR);
+        typedef BOOL  (WINAPI * PFNWGLMAKECURRENTPROC)(HDC, HGLRC);
+        typedef BOOL  (WINAPI * PFNWGLSHARELISTSPROC)(HGLRC, HGLRC);
+        typedef BOOL  (WINAPI * PFNWGLUSEFONTBITMAPSAPROC)(HDC, DWORD, DWORD, DWORD);
+        typedef BOOL  (WINAPI * PFNWGLUSEFONTBITMAPSWPROC)(HDC, DWORD, DWORD, DWORD);
+        typedef BOOL  (WINAPI * PFNWGLUSEFONTOUTLINESAPROC)(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);
+        typedef BOOL  (WINAPI * PFNWGLUSEFONTOUTLINESWPROC)(HDC, DWORD, DWORD, DWORD, FLOAT, FLOAT, int, LPGLYPHMETRICSFLOAT);
+        typedef BOOL  (WINAPI * PFNWGLDESCRIBELAYERPLANEPROC)(HDC, int, int, UINT, LPLAYERPLANEDESCRIPTOR);
+        typedef int   (WINAPI * PFNWGLSETLAYERPALETTEENTRIESPROC)(HDC, int, int, int, CONST COLORREF *);
+        typedef int   (WINAPI * PFNWGLGETLAYERPALETTEENTRIESPROC)(HDC, int, int, int, COLORREF *);
+        typedef BOOL  (WINAPI * PFNWGLREALIZELAYERPALETTEPROC)(HDC, int, BOOL);
+        typedef BOOL  (WINAPI * PFNWGLSWAPLAYERBUFFERSPROC)(HDC, UINT);
+        typedef DWORD (WINAPI * PFNWGLSWAPMULTIPLEBUFFERSPROC)(UINT, CONST WGLSWAP *);
+
+        #if 0
+        #define wglCopyContext             GLEContext::GetCurrentContext()->wglCopyContext_Impl
+        #define wglCreateContext           GLEContext::GetCurrentContext()->wglCreateContext_Impl
+        #define wglCreateLayerContext      GLEContext::GetCurrentContext()->wglCreateLayerContext_Impl
+        #define wglDeleteContext           GLEContext::GetCurrentContext()->wglDeleteContext_Impl
+        #define wglGetCurrentContext       GLEContext::GetCurrentContext()->wglGetCurrentContext_Impl
+        #define wglGetCurrentDC            GLEContext::GetCurrentContext()->wglGetCurrentDC_Impl
+        #define wglGetProcAddress          GLEContext::GetCurrentContext()->wglGetProcAddress_Impl
+        #define wglMakeCurrent             GLEContext::GetCurrentContext()->wglMakeCurrent_Impl
+        #define wglShareLists              GLEContext::GetCurrentContext()->wglShareLists_Impl
+        #define wglUseFontBitmapsA         GLEContext::GetCurrentContext()->wglUseFontBitmapsA_Impl
+        #define wglUseFontBitmapsW         GLEContext::GetCurrentContext()->wglUseFontBitmapsW_Impl
+        #define wglUseFontOutlinesA        GLEContext::GetCurrentContext()->wglUseFontOutlinesA_Impl
+        #define wglUseFontOutlinesW        GLEContext::GetCurrentContext()->wglUseFontOutlinesW_Impl
+        #define wglDescribeLayerPlane      GLEContext::GetCurrentContext()->wglDescribeLayerPlane_Impl
+        #define wglSetLayerPaletteEntries  GLEContext::GetCurrentContext()->wglSetLayerPaletteEntries_Impl
+        #define wglGetLayerPaletteEntries  GLEContext::GetCurrentContext()->wglGetLayerPaletteEntries_Impl
+        #define wglRealizeLayerPalette     GLEContext::GetCurrentContext()->wglRealizeLayerPalette_Impl
+        #define wglSwapLayerBuffers        GLEContext::GetCurrentContext()->wglSwapLayerBuffers_Impl
+        #define wglSwapMultipleBuffers     GLEContext::GetCurrentContext()->wglSwapMultipleBuffers_Impl
+        #endif
     #endif
 
     // Note: In order to detect the WGL extensions' availability, we need to call wglGetExtensionsStringARB or 
@@ -3863,7 +3943,7 @@
         #define wglSaveBufferRegionARB    GLEGetCurrentFunction(wglSaveBufferRegionARB)
         #define wglRestoreBufferRegionARB GLEGetCurrentFunction(wglRestoreBufferRegionARB)
 
-        #define GLE_WGL_ARB_buffer_region GLEGetCurrentVariable(gl_WGL_ARB_buffer_region)
+        #define GLE_WGL_ARB_buffer_region GLEGetCurrentVariable(gle_WGL_ARB_buffer_region)
     #endif
 
 
@@ -3874,7 +3954,7 @@
 
         #define wglGetExtensionsStringARB  GLEGetCurrentFunction(wglGetExtensionsStringARB)
 
-        #define GLE_WGL_ARB_extensions_string GLEGetCurrentVariable(gl_WGL_ARB_extensions_string)
+        #define GLE_WGL_ARB_extensions_string GLEGetCurrentVariable(gle_WGL_ARB_extensions_string)
     #endif
 
 
@@ -3939,7 +4019,7 @@
         #define wglGetPixelFormatAttribfvARB  GLEGetCurrentFunction(wglGetPixelFormatAttribfvARB)
         #define wglChoosePixelFormatARB  GLEGetCurrentFunction(wglChoosePixelFormatARB)
 
-        #define GLE_WGL_ARB_pixel_format GLEGetCurrentVariable(gl_WGL_ARB_pixel_format)
+        #define GLE_WGL_ARB_pixel_format GLEGetCurrentVariable(gle_WGL_ARB_pixel_format)
     #endif
 
 
@@ -3955,7 +4035,7 @@
         #define wglMakeContextCurrentARB  GLEGetCurrentFunction(wglMakeContextCurrentARB)
         #define wglGetCurrentReadDCARB  GLEGetCurrentFunction(wglGetCurrentReadDCARB)
 
-        #define GLE_WGL_ARB_make_current_read GLEGetCurrentVariable(gl_WGL_ARB_make_current_read)
+        #define GLE_WGL_ARB_make_current_read GLEGetCurrentVariable(gle_WGL_ARB_make_current_read)
     #endif
 
 
@@ -3982,7 +4062,7 @@
         #define wglDestroyPbufferARB  GLEGetCurrentFunction(wglDestroyPbufferARB)
         #define wglQueryPbufferARB  GLEGetCurrentFunction(wglQueryPbufferARB)
 
-        #define GLE_WGL_ARB_pbuffer GLEGetCurrentVariable(gl_WGL_ARB_pbuffer)
+        #define GLE_WGL_ARB_pbuffer GLEGetCurrentVariable(gle_WGL_ARB_pbuffer)
     #endif
 
 
@@ -4031,7 +4111,7 @@
         #define wglReleaseTexImageARB  GLEGetCurrentFunction(wglReleaseTexImageARB)
         #define wglSetPbufferAttribARB GLEGetCurrentFunction(wglSetPbufferAttribARB)
 
-        #define GLE_WGL_ARB_render_texture GLEGetCurrentVariable(gl_WGL_ARB_render_texture)
+        #define GLE_WGL_ARB_render_texture GLEGetCurrentVariable(gle_WGL_ARB_render_texture)
     #endif
 
 
@@ -4040,16 +4120,18 @@
 
         #define WGL_TYPE_RGBA_FLOAT_ARB        0x21A0
 
-        #define GLE_WGL_TYPE_RGBA_FLOAT_ARB GLEGetCurrentVariable(gl_WGL_TYPE_RGBA_FLOAT_ARB)
+        #define GLE_WGL_ARB_pixel_format_float GLEGetCurrentVariable(gle_WGL_ARB_pixel_format_float)
     #endif
 
 
     #ifndef WGL_ARB_framebuffer_sRGB
         #define WGL_ARB_framebuffer_sRGB 1
 
+        // There is also the WGL_EXT_framebuffer_sRGB extension, which is the
+        // same as this. So use this one instead of that for checking.
         #define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB 0x20A9
 
-        #define GLE_WGL_ARB_framebuffer_sRGB GLEGetCurrentVariable(gl_WGL_ARB_framebuffer_sRGB)
+        #define GLE_WGL_ARB_framebuffer_sRGB GLEGetCurrentVariable(gle_WGL_ARB_framebuffer_sRGB)
     #endif
 
 
@@ -4066,7 +4148,7 @@
         #define wglBindVideoDeviceNV       GLEGetCurrentFunction(wglBindVideoDeviceNV)
         #define wglQueryCurrentContextNV   GLEGetCurrentFunction(wglQueryCurrentContextNV)
 
-        #define GLE_WGL_NV_present_video GLEGetCurrentVariable(gl_WGL_NV_present_video)
+        #define GLE_WGL_NV_present_video GLEGetCurrentVariable(gle_WGL_NV_present_video)
     #endif
 
 
@@ -4085,7 +4167,7 @@
 
         #define wglCreateContextAttribsARB  GLEGetCurrentFunction(wglCreateContextAttribsARB)
 
-        #define GLE_WGL_ARB_create_context GLEGetCurrentVariable(gl_WGL_ARB_create_context)
+        #define GLE_WGL_ARB_create_context GLEGetCurrentVariable(gle_WGL_ARB_create_context)
     #endif
 
 
@@ -4097,7 +4179,7 @@
         #define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB 0x00000002
         #define ERROR_INVALID_PROFILE_ARB      0x2096
 
-        #define GLE_WGL_ARB_create_context_profile GLEGetCurrentVariable(gl_WGL_ARB_create_context_profile)
+        #define GLE_WGL_ARB_create_context_profile GLEGetCurrentVariable(gle_WGL_ARB_create_context_profile)
     #endif
 
 
@@ -4109,7 +4191,17 @@
         #define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
         #define WGL_NO_RESET_NOTIFICATION_ARB  0x8261
 
-        #define GLE_WGL_ARB_create_context_robustness GLEGetCurrentVariable(gl_WGL_ARB_create_context_robustness)
+        #define GLE_WGL_ARB_create_context_robustness GLEGetCurrentVariable(gle_WGL_ARB_create_context_robustness)
+    #endif
+
+
+
+    #ifndef WGL_ATI_render_texture_rectangle
+        #define WGL_ATI_render_texture_rectangle 1
+
+        #define WGL_TEXTURE_RECTANGLE_ATI 0x21A5
+
+        #define GLE_WGL_ATI_render_texture_rectangle GLEGetCurrentVariable(gle_WGL_ATI_render_texture_rectangle)
     #endif
 
 
@@ -4120,7 +4212,18 @@
 
         #define wglGetExtensionsStringEXT  GLEGetCurrentFunction(wglGetExtensionsStringEXT)
 
-        #define GLE_WGL_EXT_extensions_string GLEGetCurrentVariable(gl_WGL_EXT_extensions_string)
+        #define GLE_WGL_EXT_extensions_string GLEGetCurrentVariable(gle_WGL_EXT_extensions_string)
+    #endif
+
+
+    #ifndef WGL_NV_render_texture_rectangle
+        #define WGL_NV_render_texture_rectangle 1
+
+        #define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV  0x20A0
+        #define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV 0x20A1
+        #define WGL_TEXTURE_RECTANGLE_NV              0x20A2
+
+        #define GLE_WGL_NV_render_texture_rectangle GLEGetCurrentVariable(gle_WGL_NV_render_texture_rectangle)
     #endif
 
 
@@ -4133,7 +4236,7 @@
         #define wglGetSwapIntervalEXT GLEGetCurrentFunction(wglGetSwapIntervalEXT)
         #define wglSwapIntervalEXT    GLEGetCurrentFunction(wglSwapIntervalEXT)
 
-        #define GLE_WGL_EXT_swap_control GLEGetCurrentVariable(gl_WGL_EXT_swap_control)
+        #define GLE_WGL_EXT_swap_control GLEGetCurrentVariable(gle_WGL_EXT_swap_control)
     #endif
 
 
@@ -4154,16 +4257,7 @@
         #define wglWaitForMscOML          GLEGetCurrentFunction(wglWaitForMscOML)
         #define wglWaitForSbcOML          GLEGetCurrentFunction(wglWaitForSbcOML)
 
-        #define GLE_WGL_OML_sync_control GLEGetCurrentVariable(gl_WGL_OML_sync_control)
-    #endif
-
-
-    #ifndef WGL_EXT_framebuffer_sRGB
-        #define WGL_EXT_framebuffer_sRGB 1
-
-        #define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x20A9
-
-        #define GLE_WGL_EXT_framebuffer_sRGB GLEGetCurrentVariable(gl_WGL_EXT_framebuffer_sRGB)
+        #define GLE_WGL_OML_sync_control GLEGetCurrentVariable(gle_WGL_OML_sync_control)
     #endif
 
 
@@ -4186,7 +4280,7 @@
         #define wglSendPbufferToVideoNV  GLEGetCurrentFunction(wglSendPbufferToVideoNV)
         #define wglGetVideoInfoNV        GLEGetCurrentFunction(wglGetVideoInfoNV)
 
-        #define GLE_WGL_NV_video_output GLEGetCurrentVariable(gl_WGL_NV_video_output)
+        #define GLE_WGL_NV_video_output GLEGetCurrentVariable(gle_WGL_NV_video_output)
     #endif
 
 
@@ -4207,7 +4301,7 @@
         #define wglQueryFrameCountNV      GLEGetCurrentFunction(wglQueryFrameCountNV)
         #define wglResetFrameCountNV      GLEGetCurrentFunction(wglResetFrameCountNV)
 
-        #define GLE_WGL_NV_swap_group GLEGetCurrentVariable(gl_WGL_NV_swap_group)
+        #define GLE_WGL_NV_swap_group GLEGetCurrentVariable(gle_WGL_NV_swap_group)
     #endif
 
 
@@ -4238,7 +4332,7 @@
         #define wglQueryVideoCaptureDeviceNV       GLEGetCurrentFunction(wglQueryVideoCaptureDeviceNV)
         #define wglReleaseVideoCaptureDeviceNV     GLEGetCurrentFunction(wglReleaseVideoCaptureDeviceNV)
 
-        #define GLE_WGL_NV_video_capture GLEGetCurrentVariable(gl_WGL_NV_video_capture)
+        #define GLE_WGL_NV_video_capture GLEGetCurrentVariable(gle_WGL_NV_video_capture)
     #endif
 
 
@@ -4249,13 +4343,14 @@
 
         #define wglCopyImageSubDataNV GLEGetCurrentFunction(wglCopyImageSubDataNV)
 
-        #define GLE_WGL_NV_copy_image GLEGetCurrentVariable(gl_WGL_NV_copy_image)
+        #define GLE_WGL_NV_copy_image GLEGetCurrentVariable(gle_WGL_NV_copy_image)
     #endif
 
 
     #ifndef WGL_NV_DX_interop
         #define WGL_NV_DX_interop 1
 
+        // Note that modern AMD drivers support this NVidia extension.
         #define WGL_ACCESS_READ_ONLY_NV     0x0000
         #define WGL_ACCESS_READ_WRITE_NV    0x0001
         #define WGL_ACCESS_WRITE_DISCARD_NV 0x0002
@@ -4278,10 +4373,20 @@
         #define wglDXUnlockObjectsNV          GLEGetCurrentFunction(wglDXUnlockObjectsNV)
         #define wglDXUnregisterObjectNV       GLEGetCurrentFunction(wglDXUnregisterObjectNV)
 
-        #define GLE_WGL_NV_DX_interop GLEGetCurrentVariable(gl_WGL_NV_DX_interop)
+        #define GLE_WGL_NV_DX_interop GLEGetCurrentVariable(gle_WGL_NV_DX_interop)
     #endif
     
-#endif // GLE_WINDOWS_ENABLED
+
+    #ifndef WGL_NV_DX_interop2
+        #define WGL_NV_DX_interop2 1
+
+        // This is an update to WGL_NV_DX_interop to support DX10/DX11.
+        // https://www.opengl.org/registry/specs/NV/DX_interop2.txt
+        #define GLE_WGL_NV_DX_interop2 GLEGetCurrentVariable(gle_WGL_NV_DX_interop2)
+
+        #endif
+
+#endif // GLE_WGL_ENABLED
 
 
 
@@ -4289,7 +4394,7 @@
    Apple-specific (CGL) functionality
 ************************************************************************************/
 
-#if defined(GLE_APPLE_ENABLED)
+#if defined(GLE_CGL_ENABLED)
     // We don't currently disable Apple's OpenGL/OpenGL.h and replicate its declarations here.
     // We might want to do that if we intended to support hooking its functions here like we do for wgl functions.
     #include <OpenGL/OpenGL.h>
@@ -4301,7 +4406,7 @@
    Unix-specific (GLX) functionality
 ************************************************************************************/
 
-#if defined(GLE_UNIX_ENABLED)
+#if defined(GLE_GLX_ENABLED)
     #ifdef __glxext_h_
         #error glxext.h was included before this header. This header needs to be inlcuded instead of or at least before glxext.h
     #endif
@@ -4539,6 +4644,50 @@
         // This was glXGetProcAddressARB in GLX versions prior to v1.4.
         // This function pointer is assumed to always be present.
         extern void (* glXGetProcAddress(const GLubyte *procName)) ();
+
+        // For backward compatibility
+        extern void (* glXGetProcAddressARB(const GLubyte *procName)) ();
+    #endif
+
+
+
+	#ifndef GLX_ARB_create_context
+        #define GLX_ARB_create_context 1
+
+        #define GLX_CONTEXT_DEBUG_BIT_ARB              0x0001
+        #define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x0002
+        #define GLX_CONTEXT_MAJOR_VERSION_ARB          0x2091
+        #define GLX_CONTEXT_MINOR_VERSION_ARB          0x2092
+        #define GLX_CONTEXT_FLAGS_ARB                  0x2094
+
+        typedef GLXContext (* PFNGLXCREATECONTEXTATTRIBSARBPROC) (Display* dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list);
+
+        #define glXCreateContextAttribsARB GLEGetCurrentFunction(glXCreateContextAttribsARB)
+
+        #define GLE_GLX_ARB_create_context GLEGetCurrentVariable(gle_GLX_ARB_create_context)
+    #endif
+
+
+    #ifndef GLX_ARB_create_context_profile
+        #define GLX_ARB_create_context_profile 1
+
+        #define GLX_CONTEXT_CORE_PROFILE_BIT_ARB 		  0x00000001
+        #define GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB 0x00000002
+        #define GLX_CONTEXT_PROFILE_MASK_ARB 		0x9126
+
+        #define GLE_GLX_ARB_create_context_profile GLEGetCurrentVariable(gle_GLX_ARB_create_context_profile)
+    #endif
+
+
+    #ifndef GLX_ARB_create_context_robustness
+        #define GLX_ARB_create_context_robustness 1
+
+        #define GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB 		0x00000004
+        #define GLX_LOSE_CONTEXT_ON_RESET_ARB               0x8252
+        #define GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
+        #define GLX_NO_RESET_NOTIFICATION_ARB       		0x8261
+
+        #define GLE_GLX_ARB_create_context_robustness GLEGetCurrentVariable(gle_GLX_ARB_create_context_robustness)
     #endif
 
 
@@ -4553,7 +4702,7 @@
 
         #define glXSwapIntervalEXT GLEGetCurrentFunction(glXSwapIntervalEXT)
 
-        #define GLE_GLX_EXT_swap_control GLEGetCurrentVariable(gl_GLX_EXT_swap_control)
+        #define GLE_GLX_EXT_swap_control GLEGetCurrentVariable(gle_GLX_EXT_swap_control)
     #endif
     
 
@@ -4572,10 +4721,24 @@
         #define glXWaitForMscOML     GLEGetCurrentFunction(glXWaitForMscOML)
         #define glXWaitForSbcOML     GLEGetCurrentFunction(glXWaitForSbcOML)
 
-        #define GLE_GLX_OML_sync_control GLEGetCurrentVariable(gl_GLX_OML_sync_control)
+        #define GLE_GLX_OML_sync_control GLEGetCurrentVariable(gle_GLX_OML_sync_control)
+    #endif
+    
+    
+    #ifndef GLX_MESA_swap_control
+        #define GLX_MESA_swap_control 1
+
+        // GLX_MESA_swap_control has the same functionality as GLX_EXT_swap_control but with a different interface, so we have an independent entry for it here.
+        typedef int (* PFNGLXGETSWAPINTERVALMESAPROC) (void);
+        typedef int (* PFNGLXSWAPINTERVALMESAPROC) (unsigned int interval);
+
+        #define glXGetSwapIntervalMESA GLEGetCurrentFunction(glXGetSwapIntervalMESA)
+        #define glXSwapIntervalMESA    GLEGetCurrentFunction(glXSwapIntervalMESA)
+
+        #define GLE_MESA_swap_control GLEGetCurrentVariable(gle_MESA_swap_control)
     #endif
 
-#endif // GLE_UNIX_ENABLED
+#endif // GLE_GLX_ENABLED
 
 
 // Undo some defines, because the user may include <Windows.h> after including this header.
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Displays/OVR_Win32_Dxgi_Display.h	2014-09-02 21:33:48.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Displays/OVR_Win32_Dxgi_Display.h	2014-12-03 13:25:20.000000000 -0800
@@ -18,6 +18,7 @@
 #ifndef OVR_dxgi_ovr_filter_h
 #define OVR_dxgi_ovr_filter_h
 
+#include <Windows.h>
 #include <InitGuid.h>
 
 #define USERMODE_TEST_ROTATION 1
@@ -146,6 +147,9 @@
 // 10 = DirectX 1X
 typedef int (WINAPI* ActiveAPIVersion)( PVOID );
 
+// Get the version of the runtime filter.
+typedef ULONG (WINAPI* GetRTFilterVersion)();
+
 #pragma warning(push)
 #pragma warning(disable: 4201)
 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Displays/OVR_Win32_ShimVersion.h	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Displays/OVR_Win32_ShimVersion.h	2014-12-03 13:25:20.000000000 -0800
@@ -0,0 +1,47 @@
+/************************************************************************************
+
+Filename    :   OVR_Win32_ShimVersion.h
+Content     :   Versioning info for our display shim
+Created     :   Nov 4, 2014
+Authors     :   Scott Bassett
+
+Copyright   :   Copyright 2014 Oculus VR, LLC All Rights reserved.
+
+Licensed under the Oculus VR Rift SDK License Version 3.2 (the "License");
+you may not use the Oculus VR Rift SDK except in compliance with the License,
+which is provided at the time of installation or download, or which
+otherwise accompanies this software in either electronic or hard copy form.
+
+You may obtain a copy of the License at
+
+http://www.oculusvr.com/licenses/LICENSE-3.2
+
+Unless required by applicable law or agreed to in writing, the Oculus VR SDK
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+
+*************************************************************************************/
+
+#define STRINGIZE_(x) #x
+#define STRINGIZE(x) STRINGIZE_(x)
+
+#define OVR_MAKE_VERSION(major, minor, patch)   (ULONG)(((major) << 24) | ((minor) << 16) | patch)
+#define OVR_GET_VERSION_MAJOR(x)                (ULONG)(((x) >> 24) & 0x000000FF)
+#define OVR_GET_VERSION_MINOR(x)                (ULONG)(((x) >> 16) & 0x000000FF)
+#define OVR_GET_VERSION_PATCH(x)                (ULONG)((x) & 0x0000FFFF)
+
+#define OVR_RENDER_SHIM_VERSION_MAJOR       1
+#define OVR_RENDER_SHIM_VERSION_MINOR       0
+#define OVR_RENDER_SHIM_VERSION_PATCH       0
+#define OVR_RENDER_SHIM_VERSION             OVR_MAKE_VERSION(OVR_RENDER_SHIM_VERSION_MAJOR, OVR_RENDER_SHIM_VERSION_MINOR, OVR_RENDER_SHIM_VERSION_PATCH)
+#define OVR_RENDER_SHIM_VERSION_STRING      (STRINGIZE(OVR_RENDER_SHIM_VERSION_MAJOR) "." STRINGIZE(OVR_RENDER_SHIM_VERSION_MINOR) "." STRINGIZE(OVR_RENDER_SHIM_VERSION_PATCH))
+
+// IF YOU CHANGE ANY OF THESE NUMBERS YOU MUST UPDATE MULTIPLE FILES.
+// PLEASE LOOK AT CHANGELIST 31947 TO SEE THE FULL LIST.
+#define OVR_RTFILTER_VERSION_MAJOR          1
+#define OVR_RTFILTER_VERSION_MINOR          2
+#define OVR_RTFILTER_VERSION_PATCH          2
+#define OVR_RTFILTER_VERSION                OVR_MAKE_VERSION(OVR_RTFILTER_VERSION_MAJOR, OVR_RTFILTER_VERSION_MINOR, OVR_RTFILTER_VERSION_PATCH)
+#define OVR_RTFILTER_VERSION_STRING         (STRINGIZE(OVR_RTFILTER_VERSION_MAJOR) "." STRINGIZE(OVR_RTFILTER_VERSION_MINOR) "." STRINGIZE(OVR_RTFILTER_VERSION_PATCH))
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Allocator.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Allocator.h	2014-12-03 13:25:20.000000000 -0800
@@ -336,6 +336,18 @@
 };
 
 
+//------------------------------------------------------------------------
+// ***** Mapped memory allocation
+//
+// Equates to VirtualAlloc/VirtualFree on Windows, mmap/munmap on Unix.
+// These are useful for when you need system-supplied memory pages. 
+// These are also useful for when you need to allocate memory in a way 
+// that doesn't affect the application heap.
+
+void* MMapAlloc(size_t size);
+void  MMapFree(void* memory, size_t size);
+
+
 } // OVR
 
 
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Atomic.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Atomic.h	2014-12-03 13:25:20.000000000 -0800
@@ -605,11 +605,15 @@
     inline static C     ExchangeAdd_NoSync(volatile C* p, C val)        { C2T_union u; u.c = val; u.t = Ops::ExchangeAdd_NoSync((PT)p, u.t); return u.c; }
     inline static bool  CompareAndSet_Sync(volatile C* p, C c, C val)   { C2T_union u,cu; u.c = val; cu.c = c; return Ops::CompareAndSet_Sync((PT)p, cu.t, u.t); }
     inline static bool  CompareAndSet_Release(volatile C* p, C c, C val){ C2T_union u,cu; u.c = val; cu.c = c; return Ops::CompareAndSet_Release((PT)p, cu.t, u.t); }
-    inline static bool  CompareAndSet_Relse(volatile C* p, C c, C val){ C2T_union u,cu; u.c = val; cu.c = c; return Ops::CompareAndSet_Acquire((PT)p, cu.t, u.t); }
+    inline static bool  CompareAndSet_Acquire(volatile C* p, C c, C val){ C2T_union u,cu; u.c = val; cu.c = c; return Ops::CompareAndSet_Acquire((PT)p, cu.t, u.t); }
     inline static bool  CompareAndSet_NoSync(volatile C* p, C c, C val) { C2T_union u,cu; u.c = val; cu.c = c; return Ops::CompareAndSet_NoSync((PT)p, cu.t, u.t); }
+
     // Loads and stores with memory fence. These have only the relevant versions.    
     inline static void  Store_Release(volatile C* p, C val)             { C2T_union u; u.c = val; Ops::Store_Release((PT)p, u.t); }    
     inline static C     Load_Acquire(const volatile C* p)               { C2T_union u; u.t = Ops::Load_Acquire((PT)p); return u.c; }
+
+    // Deprecated typo error:
+    inline static bool  CompareAndSet_Relse(volatile C* p, C c, C val){ C2T_union u,cu; u.c = val; cu.c = c; return Ops::CompareAndSet_Acquire((PT)p, cu.t, u.t); }
 };
 
 
@@ -638,7 +642,7 @@
     inline T     Exchange_NoSync(T val)             { return Ops::Exchange_NoSync(&Value, val); }
     inline bool  CompareAndSet_Sync(T c, T val)     { return Ops::CompareAndSet_Sync(&Value, c, val); }
     inline bool  CompareAndSet_Release(T c, T val)  { return Ops::CompareAndSet_Release(&Value, c, val); }
-    inline bool  CompareAndSet_Acquire(T c, T val)  { return Ops::CompareAndSet_Relse(&Value, c, val); }
+    inline bool  CompareAndSet_Acquire(T c, T val)  { return Ops::CompareAndSet_Acquire(&Value, c, val); }
     inline bool  CompareAndSet_NoSync(T c, T val)   { return Ops::CompareAndSet_NoSync(&Value, c, val); }
     // Load & Store.
     inline void  Store_Release(T val)               { Ops::Store_Release(&Value, val); }
@@ -841,7 +845,7 @@
 
     CRITICAL_SECTION cs;
 public:   
-    Lock(unsigned spinCount = 0);      
+    Lock(unsigned spinCount = 10000);   // Mutexes with non-zero spin counts usually result in better performance.
     ~Lock();
     // Locking functions.
     inline void DoLock()    { ::EnterCriticalSection(&cs); }
@@ -854,9 +858,9 @@
     static pthread_mutexattr_t RecursiveAttr;
     static bool                RecursiveAttrInit;
 
-    Lock (unsigned dummy = 0)
+    Lock (unsigned spinCount = 0) // To do: Support spin count, probably via a custom lock implementation.
     {
-        OVR_UNUSED(dummy);
+        OVR_UNUSED(spinCount);
         if (!RecursiveAttrInit)
         {
             pthread_mutexattr_init(&RecursiveAttr);
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Compiler.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Compiler.h	2014-12-03 13:25:20.000000000 -0800
@@ -488,7 +488,7 @@
 #if !defined(OVR_CPP_NO_NULLPTR)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_nullptr))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))          /* GCC 4.6+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))           /* GCC 4.6+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                /* VS2010+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 403)))  /* EDG 4.3+  */    
         #define OVR_CPP_NO_NULLPTR 1
@@ -505,7 +505,7 @@
 #if !defined(OVR_CPP_NO_RVALUE_REFERENCES)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_rvalue_references)) /* clang    */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                   /* GCC 4.5+ */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                    /* GCC 4.5+ */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                         /* VS2010+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 403)))           /* EDG 4.3+ */    
         #define OVR_CPP_NO_RVALUE_REFERENCES 1
@@ -521,7 +521,7 @@
 #if !defined(OVR_CPP_NO_AUTO)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_auto_type))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))            /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))             /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                  /* VS2010+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 309)))    /* EDG 3.9+  */  
         #define OVR_CPP_NO_AUTO 1
@@ -538,7 +538,7 @@
 #if !defined(OVR_CPP_NO_RANGE_BASED_FOR_LOOP)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_range_for)) /* clang    */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))           /* GCC 4.6+ */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))            /* GCC 4.6+ */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1700))                 /* VS2012+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 405)))   /* EDG 4.5+ */    
         #define OVR_CPP_NO_RANGE_BASED_FOR_LOOP 1
@@ -557,7 +557,7 @@
 #if !defined(OVR_CPP_NO_CONSTEXPR)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_constexpr))  /* clang    */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))            /* GCC 4.6+ */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))             /* GCC 4.6+ */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 406)))    /* EDG 4.6+ */    
         // Not supported by VC++ through at least VS2013.
         #define OVR_CPP_NO_CONSTEXPR 1
@@ -582,7 +582,7 @@
 #if !defined(OVR_CPP_NO_LAMBDA_EXPRESSIONS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_lambdas))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))          /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))           /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                /* VS2010+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))  /* EDG 4.1+  */ 
         // Conversion of lambdas to function pointers is not supported until EDG 4.5.
@@ -599,9 +599,10 @@
 // should use OVR_ALIGNOF instead of directly using C++11 alignof.
 
 #if !defined(OVR_CPP_NO_ALIGNOF)
-    #if (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
+    #if !defined(OVR_CPP11_ENABLED) || \
+        (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 300))  /* Apple clang 3.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 401))                    /* GCC 4.1+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 401))                     /* GCC 4.1+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1900))                          /* VS2014+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 400)))            /* EDG 4.0+         */
         #define OVR_CPP_NO_ALIGNOF 1
@@ -619,7 +620,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 300))  /* clang 3.0+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 408))                    /* GCC 4.8+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 408))                     /* GCC 4.8+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1900))                          /* VS2014+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))            /* EDG 4.8+         */
         #define OVR_CPP_NO_ALIGNAS 1
@@ -637,7 +638,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209)) /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 400)) /* Apple clang 4.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                   /* GCC 4.7+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                    /* GCC 4.7+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1500))                         /* VS2008+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))           /* EDG 4.8+         */     
         #define OVR_CPP_NO_OVERRIDE 1
@@ -655,7 +656,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 400))  /* Apple clang 4.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                    /* GCC 4.7+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                     /* GCC 4.7+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1500))                          /* VS2008+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))            /* EDG 4.8+         */    
         #define OVR_CPP_NO_FINAL 1
@@ -673,7 +674,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))                    /* GCC 4.6+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))                     /* GCC 4.6+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1700))                          /* VS2012+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))            /* EDG 4.1+         */ 
         #define OVR_CPP_NO_EXTERN_TEMPLATE 1
@@ -689,7 +690,7 @@
 #if !defined(OVR_CPP_NO_VARIADIC_TEMPLATES)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_variadic_templates)) /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                    /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                     /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                          /* VS2013+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 403)))            /* EDG 4.3+  */   
         #define OVR_CPP_NO_VARIADIC_TEMPLATES 1
@@ -708,7 +709,7 @@
 #if !defined(OVR_CPP_NO_NOEXCEPT)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_noexcept))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))           /* GCC 4.6+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))            /* GCC 4.6+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1900))                 /* VS2014+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 405)))   /* EDG 4.5+  */
         #define OVR_CPP_NO_NOEXCEPT 1
@@ -728,7 +729,7 @@
 #if !defined(OVR_CPP_NO_DECLTYPE)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_decltype))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 403))           /* GCC 4.3+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 403))            /* GCC 4.3+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                 /* VS2010+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 402)))   /* EDG 4.2+  */       
         // VC++ fails to support decltype for incomplete types until VS2013.
@@ -747,7 +748,7 @@
 #if !defined(OVR_CPP_NO_DEFAULTED_FUNCTIONS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_defaulted_functions))/* clang    */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                    /* GCC 4.4+ */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                     /* GCC 4.4+ */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                          /* VS2013+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))            /* EDG 4.1+ */
         // Up through at least VS2013 it's unsupported for defaulted move constructors and move assignment operators.
@@ -766,7 +767,7 @@
 #if !defined(OVR_CPP_NO_DELETED_FUNCTIONS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_defaulted_functions)) /* clang    */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                     /* GCC 4.4+ */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                      /* GCC 4.4+ */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                           /* VS2013+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))             /* EDG 4.1+ */  
         // Up through at least VS2013 it's unsupported for defaulted move constructors and move assignment operators.
@@ -786,7 +787,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 300)) /* clang 3.0+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401)) /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                   /* GCC 4.5+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                    /* GCC 4.5+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1700))                         /* VS2013+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 406)))           /* EDG 4.6+         */  
         #define OVR_CPP_NO_STANDARD_LAYOUT_TYPES 1
@@ -803,7 +804,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))                    /* GCC 4.6+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))                     /* GCC 4.6+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1700))                          /* VS2012+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 405)))            /* EDG 4.5+         */ 
         #define OVR_CPP_NO_FORWARD_DECLARED_ENUMS 1
@@ -819,7 +820,7 @@
 #if !defined(OVR_CPP_NO_STRONGLY_TYPED_ENUMS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_strong_enums))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))               /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1700))                     /* VS2012+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 400)))       /* EDG 4.0+ */ 
         #define OVR_CPP_NO_STRONGLY_TYPED_ENUMS 1
@@ -836,7 +837,7 @@
 #if !defined(OVR_CPP_NO_TRAILING_RETURN_TYPES)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_trailing_return)) /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                 /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                  /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                       /* VS2010+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))         /* EDG 4.1+ */    
         #define OVR_CPP_NO_TRAILING_RETURN_TYPES 1
@@ -852,7 +853,7 @@
 #if !defined(OVR_CPP_NO_TEMPLATE_ALIASES)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_alias_templates)) /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                 /* GCC 4.7+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                  /* GCC 4.7+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                       /* VS2013+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 402)))         /* EDG 4.2+  */ 
         #define OVR_CPP_NO_TEMPLATE_ALIASES 1
@@ -870,7 +871,7 @@
 #if !defined(OVR_CPP_NO_INITIALIZER_LISTS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_generalized_initializers)) /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                          /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                           /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                                /* VS2013+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 405)))                  /* EDG 4.5+  */
         #define OVR_CPP_NO_INITIALIZER_LISTS 1
@@ -888,7 +889,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 408))                    /* GCC 4.8+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 408))                     /* GCC 4.8+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1500))                          /* VS2008+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 402)))            /* EDG 4.2+         */
         // Supported with VC++ only via __declspec(noreturn) (see OVR_NORETURN).
@@ -907,7 +908,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                    /* GCC 4.7+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                     /* GCC 4.7+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                          /* VS2013+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 406)))            /* EDG 4.6+         */
         #define OVR_CPP_NO_NONSTATIC_MEMBER_INITIALIZERS 1
@@ -925,7 +926,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 400))  /* Apple clang 4.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 403))                    /* GCC 4.3+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 403))                     /* GCC 4.3+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                          /* VS2010+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))            /* EDG 4.1+         */
         #define OVR_CPP_NO_DOUBLE_TEMPLATE_BRACKETS 1
@@ -945,7 +946,7 @@
 #if !defined(OVR_CPP_NO_INHERITING_CONSTRUCTORS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_inheriting_constructors))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 408))                          /* GCC 4.8+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 408))                           /* GCC 4.8+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1900))                                /* VS2014+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))                  /* EDG 4.8+  */
         #define OVR_CPP_NO_INHERITING_CONSTRUCTORS 1
@@ -962,7 +963,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 300))  /* clang 3.0+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                    /* GCC 4.7+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                     /* GCC 4.7+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                          /* VS2013+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 407)))            /* EDG 4.7+         */
         #define OVR_CPP_NO_DELEGATING_CONSTRUCTORS 1
@@ -979,7 +980,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 403))                    /* GCC 4.3+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 403))                     /* GCC 4.3+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                          /* VS2013+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 403)))            /* EDG 4.3+         */
         #define OVR_CPP_NO_FUNCTION_TEMPLATE_DEFAULT_ARGS 1
@@ -996,7 +997,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 406))                    /* GCC 4.6+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 406))                     /* GCC 4.6+         */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 406)))            /* EDG 4.6+         */
         // Not supported by VC++ as of VS2013.
         #define OVR_CPP_NO_UNRESTRICTED_UNIONS 1
@@ -1015,7 +1016,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                    /* GCC 4.5+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                     /* GCC 4.5+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1900))                          /* VS2014+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 405)))            /* EDG 4.5+         */
         #define OVR_CPP_NO_EXTENDED_SIZEOF 1
@@ -1033,7 +1034,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 400))  /* Apple clang 4.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                    /* GCC 4.4+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                     /* GCC 4.4+         */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 405)))            /* EDG 4.5+         */
         // Not supported by VC++ as of VS2013.
         #define OVR_CPP_NO_INLINE_NAMESPACES 1
@@ -1050,7 +1051,7 @@
 #if !defined(OVR_CPP_NO_EXPLICIT_CONVERSION_OPERATORS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_explicit_conversions))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                       /* GCC 4.5+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                        /* GCC 4.5+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                             /* VS2013+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 404)))               /* EDG 4.4+  */
         #define OVR_CPP_NO_EXPLICIT_CONVERSION_OPERATORS 1
@@ -1071,7 +1072,7 @@
 #if !defined(OVR_CPP_NO_LOCAL_CLASS_TEMPLATE_PARAMETERS) 
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_local_type_template_args))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                           /* GCC 4.5+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                            /* GCC 4.5+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                                 /* VS2010+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 402)))                   /* EDG 4.2+  */
         #define OVR_CPP_NO_LOCAL_CLASS_TEMPLATE_PARAMETERS 1
@@ -1089,7 +1090,7 @@
 #if !defined(OVR_CPP_NO_NEW_CHARACTER_TYPES)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_unicode_literals))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                   /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                    /* GCC 4.4+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 407)))           /* EDG 4.7+  */
         // Not supported by VC++ as of VS2013.
         #define OVR_CPP_NO_NEW_CHARACTER_TYPES 1
@@ -1107,7 +1108,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                    /* GCC 4.5+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                     /* GCC 4.5+         */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))            /* EDG 4.8+         */
         // Not supported by VC++ as of VS2013. VC++'s existing \U and \u are non-conforming.
         #define OVR_CPP_NO_UNICODE_CHAR_NAME_LITERALS 1
@@ -1124,7 +1125,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 301))  /* clang 3.1+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 401))  /* Apple clang 4.1+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                    /* GCC 4.7+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                     /* GCC 4.7+         */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))            /* EDG 4.8+         */
         // Not supported by VC++ as of VS2013.
         #define OVR_CPP_NO_USER_DEFINED_LITERALS 1
@@ -1141,7 +1142,7 @@
 #if !defined(OVR_CPP_NO_UNICODE_STRING_LITERALS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_unicode_literals))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                   /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                    /* GCC 4.4+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 407)))           /* EDG 4.7+  */
         // Not supported by VC++ as of VS2013.
         #define OVR_CPP_NO_UNICODE_STRING_LITERALS 1
@@ -1158,7 +1159,7 @@
 #if !defined(OVR_CPP_NO_RAW_STRING_LITERALS)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_raw_string_literals))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 405))                      /* GCC 4.5+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 405))                       /* GCC 4.5+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 407)))              /* EDG 4.7+  */
         // Not supported by VC++ as of VS2013.
         #define OVR_CPP_NO_RAW_STRING_LITERALS 1
@@ -1175,7 +1176,7 @@
 #if !defined(OVR_CPP_NO_UNIFIED_INITIALIZATION_SYNTAX)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_generalized_initializers))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 404))                           /* GCC 4.4+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 404))                            /* GCC 4.4+  */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1800))                                 /* VS2013+   */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 406)))                   /* EDG 4.6+  */
         #define OVR_CPP_NO_UNIFIED_INITIALIZATION_SYNTAX 1
@@ -1192,7 +1193,7 @@
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && !defined(__APPLE__) && (__clang__ >= 209))  /* clang 2.9+       */ && \
          !(defined(__clang__) &&  defined(__APPLE__) && (__clang__ >= 400))  /* Apple clang 4.0+ */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 407))                    /* GCC 4.7+         */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 407))                     /* GCC 4.7+         */ && \
          !(defined(_MSC_VER) && (_MSC_VER >= 1600))                          /* VS2010+          */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 401)))            /* EDG 4.1+         */
         #define OVR_CPP_NO_EXTENDED_FRIEND_DECLARATIONS 1
@@ -1216,7 +1217,7 @@
 #if !defined(OVR_CPP_NO_THREAD_LOCAL)
     #if !defined(OVR_CPP11_ENABLED) || \
         (!(defined(__clang__) && OVR_CC_HAS_FEATURE(cxx_thread_local))  /* clang     */ && \
-         !(defined(__GNUC__) && (OVR_CPP_VERSION >= 408))               /* GCC 4.8+  */ && \
+         !(defined(__GNUC__) && (OVR_CC_VERSION >= 408))                /* GCC 4.8+  */ && \
          !(defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)))       /* EDG 4.8+  */
         #define OVR_CPP_NO_THREAD_LOCAL 1
     #endif
@@ -1261,9 +1262,9 @@
 
 #if !defined(OVR_ALIGNOF)
     #if defined(OVR_CC_GNU) && !defined(OVR_CPP_NO_ALIGNOF)     // If C++11 alignof is supported...
-        #define OVR_ALIGNOF(type) alignof(t)
+        #define OVR_ALIGNOF(type) alignof(type)
     #elif defined(__clang__) && !defined(OVR_CPP_NO_ALIGNOF)
-        #define OVR_ALIGNOF(type) alignof(t)
+        #define OVR_ALIGNOF(type) alignof(type)
     #elif defined(OVR_CC_GNU) || defined(__clang__)
         #define OVR_ALIGNOF(type) ((size_t)__alignof__(type))
     #elif defined(OVR_CC_MSVC) || defined(OVR_CC_INTEL)
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_DebugHelp.h	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_DebugHelp.h	2014-12-03 13:25:20.000000000 -0800
@@ -0,0 +1,461 @@
+/************************************************************************************
+
+Filename    :   OVR_DebugHelp.h
+Content     :   Platform-independent exception handling interface
+Created     :   October 6, 2014
+
+Copyright   :   Copyright 2014 Oculus VR, LLC. All Rights reserved.
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+
+************************************************************************************/
+
+#ifndef OVR_ExceptionHandler_h
+#define OVR_ExceptionHandler_h
+
+
+#include "OVR_Types.h"
+#include "OVR_String.h"
+#include "OVR_Threads.h"
+#include "OVR_Atomic.h"
+#include "OVR_Nullptr.h"
+#include <stdio.h>
+#include <time.h>
+
+#if defined(OVR_OS_WIN32) || defined(OVR_OS_WIN64)
+    #include <Windows.h>
+
+#elif defined(OVR_OS_APPLE)
+    #include <pthread.h>
+    #include <mach/thread_status.h>
+    #include <mach/mach_types.h>
+
+    extern "C" void* MachHandlerThreadFunctionStatic(void*);
+    extern "C" int   catch_mach_exception_raise_state_identity_OVR(mach_port_t, mach_port_t, mach_port_t, exception_type_t, mach_exception_data_type_t*,
+                                       mach_msg_type_number_t, int*, thread_state_t, mach_msg_type_number_t, thread_state_t, mach_msg_type_number_t*);
+#elif defined(OVR_OS_LINUX)
+    #include <pthread.h>
+#endif
+
+
+OVR_DISABLE_MSVC_WARNING(4351) // new behavior: elements of array will be default initialized
+
+
+namespace OVR { 
+
+    // Thread identifiers
+    //typedef void*     ThreadHandle;  // Already defined by OVR Threads. Same as Windows thread handle, Unix pthread_t.
+    //typedef void*     ThreadId;      // Already defined by OVR Threads. Used by Windows as DWORD thread id, by Unix as pthread_t. 
+    typedef uintptr_t   ThreadSysId;   // System thread identifier. Used by Windows the same as ThreadId (DWORD), thread_act_t on Mac/BSD, lwp id on Linux.
+
+    // Thread constants
+    // To do: Move to OVR Threads
+    #define OVR_THREADHANDLE_INVALID ((ThreadHandle*)nullptr)
+    #define OVR_THREADID_INVALID     ((ThreadId*)nullptr)
+    #define OVR_THREADSYSID_INVALID  ((uintptr_t)0)
+
+    OVR::ThreadSysId  ConvertThreadHandleToThreadSysId(OVR::ThreadHandle threadHandle);
+    OVR::ThreadHandle ConvertThreadSysIdToThreadHandle(OVR::ThreadSysId threadSysId);   // The returned handle must be freed with FreeThreadHandle.
+    void              FreeThreadHandle(OVR::ThreadHandle threadHandle);                 // Frees the handle returned by ConvertThreadSysIdToThreadHandle.
+    OVR::ThreadSysId  GetCurrentThreadSysId();
+
+    // CPUContext
+    #if defined(OVR_OS_MS)
+        typedef CONTEXT CPUContext; 
+    #elif defined(OVR_OS_MAC)
+        struct CPUContext
+        {
+            x86_thread_state_t  threadState; // This works for both x86 and x64.
+            x86_float_state_t   floatState;
+            x86_debug_state_t   debugState;
+            x86_avx_state_t     avxState;
+            x86_exception_state exceptionState;
+            
+            CPUContext() { memset(this, 0, sizeof(CPUContext)); }
+        };
+    #elif defined(OVR_OS_LINUX)
+        typedef int CPUContext; // To do.
+    #endif
+
+
+    // Tells if the current process appears to be running under a debugger. Does not attempt to 
+    // detect the case of sleath debuggers (malware-related for example).
+    bool OVRIsDebuggerPresent();
+
+    // Exits the process with the given exit code.
+    #if !defined(OVR_NORETURN)
+        #if defined(OVR_CC_MSVC)
+            #define OVR_NORETURN __declspec(noreturn)
+        #else
+            #define OVR_NORETURN __attribute__((noreturn))
+        #endif
+    #endif
+    OVR_NORETURN void ExitProcess(intptr_t processReturnValue);
+
+    // Returns the instruction pointer of the caller for the position right after the call.
+    OVR_NO_INLINE void GetInstructionPointer(void*& pInstruction);
+
+    // Returns the stack base and limit addresses for the given thread, or for the current thread if the threadHandle is default.
+    // The stack limit is a value less than the stack base on most platforms, as stacks usually grow downward.
+    // Some platforms (e.g. Microsoft) have dynamically resizing stacks, in which case the stack limit reflects the current limit.
+    void GetThreadStackBounds(void*& pStackBase, void*& pStackLimit, ThreadHandle threadHandle = OVR_THREADHANDLE_INVALID);
+
+
+    // Equates to VirtualAlloc/VirtualFree on Windows, mmap/munmap on Unix.
+    // These are useful for when you need system-supplied memory pages. 
+    // These are also useful for when you need to allocate memory in a way 
+    // that doesn't affect the application heap.
+    void* SafeMMapAlloc(size_t size);
+    void  SafeMMapFree(const void* memory, size_t size);
+
+
+    // OVR_MAX_PATH
+    // Max file path length (for most uses).
+    // To do: move this to OVR_File.
+    #if defined(OVR_OS_MS)         // http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx
+        #define OVR_MAX_PATH  260  // Windows can use paths longer than this in some cases (network paths, UNC paths).
+    #else
+        #define OVR_MAX_PATH 1024  // This isn't a strict limit on all Unix-based platforms.
+    #endif
+
+
+    // ModuleHandle
+    #if defined(OVR_OS_MS)
+        typedef void* ModuleHandle;  // from LoadLibrary()
+    #elif defined(OVR_OS_APPLE) || defined(OVR_OS_UNIX)
+        typedef void* ModuleHandle;  // from dlopen()
+    #endif
+
+    #define OVR_MODULEHANDLE_INVALID ((ModuleHandle*)nullptr)
+
+
+
+    // Module info constants
+    static const ModuleHandle kMIHandleInvalid          = OVR_MODULEHANDLE_INVALID;
+    static const uint64_t     kMIAddressInvalid         = 0xffffffffffffffffull;
+    static const uint64_t     kMISizeInvalid            = 0xffffffffffffffffull;
+    static const int32_t      kMILineNumberInvalid      = -1;
+    static const int32_t      kMIFunctionOffsetInvalid  = -1;
+    static const uint64_t     kMIBaseAddressInvalid     = 0xffffffffffffffffull;
+    static const uint64_t     kMIBaseAddressUnspecified = 0xffffffffffffffffull;
+
+    struct ModuleInfo
+    {
+        ModuleHandle handle;
+        uint64_t     baseAddress;           // The actual runtime base address of the module. May be different from the base address specified in the debug symbol file.
+        uint64_t     size;
+        char         filePath[OVR_MAX_PATH];
+        char         name[32];
+        char         type[8];               // Unix-specific. e.g. __TEXT
+        char         permissions[8];        // Unix specific. e.g. "drwxr-xr-x"
+
+        ModuleInfo() : handle(kMIHandleInvalid), baseAddress(kMIBaseAddressInvalid), size(0), filePath(), name(){}
+    };
+
+
+    // Refers to symbol info for an instruction address. 
+    // Info includes function name, source code file/line, and source code itself.
+    struct SymbolInfo
+    {
+        uint64_t          address;
+        uint64_t          size;
+        const ModuleInfo* pModuleInfo;
+        char              filePath[OVR_MAX_PATH];
+        int32_t           fileLineNumber;
+        char              function[128];            // This is a fixed size because we need to use it during application exceptions.
+        int32_t           functionOffset;
+        char              sourceCode[1024];         // This is a string representing the code itself and not a file path to the code.
+
+        SymbolInfo() : address(kMIAddressInvalid), size(kMISizeInvalid), pModuleInfo(nullptr), filePath(), 
+                        fileLineNumber(kMILineNumberInvalid), function(), functionOffset(kMIFunctionOffsetInvalid), sourceCode() {}
+    };
+
+
+    // Implements support for reading thread lists, module lists, backtraces, and backtrace symbols.
+    class SymbolLookup
+    {
+    public:
+        SymbolLookup();
+       ~SymbolLookup();
+
+        void AddSourceCodeDirectory(const char* pDirectory);
+
+        bool Initialize();
+        void Shutdown();
+
+        // Should be disabled when within an exception handler.
+        void EnableMemoryAllocation(bool enabled);
+        
+        // Retrieves the backtrace (call stack) of the given thread. There may be some per-platform restrictions on this.
+        // Returns the number written, which will be <= addressArrayCapacity.
+        // This may not work on some platforms unless stack frames are enabled.
+        // For Microsoft platforms the platformThreadContext is CONTEXT*.
+        // For Apple platforms the platformThreadContext is x86_thread_state_t* or arm_thread_state_t*.
+        // If threadSysIdHelp is non-zero, it may be used by the implementation to help produce a better backtrace.
+        size_t GetBacktrace(void* addressArray[], size_t addressArrayCapacity, size_t skipCount = 0, void* platformThreadContext = nullptr, OVR::ThreadSysId threadSysIdHelp = OVR_THREADSYSID_INVALID);
+
+        // Retrieves the backtrace for the given ThreadHandle.
+        // Returns the number written, which will be <= addressArrayCapacity.
+        size_t GetBacktraceFromThreadHandle(void* addressArray[], size_t addressArrayCapacity, size_t skipCount = 0, OVR::ThreadHandle threadHandle = OVR_THREADHANDLE_INVALID);
+
+        // Retrieves the backtrace for the given ThreadSysId.
+        // Returns the number written, which will be <= addressArrayCapacity.
+        size_t GetBacktraceFromThreadSysId(void* addressArray[], size_t addressArrayCapacity, size_t skipCount = 0, OVR::ThreadSysId threadSysId = OVR_THREADSYSID_INVALID);
+
+        // Gets a list of the modules (e.g. DLLs) present in the current process.
+        // Writes as many ModuleInfos as possible to pModuleInfoArray.
+        // Returns the required count of ModuleInfos, which will be > moduleInfoArrayCapacity if the capacity needs to be larger.
+        size_t GetModuleInfoArray(ModuleInfo* pModuleInfoArray, size_t moduleInfoArrayCapacity);
+
+        // Retrieves a list of the current threads. Unless the process is paused the list is volatile.
+        // Returns the required capacity, which may be larger than threadArrayCapacity.
+        // Either array can be NULL to specify that it's not written to.
+        // For Windows the caller needs to CloseHandle the returned ThreadHandles. This can be done by calling DoneThreadList.
+        size_t GetThreadList(ThreadHandle* threadHandleArray, ThreadSysId* threadSysIdArray, size_t threadArrayCapacity);
+
+        // Frees any references to thread handles or ids returned by GetThreadList;
+        void DoneThreadList(ThreadHandle* threadHandleArray, ThreadSysId* threadSysIdArray, size_t threadArrayCount);
+
+        // Writes a given thread's callstack with symbols to the given output.
+        // It may not be safe to call this from an exception handler, as sOutput allocates memory.
+        bool ReportThreadCallstack(OVR::String& sOutput, size_t skipCount = 0, ThreadSysId threadSysId = OVR_THREADSYSID_INVALID);
+
+        // Writes all thread's callstacks with symbols to the given output.
+        // It may not be safe to call this from an exception handler, as sOutput allocates memory.
+        bool ReportThreadCallstacks(OVR::String& sOutput, size_t skipCount = 0);
+
+        // Retrieves symbol info for the given address. 
+        bool LookupSymbol(uint64_t address, SymbolInfo& symbolInfo);
+        bool LookupSymbols(uint64_t* addressArray, SymbolInfo* pSymbolInfoArray, size_t arraySize);
+
+        const ModuleInfo* GetModuleInfoForAddress(uint64_t address);  // The returned ModuleInfo points to an internal structure.
+
+    protected:
+        bool RefreshModuleList();
+
+    protected:
+        bool       initialized;
+        bool       allowMemoryAllocation;   // True by default. If true then we allow allocating memory (and as a result provide less information). This is useful for when in an exception handler.
+        bool       moduleListUpdated;
+        ModuleInfo moduleInfoArray[96];     // Cached list of modules we use. This is a fixed size because we need to use it during application exceptions.
+        size_t     moduleInfoArraySize;
+    };
+
+
+
+    // ExceptionInfo
+    // We need to be careful to avoid data types that can allocate memory while we are 
+    // handling an exception, as the memory system may be corrupted at that point in time.
+    struct ExceptionInfo
+    {
+        tm            time;                             // GM time.
+        time_t        timeVal;                          // GM time_t (seconds since 1970).
+        void*         backtrace[64];
+        size_t        backtraceCount;
+        ThreadHandle  threadHandle;                     // 
+        ThreadSysId   threadSysId;                      // 
+        char          threadName[32];                   // Cannot be an allocating String object.
+        void*         pExceptionInstructionAddress;
+        void*         pExceptionMemoryAddress;
+        CPUContext    cpuContext;
+        char          exceptionDescription[1024];       // Cannot be an allocating String object.
+        SymbolInfo    symbolInfo;                       // SymbolInfo for the exception location.
+
+        #if defined(OVR_OS_MS)
+            EXCEPTION_RECORD exceptionRecord;           // This is a Windows SDK struct.
+        #elif defined(OVR_OS_APPLE)
+            uint64_t         exceptionType;             // e.g. EXC_BAD_INSTRUCTION, EXC_BAD_ACCESS, etc.
+            uint32_t         cpuExceptionId;            // The x86/x64 CPU trap id.
+            uint32_t         cpuExceptionIdError;       // The x86/x64 CPU trap id extra info.
+            int64_t          machExceptionDetail[4];    // Kernel exception code info.
+            int              machExceptionDetailCount;  // Count of valid entries.
+        #endif
+
+        ExceptionInfo();
+    };
+
+
+    // Implments support for asynchronous exception handling and basic exception report generation.
+    // If you are implementing exception handling for a commercial application and want auto-uploading
+    // functionality you may want to consider using something like Google Breakpad. This exception handler
+    // is for in-application debug/diagnostic services, though it can write a report that has similar
+    // information to Breakpad or OS-provided reports such as Apple .crash files.
+    //
+    // Example usage:
+    //     ExceptionHandler exceptionHandler;
+    //
+    //     int main(int, char**)
+    //     {
+    //          exceptionHandler.Enable(true);
+    //          exceptionHandler.SetExceptionListener(pSomeListener, 0);  // Optional listener hook.
+    //     }
+    // 
+    class ExceptionHandler
+    {
+    public:
+        ExceptionHandler();
+       ~ExceptionHandler();
+
+        bool Enable(bool enable);
+        
+        // Some report info can be considered private information of the user, such as the current process list,
+        // computer name, IP address or other identifying info, etc. We should not report this information for
+        // external users unless they agree to this.
+        void EnableReportPrivacy(bool enable);
+
+        struct ExceptionListener
+        {
+            virtual ~ExceptionListener(){}
+            virtual int HandleException(uintptr_t userValue, ExceptionHandler* pExceptionHandler, ExceptionInfo* pExceptionInfo, const char* reportFilePath) = 0;
+        };
+
+        void SetExceptionListener(ExceptionListener* pExceptionListener, uintptr_t userValue);
+
+        // What we do after handling the exception.
+        enum ExceptionResponse
+        {
+            kERContinue,    // Continue execution. Will result in the exception being re-generated unless the application has fixed the cause. Similar to Windows EXCEPTION_CONTINUE_EXECUTION.
+            kERHandle,      // Causes the OS to handle the exception as it normally would. Similar to Windows EXCEPTION_EXECUTE_HANDLER.
+            kERTerminate,   // Exit the application.
+            kERThrow,       // Re-throw the exception. Other handlers may catch it. Similar to Windows EXCEPTION_CONTINUE_SEARCH.
+            kERDefault      // Usually set to kERTerminate.
+        };
+
+        void SetExceptionResponse(ExceptionResponse er)
+            { exceptionResponse = er; }
+
+        // Allws you to add an arbitrary description of the current application, which will be added to exception reports.
+        void SetAppDescription(const char* appDescription);
+
+        // If the report path has a "%s" in its name, then assume the path is a sprintf format and write it 
+        // with the %s specified as a date/time string.
+        // The report path can be "default" to signify that you want to use the default user location.
+        // Example usage:
+        //     handler.SetExceptionPaths("/Users/Current/Exceptions/Exception %s.txt");
+        void SetExceptionPaths(const char* exceptionReportPath, const char* exceptionMinidumpPath = nullptr);
+
+        // Allows you to specify base directories for code paths, which can be used to associate exception addresses to lines 
+        // of code as opposed to just file names and line numbers, or function names plus binary offsets.
+        void SetCodeBaseDirectoryPaths(const char* codeBaseDirectoryPathArray[], size_t codeBaseDirectoryPathCount);
+
+		// Given an exception report at a given file path, returns a string suitable for displaying in a message
+		// box or similar user interface during the handling of an exception. The returned string must be passed
+		// to FreeMessageBoxText when complete.
+		static const char* GetExceptionUIText(const char* exceptionReportPath);
+		static void FreeExceptionUIText(const char* messageBoxText);
+
+    protected:
+        void WriteExceptionDescription();
+        void WriteReport();
+        void WriteReportLine(const char* pLine);
+        void WriteReportLineF(const char* format, ...);
+        void WriteThreadCallstack(ThreadHandle threadHandle, ThreadSysId threadSysId, const char* additionalInfo);
+        void WriteMiniDump();
+
+        // Runtime constants
+        bool               enabled;
+        bool               reportPrivacyEnabled;        // Defaults to true.
+        ExceptionResponse  exceptionResponse;           // Defaults to kERHandle
+        ExceptionListener* exceptionListener;
+        uintptr_t          exceptionListenerUserValue;
+        String             appDescription;
+        String             codeBasePathArray[6];        // 6 is arbitrary.
+        char               reportFilePath[OVR_MAX_PATH];// May be an encoded path, in that it has "%s" in it or is named "default". See reporFiletPathActual for the runtime actual report path.
+        int                miniDumpFlags;
+        char               miniDumpFilePath[OVR_MAX_PATH];
+        FILE*              file;                        // Can/should we use OVR Files for this?
+        char               scratchBuffer[4096];
+        SymbolLookup       symbolLookup;
+
+        // Runtime variables
+        bool                     exceptionOccurred;
+        OVR::AtomicInt<uint32_t> handlingBusy;
+        char                     reportFilePathActual[OVR_MAX_PATH];
+        char                     minidumpFilePathActual[OVR_MAX_PATH];
+        int                      terminateReturnValue;
+        ExceptionInfo            exceptionInfo;
+
+        #if defined(OVR_OS_MS)
+            void*                        vectoredHandle;
+            LPTOP_LEVEL_EXCEPTION_FILTER previousFilter;
+            LPEXCEPTION_POINTERS         pExceptionPointers;
+
+            friend LONG WINAPI Win32ExceptionFilter(LPEXCEPTION_POINTERS pExceptionPointers);
+            LONG ExceptionFilter(LPEXCEPTION_POINTERS pExceptionPointers);
+
+        #elif defined(OVR_OS_APPLE)
+            struct SavedExceptionPorts
+            {
+                SavedExceptionPorts() : count(0) { memset(this, 0, sizeof(SavedExceptionPorts)); }
+
+                mach_msg_type_number_t count;
+                exception_mask_t       masks[6];
+                exception_handler_t    ports[6];
+                exception_behavior_t   behaviors[6];
+                thread_state_flavor_t  flavors[6];
+            };
+
+            friend void* ::MachHandlerThreadFunctionStatic(void*);
+            friend int ::catch_mach_exception_raise_state_identity_OVR(mach_port_t, mach_port_t, mach_port_t, exception_type_t,
+                                        mach_exception_data_type_t*, mach_msg_type_number_t, int*, thread_state_t,
+                                        mach_msg_type_number_t, thread_state_t, mach_msg_type_number_t*);
+        
+            bool          InitMachExceptionHandler();
+            void          ShutdownMachExceptionHandler();
+            void*         MachHandlerThreadFunction();
+            kern_return_t HandleMachException(mach_port_t port, mach_port_t thread, mach_port_t task, exception_type_t exceptionType,
+                                              mach_exception_data_type_t* pExceptionDetail, mach_msg_type_number_t exceptionDetailCount, 
+                                              int* pFlavor, thread_state_t pOldState, mach_msg_type_number_t oldStateCount, thread_state_t pNewState,
+                                              mach_msg_type_number_t* pNewStateCount);
+            kern_return_t ForwardMachException(mach_port_t thread, mach_port_t task, exception_type_t exceptionType,
+                                               mach_exception_data_t pExceptionDetail, mach_msg_type_number_t exceptionDetailCount);
+
+            bool                machHandlerInitialized;
+            mach_port_t         machExceptionPort;
+            SavedExceptionPorts machExceptionPortsSaved;
+            volatile bool       machThreadShouldContinue;
+            volatile bool       machThreadExecuting;
+            pthread_t           machThread;
+
+        #elif defined(OVR_OS_LINUX)
+            // To do.
+        #endif
+    };
+
+
+    // Identifies basic exception types for the CreateException function.
+    enum CreateExceptionType
+    {
+        kCETAccessViolation,      // Read or write to inaccessable memory.
+        kCETAlignment,            // Misaligned read or write.
+        kCETDivideByZero,         // Integer divide by zero.
+        kCETFPU,                  // Floating point / VPU exception.
+        kCETIllegalInstruction,   // Illegal opcode.
+        kCETStackCorruption,      // Stack frame was corrupted.
+        kCETStackOverflow,        // Stack ran out of space, often due to infinite recursion.
+        kCETTrap                  // System/OS trap (system call).
+    };
+
+
+    // Creates an exception of the given type, primarily for testing.
+    void CreateException(CreateExceptionType exceptionType);
+
+
+
+} // namespace OVR
+
+
+OVR_RESTORE_MSVC_WARNING()
+
+
+#endif // Header include guard
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Delegates.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Delegates.h	2014-12-03 13:25:20.000000000 -0800
@@ -87,7 +87,7 @@
 	// Stubs
 
 	template <ret_type (*F)()>
-	static OVR_FORCE_INLINE ret_type FreeStub(void *object)
+	static OVR_FORCE_INLINE ret_type FreeStub(void * /*object*/)
 	{
 		return (F)();
 	}
@@ -203,7 +203,7 @@
 	// Stubs
 
 	template <ret_type (*F)(arg1_type)>
-	static OVR_FORCE_INLINE ret_type FreeStub(void *object, arg1_type a1)
+	static OVR_FORCE_INLINE ret_type FreeStub(void * /*object*/, arg1_type a1)
 	{
 		return (F)(a1);
 	}
@@ -319,7 +319,7 @@
 	// Stubs
 
 	template <ret_type (*F)(arg1_type, arg2_type)>
-	static OVR_FORCE_INLINE ret_type FreeStub(void *object, arg1_type a1, arg2_type a2)
+	static OVR_FORCE_INLINE ret_type FreeStub(void * /*object*/, arg1_type a1, arg2_type a2)
 	{
 		return (F)(a1, a2);
 	}
@@ -435,7 +435,7 @@
 	// Stubs
 
 	template <ret_type (*F)(arg1_type, arg2_type, arg3_type)>
-	static OVR_FORCE_INLINE ret_type FreeStub(void *object, arg1_type a1, arg2_type a2, arg3_type a3)
+	static OVR_FORCE_INLINE ret_type FreeStub(void * /*object*/, arg1_type a1, arg2_type a2, arg3_type a3)
 	{
 		return (F)(a1, a2, a3);
 	}
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_List.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_List.h	2014-12-03 13:25:20.000000000 -0800
@@ -55,6 +55,12 @@
         void* pVoidNext;
     };
 
+    ListNode()
+    {
+        pPrev = NULL;
+        pNext = NULL;
+    }
+
     void    RemoveNode()
     {
         pPrev->pNext = pNext;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_mach_exc_OSX.h	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_mach_exc_OSX.h	2014-12-03 13:25:20.000000000 -0800
@@ -0,0 +1,277 @@
+#ifndef	_mach_exc_user_
+#define	_mach_exc_user_
+
+/* Module mach_exc */
+
+#include <string.h>
+#include <mach/ndr.h>
+#include <mach/boolean.h>
+#include <mach/kern_return.h>
+#include <mach/notify.h>
+#include <mach/mach_types.h>
+#include <mach/message.h>
+#include <mach/mig_errors.h>
+#include <mach/port.h>
+
+#ifdef AUTOTEST
+#ifndef FUNCTION_PTR_T
+#define FUNCTION_PTR_T
+typedef void (*function_ptr_t)(mach_port_t, char *, mach_msg_type_number_t);
+typedef struct {
+        char            *name;
+        function_ptr_t  function;
+} function_table_entry;
+typedef function_table_entry   *function_table_t;
+#endif /* FUNCTION_PTR_T */
+#endif /* AUTOTEST */
+
+#ifndef	mach_exc_MSG_COUNT
+#define	mach_exc_MSG_COUNT	3
+#endif	/* mach_exc_MSG_COUNT */
+
+#include <mach/std_types.h>
+#include <mach/mig.h>
+#include <mach/mig.h>
+#include <mach/mach_types.h>
+
+#ifdef __BeforeMigUserHeader
+__BeforeMigUserHeader
+#endif /* __BeforeMigUserHeader */
+
+#include <sys/cdefs.h>
+__BEGIN_DECLS
+
+#if defined(__cplusplus)
+    extern "C" {
+#endif
+
+/* Routine mach_exception_raise_OVR */
+#ifdef	mig_external
+mig_external
+#else
+extern
+#endif	/* mig_external */
+kern_return_t mach_exception_raise_OVR
+(
+	mach_port_t exception_port,
+	mach_port_t thread,
+	mach_port_t task,
+	exception_type_t exception,
+	mach_exception_data_t code,
+	mach_msg_type_number_t codeCnt
+);
+
+/* Routine mach_exception_raise_state_OVR */
+#ifdef	mig_external
+mig_external
+#else
+extern
+#endif	/* mig_external */
+kern_return_t mach_exception_raise_state_OVR
+(
+	mach_port_t exception_port,
+	exception_type_t exception,
+	const mach_exception_data_t code,
+	mach_msg_type_number_t codeCnt,
+	int *flavor,
+	const thread_state_t old_state,
+	mach_msg_type_number_t old_stateCnt,
+	thread_state_t new_state,
+	mach_msg_type_number_t *new_stateCnt
+);
+
+/* Routine mach_exception_raise_state_identity_OVR */
+#ifdef	mig_external
+mig_external
+#else
+extern
+#endif	/* mig_external */
+kern_return_t mach_exception_raise_state_identity_OVR
+(
+	mach_port_t exception_port,
+	mach_port_t thread,
+	mach_port_t task,
+	exception_type_t exception,
+	mach_exception_data_t code,
+	mach_msg_type_number_t codeCnt,
+	int *flavor,
+	thread_state_t old_state,
+	mach_msg_type_number_t old_stateCnt,
+	thread_state_t new_state,
+	mach_msg_type_number_t *new_stateCnt
+);
+
+__END_DECLS
+
+/********************** Caution **************************/
+/* The following data types should be used to calculate  */
+/* maximum message sizes only. The actual message may be */
+/* smaller, and the position of the arguments within the */
+/* message layout may vary from what is presented here.  */
+/* For example, if any of the arguments are variable-    */
+/* sized, and less than the maximum is sent, the data    */
+/* will be packed tight in the actual message to reduce  */
+/* the presence of holes.                                */
+/********************** Caution **************************/
+
+/* typedefs for all requests */
+
+#ifndef __Request__mach_exc_subsystem__defined
+#define __Request__mach_exc_subsystem__defined
+
+#ifdef  __MigPackStructs
+#pragma pack(4)
+#endif
+	typedef struct {
+		mach_msg_header_t Head;
+		/* start of the kernel processed data */
+		mach_msg_body_t msgh_body;
+		mach_msg_port_descriptor_t thread;
+		mach_msg_port_descriptor_t task;
+		/* end of the kernel processed data */
+		NDR_record_t NDR;
+		exception_type_t exception;
+		mach_msg_type_number_t codeCnt;
+		int64_t code[2];
+	} __Request__mach_exception_raise_t;
+#ifdef  __MigPackStructs
+#pragma pack()
+#endif
+
+#ifdef  __MigPackStructs
+#pragma pack(4)
+#endif
+	typedef struct {
+		mach_msg_header_t Head;
+		NDR_record_t NDR;
+		exception_type_t exception;
+		mach_msg_type_number_t codeCnt;
+		int64_t code[2];
+		int flavor;
+		mach_msg_type_number_t old_stateCnt;
+		natural_t old_state[144];
+	} __Request__mach_exception_raise_state_t;
+#ifdef  __MigPackStructs
+#pragma pack()
+#endif
+
+#ifdef  __MigPackStructs
+#pragma pack(4)
+#endif
+	typedef struct {
+		mach_msg_header_t Head;
+		/* start of the kernel processed data */
+		mach_msg_body_t msgh_body;
+		mach_msg_port_descriptor_t thread;
+		mach_msg_port_descriptor_t task;
+		/* end of the kernel processed data */
+		NDR_record_t NDR;
+		exception_type_t exception;
+		mach_msg_type_number_t codeCnt;
+		int64_t code[2];
+		int flavor;
+		mach_msg_type_number_t old_stateCnt;
+		natural_t old_state[144];
+	} __Request__mach_exception_raise_state_identity_t;
+#ifdef  __MigPackStructs
+#pragma pack()
+#endif
+#endif /* !__Request__mach_exc_subsystem__defined */
+
+/* union of all requests */
+
+#ifndef __RequestUnion__mach_exc_subsystem__defined
+#define __RequestUnion__mach_exc_subsystem__defined
+union __RequestUnion__mach_exc_subsystem {
+	__Request__mach_exception_raise_t Request_mach_exception_raise;
+	__Request__mach_exception_raise_state_t Request_mach_exception_raise_state;
+	__Request__mach_exception_raise_state_identity_t Request_mach_exception_raise_state_identity;
+};
+#endif /* !__RequestUnion__mach_exc_subsystem__defined */
+/* typedefs for all replies */
+
+#ifndef __Reply__mach_exc_subsystem__defined
+#define __Reply__mach_exc_subsystem__defined
+
+#ifdef  __MigPackStructs
+#pragma pack(4)
+#endif
+	typedef struct {
+		mach_msg_header_t Head;
+		NDR_record_t NDR;
+		kern_return_t RetCode;
+	} __Reply__mach_exception_raise_t;
+#ifdef  __MigPackStructs
+#pragma pack()
+#endif
+
+#ifdef  __MigPackStructs
+#pragma pack(4)
+#endif
+	typedef struct {
+		mach_msg_header_t Head;
+		NDR_record_t NDR;
+		kern_return_t RetCode;
+		int flavor;
+		mach_msg_type_number_t new_stateCnt;
+		natural_t new_state[144];
+	} __Reply__mach_exception_raise_state_t;
+#ifdef  __MigPackStructs
+#pragma pack()
+#endif
+
+#ifdef  __MigPackStructs
+#pragma pack(4)
+#endif
+	typedef struct {
+		mach_msg_header_t Head;
+		NDR_record_t NDR;
+		kern_return_t RetCode;
+		int flavor;
+		mach_msg_type_number_t new_stateCnt;
+		natural_t new_state[144];
+	} __Reply__mach_exception_raise_state_identity_t;
+#ifdef  __MigPackStructs
+#pragma pack()
+#endif
+#endif /* !__Reply__mach_exc_subsystem__defined */
+
+/* union of all replies */
+
+#ifndef __ReplyUnion__mach_exc_subsystem__defined
+#define __ReplyUnion__mach_exc_subsystem__defined
+union __ReplyUnion__mach_exc_subsystem {
+	__Reply__mach_exception_raise_t Reply_mach_exception_raise;
+	__Reply__mach_exception_raise_state_t Reply_mach_exception_raise_state;
+	__Reply__mach_exception_raise_state_identity_t Reply_mach_exception_raise_state_identity;
+};
+#endif /* !__RequestUnion__mach_exc_subsystem__defined */
+
+#ifndef subsystem_to_name_map_mach_exc
+#define subsystem_to_name_map_mach_exc \
+    { "mach_exception_raise_OVR", 2405 },\
+    { "mach_exception_raise_state_OVR", 2406 },\
+    { "mach_exception_raise_state_identity_OVR", 2407 }
+#endif
+
+#ifdef __AfterMigUserHeader
+__AfterMigUserHeader
+#endif /* __AfterMigUserHeader */
+
+
+#ifdef	mig_external
+mig_external
+#else
+extern
+#endif	/* mig_external */
+boolean_t mach_exc_server_OVR(
+		mach_msg_header_t *InHeadP,
+		mach_msg_header_t *OutHeadP);
+
+
+#if defined(__cplusplus)
+    } // extern"C"
+#endif
+
+
+#endif	 /* _mach_exc_user_ */
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Nullptr.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Nullptr.h	2014-12-03 13:25:20.000000000 -0800
@@ -49,7 +49,7 @@
         #define OVR_HAVE_std_nullptr_t 1
     #elif defined(__clang__)
         #define OVR_HAVE_std_nullptr_t 1
-    #elif defined(OVR_CPP_GNUC) && (OVR_CPP_VERSION >= 406) // GCC 4.6+
+    #elif defined(OVR_CPP_GNUC) && (OVR_CC_VERSION >= 406) // GCC 4.6+
         #define OVR_HAVE_std_nullptr_t 1
     #endif
 #endif
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Std.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Std.h	2014-12-03 13:25:20.000000000 -0800
@@ -162,6 +162,42 @@
 #endif
 }
 
+
+// Acts the same as the strlcpy function. 
+// Copies src to dest, 0-terminating even if it involves truncating the write.
+// Returns the required strlen of dest (which is one less than the required size of dest).
+// strlcpy is a safer alternative to strcpy and strncpy and provides size information.
+// However, it still may result in an incomplete copy. 
+//
+// Example usage:
+//     char buffer[256];
+//     if(OVR_strlcpy(buffer, "hello world", sizeof(buffer)) < sizeof(buffer))
+//         { there was enough space }
+//     else
+//         { need a larger buffer }
+//
+size_t OVR_CDECL OVR_strlcpy(char* dest, const char* src, size_t destsize);
+
+// Acts the same as the strlcat function.
+// Appends src to dest, 0-terminating even if it involves an incomplete write.
+// Doesn't 0-terminate in the case that destsize is 0.
+// Returns the required strlen of dest (which is one less than the required size of dest).
+// The terminating 0 char of dest is overwritten by the first 
+// character of src, and a new 0 char is appended to dest. The required capacity 
+// of the destination is (strlen(src) + strlen(dest) + 1).
+// strlcat is a safer alternative to strcat and provides size information.
+// However, it still may result in an incomplete copy. 
+//
+// Example usage:
+//     char buffer[256] = "hello ";
+//     if(OVR_strlcat(buffer, "world", sizeof(buffer)) < sizeof(buffer))
+//         { there was enough space }
+//     else
+//         { need a larger buffer }
+//
+size_t OVR_CDECL OVR_strlcat(char* dest, const char* src, size_t destsize);
+
+
 inline char* OVR_CDECL OVR_strncpy(char* dest, size_t destsize, const char* src, size_t count)
 {
 #if defined(OVR_MSVC_SAFESTRING)
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_System.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_System.h	2014-12-03 13:25:20.000000000 -0800
@@ -153,6 +153,7 @@
     }
 
 	static void OVR_CDECL DirectDisplayInitialize();
+    static bool OVR_CDECL DirectDisplayEnabled();
 
     // Returns 'true' if system was properly initialized.
     static bool OVR_CDECL IsInitialized();
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Threads.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Threads.h	2014-12-03 13:25:20.000000000 -0800
@@ -175,8 +175,13 @@
 //-----------------------------------------------------------------------------------
 // ***** Thread class
 
-// ThreadId uniquely identifies a thread; returned by GetCurrentThreadId() and
-// Thread::GetThreadId.
+// ThreadHandle is a handle to a thread, which on some platforms (e.g. Windows) is 
+// different from ThreadId. On Unix platforms, a ThreadHandle is the same as a 
+// ThreadId and is pthread_t.
+typedef void* ThreadHandle;
+
+// ThreadId uniquely identifies a thread; returned by Windows GetCurrentThreadId(), 
+// Unix pthread_self() and Thread::GetThreadId.
 typedef void* ThreadId;
 
 
@@ -363,7 +368,12 @@
 
 
     // *** Debugging functionality
-    virtual void    SetThreadName( const char* name );
+    virtual void    SetThreadName(const char* name);
+    static void     SetThreadName(const char* name, ThreadId threadId);
+    static void     SetCurrentThreadName(const char* name);
+
+    static void     GetThreadName(char* name, size_t nameCapacity, ThreadId threadId);
+    static void     GetCurrentThreadName(char* name, size_t nameCapacity);
 
 private:
 #if defined(OVR_OS_WIN32)
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Types.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Kernel/OVR_Types.h	2014-12-03 13:25:20.000000000 -0800
@@ -62,6 +62,7 @@
 //    APPLE     - Any OS by Apple (e.g. iOS, OS X)
 //    UNIX      - Linux, BSD, Mac OS X.
 //    MOBILE    - iOS, Android, Microsoft phone
+//    CONSOLE   - Console platforms
 //
 
 #if (defined(__APPLE__) && (defined(__GNUC__) ||\
@@ -89,7 +90,6 @@
 #  define OVR_OS_OTHER
 #endif
 
-
 #if !defined(OVR_OS_MS_MOBILE)
 #   if (defined(_M_ARM) || defined(_M_IX86) || defined(_M_AMD64)) && !defined(OVR_OS_WIN32) && !defined(OVR_OS_CONSOLE)
 #       define OVR_OS_MS_MOBILE
@@ -546,85 +546,123 @@
 
 
 //-----------------------------------------------------------------------------------
-// ***** OVR_DEBUG_BREAK, OVR_ASSERT
+// ***** OVR_DEBUG_BREAK, OVR_DEBUG_CODE, 
+//       OVR_ASSERT, OVR_ASSERT_M, OVR_ASSERT_AND_UNUSED
 //
-// If not in debug build, macros do nothing
-#ifndef OVR_BUILD_DEBUG
-
-// The expresssion is defined only in debug builds. It is defined away in release builds.
-#  define OVR_DEBUG_CODE(c)
-
-// Causes a debugger breakpoint in debug builds. Has no effect in release builds.
-#  define OVR_DEBUG_BREAK  ((void)0)
+// Macros have effect only in debug builds.
+//
+// Example OVR_DEBUG_BREAK usage (note the lack of parentheses):
+//     #define MY_ASSERT(expression) do { if (!(expression)) { OVR_DEBUG_BREAK; } } while(0)
+//
+// Example OVR_DEBUG_CODE usage:
+//     OVR_DEBUG_CODE(printf("debug test\n");)
+//       or
+//     OVR_DEBUG_CODE(printf("debug test\n"));
+//
+// Example OVR_ASSERT usage:
+//     OVR_ASSERT(count < 100);
+//     OVR_ASSERT_M(count < 100, "count is too high");
+//
+#if defined(OVR_BUILD_DEBUG)
+	// Causes a debugger breakpoint in debug builds. Has no effect in release builds.
+	// Microsoft Win32 specific debugging support
+	#if defined(OVR_CC_MSVC)
+		#define OVR_DEBUG_BREAK __debugbreak()
+	#elif defined(OVR_CC_GNU) || defined(OVR_CC_CLANG)
+		#if defined(OVR_CPU_X86) || defined(OVR_CPU_X86_64)
+			#define OVR_DEBUG_BREAK do { OVR_ASM("int $3\n\t"); } while(0)
+		#else
+			#define OVR_DEBUG_BREAK __builtin_trap()
+		#endif
+	#else
+		#define OVR_DEBUG_BREAK do { *((int *) 0) = 1; } while(0)
+	#endif
 
-// In debug builds this tests the given expression; if false then executes OVR_DEBUG_BREAK,
-// if true then no action. Has no effect in release builds.
-#  define OVR_ASSERT(p)    ((void)0)
+	// The expresssion is defined only in debug builds. It is defined away in release builds.
+	#define OVR_DEBUG_CODE(c) c
 
-// Acts the same as OVR_ASSERT in debug builds. Acts the same as OVR_UNUSED in release builds.
-// Example usage: OVR_ASSERT_AND_UNUSED(x < 30, x);
-#define OVR_ASSERT_AND_UNUSED(expression, value) OVR_UNUSED(value)
+	// In debug builds this tests the given expression; if false then executes OVR_DEBUG_BREAK,
+	// if true then no action. Has no effect in release builds.
+	#if defined(__clang_analyzer__) // During static analysis, make it so the analyzer thinks that failed asserts result in program exit. Reduced false positives.
+		#include <stdlib.h>
+		#define OVR_ASSERT_M(p, message) do { if (!(p))  { OVR_DEBUG_BREAK; exit(0); } } while(0)
+		#define OVR_ASSERT(p)            do { if (!(p))  { OVR_DEBUG_BREAK; exit(0); } } while(0)
+	#else
+		// void OVR_ASSERT_M(bool expression, const char message);
+		// Note: The expresion below is expanded into all usage of this assertion macro. 
+		// We should try to minimize the size of the expanded code to the extent possible.
+		#define OVR_ASSERT_M(p, message) do                                                               \
+		{                                                                                                 \
+			if (!(p))                                                                                     \
+			{                                                                                             \
+				intptr_t ovrAssertUserParam;                                                              \
+				OVRAssertionHandler ovrAssertUserHandler = OVR::GetAssertionHandler(&ovrAssertUserParam); \
+																							              \
+				if(ovrAssertUserHandler && !OVRIsDebuggerPresent())                                       \
+				{                                                                                         \
+					ovrAssertUserHandler(ovrAssertUserParam, "Assertion failure", message);               \
+				}                                                                                         \
+				else                                                                                      \
+				{                                                                                         \
+					OVR_DEBUG_BREAK;                                                                      \
+				}                                                                                         \
+			}                                                                                             \
+		} while(0)
+
+		// void OVR_ASSERT(bool expression);
+		#define OVR_ASSERT(p) OVR_ASSERT_M((p), (#p))
+	#endif
+
+	// Acts the same as OVR_ASSERT in debug builds. Acts the same as OVR_UNUSED in release builds.
+	// Example usage: OVR_ASSERT_AND_UNUSED(x < 30, x);
+	#define OVR_ASSERT_AND_UNUSED(expression, value) OVR_ASSERT(expression); OVR_UNUSED(value)
 
 #else 
 
-// Causes a debugger breakpoint in debug builds. Has no effect in release builds.
-// Microsoft Win32 specific debugging support
-#if defined(OVR_OS_MS)
-#  ifdef OVR_CPU_X86
-#    if defined(__cplusplus_cli)
-#      define OVR_DEBUG_BREAK   do { __debugbreak(); } while(0)
-#    elif defined(OVR_CC_GNU)
-#      define OVR_DEBUG_BREAK   do { OVR_ASM("int $3\n\t"); } while(0)
-#    else
-#      define OVR_DEBUG_BREAK   do { OVR_ASM int 3 } while (0)
-#    endif
-#  else
-#    define OVR_DEBUG_BREAK     do { __debugbreak(); } while(0)
-#  endif
-// Unix specific debugging support
-#elif defined(OVR_CPU_X86) || defined(OVR_CPU_X86_64)
-#  define OVR_DEBUG_BREAK       do { OVR_ASM("int $3\n\t"); } while(0)
-#else
-#  define OVR_DEBUG_BREAK       do { *((int *) 0) = 1; } while(0)
-#endif
+	// The expresssion is defined only in debug builds. It is defined away in release builds.
+	#define OVR_DEBUG_CODE(c)
+
+	// Causes a debugger breakpoint in debug builds. Has no effect in release builds.
+	#define OVR_DEBUG_BREAK  ((void)0)
+
+	// In debug builds this tests the given expression; if false then executes OVR_DEBUG_BREAK,
+	// if true then no action. Has no effect in release builds.
+	#define OVR_ASSERT(p)      ((void)0)
+	#define OVR_ASSERT_M(p, m) ((void)0)
+
+	// Acts the same as OVR_ASSERT in debug builds. Acts the same as OVR_UNUSED in release builds.
+	// Example usage: OVR_ASSERT_AND_UNUSED(x < 30, x);
+	#define OVR_ASSERT_AND_UNUSED(expression, value) OVR_UNUSED(value)
 
-// The expresssion is defined only in debug builds. It is defined away in release builds.
-#define OVR_DEBUG_CODE(c) c
+#endif // OVR_BUILD_DEBUG
 
-// In debug builds this tests the given expression; if false then executes OVR_DEBUG_BREAK,
-// if true then no action. Has no effect in release builds.
-#if defined(__clang_analyzer__) // During static analysis, make it so the analyzer thinks that failed asserts result in program exit. Reduced false positives.
-    #include <stdlib.h>
-    #define OVR_ASSERT(p)        do { if (!(p))  { OVR_DEBUG_BREAK; exit(0); } } while(0)
-#else
-    #define OVR_ASSERT(p)        do { if (!(p))  { OVR_DEBUG_BREAK; } } while(0)
-#endif
 
 
+// Assert handler
+// The user of this library can override the default assertion handler and provide their own.
+namespace OVR
+{
+    // The return value meaning is reserved for future definition and currently has no effect.
+    typedef intptr_t (*OVRAssertionHandler)(intptr_t userParameter, const char* title, const char* message);
 
-// Acts the same as OVR_ASSERT in debug builds. Acts the same as OVR_UNUSED in release builds.
-// Example usage: OVR_ASSERT_AND_UNUSED(x < 30, x);
-#define OVR_ASSERT_AND_UNUSED(expression, value) OVR_ASSERT(expression); OVR_UNUSED(value)
+    // Returns the current assertion handler.
+    OVRAssertionHandler GetAssertionHandler(intptr_t* userParameter = NULL);
 
-#endif // OVR_BUILD_DEBUG
+    // Sets the current assertion handler.
+    // The default assertion handler if none is set simply issues a debug break.
+    // Example usage:
+    //     intptr_t CustomAssertionHandler(intptr_t /*userParameter*/, const char* title, const char* message)) { 
+    //         MessageBox(title, message);
+    //         OVR_DEBUG_BREAK;
+    //     }
+    void SetAssertionHandler(OVRAssertionHandler assertionHandler, intptr_t userParameter = 0);
 
+    // Implements the default assertion handler.
+    intptr_t DefaultAssertionHandler(intptr_t userParameter, const char* title, const char* message);
 
-// ------------------------------------------------------------------------
-// ***** OVR_COMPILER_ASSERT
-//
-// Compile-time assert; produces compiler error if condition is false.
-// The expression must be a compile-time constant expression.
-// This macro is deprecated in favor of static_assert, which provides better
-// compiler output and works in a broader range of contexts.
-// 
-// Example usage:
-//     OVR_COMPILER_ASSERT(sizeof(int32_t == 4));
-
-#if OVR_CPP_NO_STATIC_ASSERT
-    #define OVR_COMPILER_ASSERT(x)  { int zero = 0; switch(zero) {case 0: case x:;} }
-#else
-    #define OVR_COMPILER_ASSERT(x)  static_assert((x), #x)
-#endif
+    // Currently defined in OVR_DebugHelp.cpp
+    bool OVRIsDebuggerPresent();
+}
 
 
 // ------------------------------------------------------------------------
@@ -637,7 +675,8 @@
 // Example usage:
 //     static_assert(sizeof(int32_t) == 4, "int32_t expected to be 4 bytes.");
 
-#if defined(OVR_CPP_NO_STATIC_ASSERT)
+#if defined(OVR_CPP_NO_STATIC_ASSERT) // If the compiler doesn't provide it intrinsically...
+    #if !defined(OVR_SA_UNUSED)
     #if defined(OVR_CC_GNU) || defined(OVR_CC_CLANG)
         #define OVR_SA_UNUSED __attribute__((unused))
     #else
@@ -645,6 +684,7 @@
     #endif
     #define OVR_SA_PASTE(a,b) a##b
     #define OVR_SA_HELP(a,b)  OVR_SA_PASTE(a,b)
+    #endif
 
     #if defined(__COUNTER__)
         #define static_assert(expression, msg) typedef char OVR_SA_HELP(compileTimeAssert, __COUNTER__) [((expression) != 0) ? 1 : -1] OVR_SA_UNUSED
@@ -654,6 +694,23 @@
 #endif
 
 
+// ------------------------------------------------------------------------
+// ***** OVR_COMPILER_ASSERT
+//
+// Compile-time assert; produces compiler error if condition is false.
+// The expression must be a compile-time constant expression.
+// This macro is deprecated in favor of static_assert, which provides better
+// compiler output and works in a broader range of contexts.
+// 
+// Example usage:
+//     OVR_COMPILER_ASSERT(sizeof(int32_t == 4));
+
+#if !defined(OVR_COMPILER_ASSERT)
+    #define OVR_COMPILER_ASSERT(expression)        static_assert(expression, #expression)
+    #define OVR_COMPILER_ASSERT_M(expression, msg) static_assert(expression, msg)
+#endif
+
+
 // ***** OVR_PROCESSOR_PAUSE
 //
 // Yields the processor for other hyperthreads, usually for the purpose of implementing spins and spin locks. 
@@ -844,5 +901,9 @@
 #endif // OVR_FIND_NORMAL_ALLOCATIONS
 
 
+#include "OVR_Nullptr.h"
+
+
+
 
 #endif  // OVR_Types_h
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Net/OVR_BitStream.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Net/OVR_BitStream.h	2014-12-03 13:25:20.000000000 -0800
@@ -1581,7 +1581,7 @@
 template <class templateType>
 bool BitStream::ReadBitsFromIntegerRange( templateType &value, const templateType minimum, const templateType maximum, const int requiredBits, bool allowOutsideRange )
 {
-	OVR_ASSERT(maximum>=minimum);
+	OVR_ASSERT_AND_UNUSED(maximum>=minimum, maximum);
 	if (allowOutsideRange)
 	{
 		bool isOutsideRange;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Net/OVR_Session.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Net/OVR_Session.h	2014-12-03 13:25:20.000000000 -0800
@@ -50,7 +50,7 @@
 //-----------------------------------------------------------------------------
 
 static const uint16_t RPCVersion_Major = 1; // MAJOR version when you make incompatible API changes,
-static const uint16_t RPCVersion_Minor = 1; // MINOR version when you add functionality in a backwards-compatible manner, and
+static const uint16_t RPCVersion_Minor = 2; // MINOR version when you add functionality in a backwards-compatible manner, and
 static const uint16_t RPCVersion_Patch = 0; // PATCH version when you make backwards-compatible bug fixes.
 
 // Client starts communication by sending its version number.
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI.h	2014-10-23 05:26:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI.h	2014-12-03 13:25:20.000000000 -0800
@@ -26,11 +26,6 @@
 
 /// @file OVR_CAPI.h
 /// Exposes all general Rift functionality.
-///
-/// @mainpage Overview
-/// Welcome to the Oculus SDK Reference Manual. All SDK functionality is exposed through a simple and portable C API, found in OVR_CAPI.h.
-///
-/// Please see the Oculus Developer Guide for detailed information about using the SDK in your native applications.
 
 #ifndef OVR_CAPI_h
 #define OVR_CAPI_h
@@ -52,6 +47,42 @@
     #endif
 #endif
 
+
+
+//-----------------------------------------------------------------------------------
+// ***** OVR_ALIGNAS definition
+//
+#if !defined(OVR_ALIGNAS)
+    // C++11 alignas
+    #if defined(__GNUC__) && (((__GNUC__ * 100) + __GNUC_MINOR__) >= 408) && (defined(__GXX_EXPERIMENTAL_CXX0X__) || (__cplusplus >= 201103L))
+        #define OVR_ALIGNAS(n) alignas(n)
+    #elif defined(__clang__) && !defined(__APPLE__) && (((__clang_major__ * 100) + __clang_minor__) >= 300) && (__cplusplus >= 201103L)
+        #define OVR_ALIGNAS(n) alignas(n)
+    #elif defined(__clang__) && defined(__APPLE__) && (((__clang_major__ * 100) + __clang_minor__) >= 401) && (__cplusplus >= 201103L)
+        #define OVR_ALIGNAS(n) alignas(n)
+    #elif defined(_MSC_VER) && (_MSC_VER >= 1900)
+        #define OVR_ALIGNAS(n) alignas(n)
+    #elif defined(__EDG_VERSION__) && (__EDG_VERSION__ >= 408)
+        #define OVR_ALIGNAS(n) alignas(n)
+
+    // Pre-C++11 alignas fallbacks
+    #elif defined(__GNUC__) || defined(__clang__)
+        #define OVR_ALIGNAS(n) __attribute__((aligned(n)))
+    #elif defined(_MSC_VER) || defined(__INTEL_COMPILER)
+        #define OVR_ALIGNAS(n) __declspec(align(n))             // For Microsoft the alignment must be a literal integer.
+    #elif defined(__CC_ARM)
+        #define OVR_ALIGNAS(n) __align(n)
+    #else
+        #error Need to define OVR_ALIGNAS
+    #endif
+#endif
+
+#if defined(_MSC_VER)
+    #pragma warning(push)
+    #pragma warning(disable: 4324) // structure was padded due to __declspec(align())
+#endif
+
+
 //#define ENABLE_LATENCY_TESTER
 
 //-----------------------------------------------------------------------------------
@@ -110,12 +141,12 @@
 /// A full pose (rigid body) configuration with first and second derivatives.
 typedef struct ovrPoseStatef_
 {
-    ovrPosef     ThePose;
-    ovrVector3f  AngularVelocity;
-    ovrVector3f  LinearVelocity;
-    ovrVector3f  AngularAcceleration;
-    ovrVector3f  LinearAcceleration;
-    double       TimeInSeconds;         // Absolute time of this state sample.
+    ovrPosef     ThePose;               ///< The body's position and orientation.
+    ovrVector3f  AngularVelocity;       ///< The body's angular velocity in radians per second.
+    ovrVector3f  LinearVelocity;        ///< The body's velocity in meters per second.
+    ovrVector3f  AngularAcceleration;   ///< The body's angular acceleration in radians per second per second.
+    ovrVector3f  LinearAcceleration;    ///< The body's acceleration in meters per second per second.
+    double       TimeInSeconds;         ///< Absolute time of this state sample.
 } ovrPoseStatef;
 
 /// Field Of View (FOV) in tangent of the angle units.
@@ -165,13 +196,14 @@
 
     ovrHmdCap_LowPersistence    = 0x0080,   /// HMD supports low persistence mode.
     ovrHmdCap_DynamicPrediction = 0x0200,   /// Adjust prediction dynamically based on internally measured latency.
+    ovrHmdCap_DirectPentile     = 0x0400,   /// Write directly in pentile color mapping format
     ovrHmdCap_NoVSync           = 0x1000,   /// Support rendering without VSync for debugging.
 
     // These bits can be modified by ovrHmd_SetEnabledCaps.
-    ovrHmdCap_Writable_Mask     = 0x33F0,
+    ovrHmdCap_Writable_Mask     = 0x32F0,
 
     /// These flags are currently passed into the service. May change without notice.
-    ovrHmdCap_Service_Mask      = 0x23F0
+    ovrHmdCap_Service_Mask      = 0x22F0
 } ovrHmdCaps;
 
 
@@ -194,13 +226,15 @@
 {
     ovrDistortionCap_Chromatic          = 0x01,     /// Supports chromatic aberration correction.
     ovrDistortionCap_TimeWarp           = 0x02,     /// Supports timewarp.
+    // 0x04 unused
     ovrDistortionCap_Vignette           = 0x08,     /// Supports vignetting around the edges of the view.
-    ovrDistortionCap_NoRestore          = 0x10,     /// Do not save and restore the graphics state when rendering distortion.
+    ovrDistortionCap_NoRestore          =   0x10,     /// Do not save and restore the graphics and compute state when rendering distortion.
     ovrDistortionCap_FlipInput          = 0x20,     /// Flip the vertical texture coordinate of input images.
     ovrDistortionCap_SRGB               = 0x40,     /// Assume input images are in sRGB gamma-corrected color space.
     ovrDistortionCap_Overdrive          = 0x80,     /// Overdrive brightness transitions to reduce artifacts on DK2+ displays
     ovrDistortionCap_HqDistortion       = 0x100,    /// High-quality sampling of distortion buffer for anti-aliasing
     ovrDistortionCap_LinuxDevFullscreen = 0x200,    /// Indicates window is fullscreen on a device when set. The SDK will automatically apply distortion mesh rotation if needed.
+    ovrDistortionCap_ComputeShader      =  0x400,     /// Using compute shader (DX11+ only)
 
     ovrDistortionCap_ProfileNoTimewarpSpinWaits = 0x10000,  /// Use when profiling with timewarp to remove false positives
 } ovrDistortionCaps;
@@ -331,7 +365,7 @@
     // Measures the time from exposure until the pose is available for the frame, including processing time.
     double LastVisionFrameLatency;
 
-    // Tag the vision processing results to a certain frame counter number.
+    /// Tag the vision processing results to a certain frame counter number.
     uint32_t LastCameraFrameCounter;
 } ovrTrackingState;
 
@@ -371,11 +405,11 @@
 /// or (b) passing different values via ovrTexture in the case of SDK rendered distortion.
 typedef struct ovrEyeRenderDesc_
 {
-    ovrEyeType  Eye;
-    ovrFovPort  Fov;
-	ovrRecti    DistortedViewport;          /// Distortion viewport.
-    ovrVector2f PixelsPerTanAngleAtCenter;  /// How many display pixels will fit in tan(angle) = 1.
-    ovrVector3f HmdToEyeViewOffset;         /// Translation to be applied to view matrix for each eye offset.
+    ovrEyeType  Eye;                        ///< The eye index this instance corresponds to.
+    ovrFovPort  Fov;                        ///< The field of view.
+	ovrRecti    DistortedViewport;          ///< Distortion viewport.
+    ovrVector2f PixelsPerTanAngleAtCenter;  ///< How many display pixels will fit in tan(angle) = 1.
+    ovrVector3f HmdToEyeViewOffset;         ///< Translation to be applied to view matrix for each eye offset.
 } ovrEyeRenderDesc;
 
 //-----------------------------------------------------------------------------------
@@ -402,15 +436,15 @@
 
 /// Platform-independent part of rendering API-configuration data.
 /// It is a part of ovrRenderAPIConfig, passed to ovrHmd_Configure.
-typedef struct ovrRenderAPIConfigHeader_
+typedef struct OVR_ALIGNAS(8) ovrRenderAPIConfigHeader_
 {
     ovrRenderAPIType API;
-    ovrSizei         RTSize;
+    ovrSizei         BackBufferSize;    // Previously named RTSize.
     int              Multisample;
 } ovrRenderAPIConfigHeader;
 
 /// Contains platform-specific information for rendering.
-typedef struct ovrRenderAPIConfig_
+typedef struct OVR_ALIGNAS(8) ovrRenderAPIConfig_
 {
     ovrRenderAPIConfigHeader Header;
     uintptr_t                PlatformData[8];
@@ -419,15 +453,16 @@
 /// Platform-independent part of the eye texture descriptor.
 /// It is a part of ovrTexture, passed to ovrHmd_EndFrame.
 /// If RenderViewport is all zeros then the full texture will be used.
-typedef struct ovrTextureHeader_
+typedef struct OVR_ALIGNAS(8) ovrTextureHeader_
 {
     ovrRenderAPIType API;
     ovrSizei         TextureSize;
     ovrRecti         RenderViewport;  // Pixel viewport in texture that holds eye image.
+    uint32_t         _PAD0_;
 } ovrTextureHeader;
 
 /// Contains platform-specific information about a texture.
-typedef struct ovrTexture_
+typedef struct OVR_ALIGNAS(8) ovrTexture_
 {
     ovrTextureHeader Header;
     uintptr_t        PlatformData[8];
@@ -476,7 +511,7 @@
 // Either ovr_InitializeRenderingShim() or ovr_Initialize() must be called before any
 // Direct3D or OpenGL initilization is done by applictaion (creation of devices, etc).
 // ovr_Initialize() must still be called after to use the rest of LibOVR APIs.
-OVR_EXPORT void     ovr_InitializeRenderingShim();
+OVR_EXPORT ovrBool  ovr_InitializeRenderingShim();
 
 // Library init/shutdown, must be called around all other OVR code.
 // No other functions calls besides ovr_InitializeRenderingShim are allowed
@@ -639,7 +674,6 @@
 OVR_EXPORT void ovrHmd_GetEyePoses(ovrHmd hmd, unsigned int frameIndex, ovrVector3f hmdToEyeViewOffset[2],
                                    ovrPosef outEyePoses[2], ovrTrackingState* outHmdTrackingState);
 
-/// DEPRECATED: Prefer using ovrHmd_GetEyePoses instead
 /// Function was previously called ovrHmd_GetEyePose
 /// Returns the predicted head pose to use when rendering the specified eye.
 /// - Important: Caller must apply HmdToEyeViewOffset before using ovrPosef for rendering
@@ -680,22 +714,22 @@
 /// not requested.
 typedef struct ovrDistortionVertex_
 {
-    ovrVector2f ScreenPosNDC;    // [-1,+1],[-1,+1] over the entire framebuffer.
-    float       TimeWarpFactor;  // Lerp factor between time-warp matrices. Can be encoded in Pos.z.
-    float       VignetteFactor;  // Vignette fade factor. Can be encoded in Pos.w.
-    ovrVector2f TanEyeAnglesR;
-    ovrVector2f TanEyeAnglesG;
-    ovrVector2f TanEyeAnglesB;
+    ovrVector2f ScreenPosNDC;    ///< [-1,+1],[-1,+1] over the entire framebuffer.
+    float       TimeWarpFactor;  ///< Lerp factor between time-warp matrices. Can be encoded in Pos.z.
+    float       VignetteFactor;  ///< Vignette fade factor. Can be encoded in Pos.w.
+    ovrVector2f TanEyeAnglesR;   ///< The tangents of the horizontal and vertical eye angles for the red channel.
+	ovrVector2f TanEyeAnglesG;   ///< The tangents of the horizontal and vertical eye angles for the green channel.
+	ovrVector2f TanEyeAnglesB;   ///< The tangents of the horizontal and vertical eye angles for the blue channel.
 } ovrDistortionVertex;
 
 /// Describes a full set of distortion mesh data, filled in by ovrHmd_CreateDistortionMesh.
 /// Contents of this data structure, if not null, should be freed by ovrHmd_DestroyDistortionMesh.
 typedef struct ovrDistortionMesh_
 {
-    ovrDistortionVertex* pVertexData;
-    unsigned short*      pIndexData;
-    unsigned int         VertexCount;
-    unsigned int         IndexCount;
+    ovrDistortionVertex* pVertexData; ///< The distortion vertices representing each point in the mesh.
+    unsigned short*      pIndexData;  ///< Indices for connecting the mesh vertices into polygons.
+    unsigned int         VertexCount; ///< The number of vertices in the mesh.
+    unsigned int         IndexCount;  ///< The number of indices in the mesh.
 } ovrDistortionMesh;
 
 /// Generate distortion mesh per eye.
@@ -712,6 +746,12 @@
                                                  ovrEyeType eyeType, ovrFovPort fov,
                                                  unsigned int distortionCaps,
                                                  ovrDistortionMesh *meshData);
+OVR_EXPORT ovrBool ovrHmd_CreateDistortionMeshDebug( ovrHmd hmddesc,
+                                                     ovrEyeType eyeType, ovrFovPort fov,
+                                                     unsigned int distortionCaps,
+                                                     ovrDistortionMesh *meshData,
+												     float debugEyeReliefOverrideInMetres);
+
 
 /// Used to free the distortion mesh allocated by ovrHmd_GenerateDistortionMesh. meshData elements
 /// are set to null and zeroes after the call.
@@ -748,8 +788,14 @@
 /// when rendering this eye. The ovrDistortionVertex::TimeWarpFactor is used to blend between the
 /// matrices, usually representing two different sides of the screen.
 /// Must be called on the same thread as ovrHmd_BeginFrameTiming.
-OVR_EXPORT void     ovrHmd_GetEyeTimewarpMatrices(ovrHmd hmd, ovrEyeType eye,
+OVR_EXPORT void     ovrHmd_GetEyeTimewarpMatrices     (ovrHmd hmd, ovrEyeType eye,
                                                   ovrPosef renderPose, ovrMatrix4f twmOut[2]);
+OVR_EXPORT void     ovrHmd_GetEyeTimewarpMatricesDebug(ovrHmd hmd, ovrEyeType eye,
+                                                       ovrPosef renderPose, ovrMatrix4f twmOut[2],
+													   double debugTimingOffsetInSeconds);
+
+
+
 
 //-------------------------------------------------------------------------------------
 // ***** Stateless math setup functions
@@ -796,9 +842,9 @@
     /// If true then the warning should be currently visible
     /// and the following variables have meaning. Else there is no
     /// warning being displayed for this application on the given HMD.
-    ovrBool Displayed;
-    double  StartTime;       /// Absolute time when the warning was first displayed. See ovr_GetTimeInSeconds().
-    double  DismissibleTime; /// Earliest absolute time when the warning can be dismissed. May be a time in the past.
+    ovrBool Displayed;       ///< True if the Health&Safety Warning is currently displayed.
+    double  StartTime;       ///< Absolute time when the warning was first displayed. See ovr_GetTimeInSeconds().
+    double  DismissibleTime; ///< Earliest absolute time when the warning can be dismissed. May be a time in the past.
 } ovrHSWDisplayState;
 
 /// Returns the current state of the HSW display. If the application is doing the rendering of
@@ -896,4 +942,9 @@
 #endif
 
 
+#if defined(_MSC_VER)
+    #pragma warning(pop)
+#endif
+
+
 #endif // OVR_CAPI_h
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI_D3D.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI_D3D.h	2014-12-03 13:25:20.000000000 -0800
@@ -46,7 +46,7 @@
 #endif
 
 /// Used to configure slave D3D rendering (i.e. for devices created externally).
-struct ovrD3D11ConfigData
+struct OVR_ALIGNAS(8) ovrD3D11ConfigData
 {
     /// General device settings.
     ovrRenderAPIConfigHeader Header;
@@ -56,6 +56,8 @@
     ID3D11DeviceContext*     pDeviceContext;
     /// A render target view for the backbuffer.
     ID3D11RenderTargetView*  pBackBufferRT;
+    /// A UAV for the backbuffer (if using compute shaders)
+    ID3D11UnorderedAccessView*  pBackBufferUAV;
     /// The swapchain that will present rendered frames.
     IDXGISwapChain*          pSwapChain;
 };
@@ -70,7 +72,7 @@
 };
 
 /// Used to pass D3D11 eye texture data to ovrHmd_EndFrame.
-struct ovrD3D11TextureData
+struct OVR_ALIGNAS(8) ovrD3D11TextureData
 {
     /// General device settings.
     ovrTextureHeader          Header;
@@ -100,13 +102,14 @@
 // ***** D3D10 Specific
 
 /// Used to configure slave D3D rendering (i.e. for devices created externally).
-struct ovrD3D10ConfigData
+struct OVR_ALIGNAS(8) ovrD3D10ConfigData
 {
     /// General device settings.
     ovrRenderAPIConfigHeader Header;
     ID3D10Device*            pDevice;
-    void*                    Unused;
+    void*                    Unused1;           // pDeviceContext in DX11
     ID3D10RenderTargetView*  pBackBufferRT;
+    void*                    Unused2;           // pBackBufferUAV in DX11
     IDXGISwapChain*          pSwapChain;
 };
 
@@ -117,7 +120,7 @@
 };
 
 /// Used to pass D3D10 eye texture data to ovrHmd_EndFrame.
-struct ovrD3D10TextureData
+struct OVR_ALIGNAS(8) ovrD3D10TextureData
 {
     /// General device settings.
     ovrTextureHeader          Header;
@@ -139,7 +142,7 @@
 // ***** D3D9 Specific
 
 // Used to configure D3D9 rendering 
-struct ovrD3D9ConfigData
+struct OVR_ALIGNAS(8) ovrD3D9ConfigData
 {
     // General device settings.
     ovrRenderAPIConfigHeader Header;
@@ -155,7 +158,7 @@
 };
 
 // Used to pass D3D9 eye texture data to ovrHmd_EndFrame.
-struct ovrD3D9TextureData
+struct OVR_ALIGNAS(8) ovrD3D9TextureData
 {
     // General device settings.
     ovrTextureHeader            Header;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI_GL.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI_GL.h	2014-12-03 13:25:20.000000000 -0800
@@ -5,7 +5,7 @@
 Created     :   November 7, 2013
 Authors     :   Lee Cooper
 
-Copyright   :   Copyright 2013 Oculus VR, LLC All Rights reserved.
+Copyright   :   Copyright 2013 Oculus VR, LLC. All Rights reserved.
 
 Use of this software is subject to the terms of the Oculus Inc license
 agreement provided at the time of installation or download, or which
@@ -19,28 +19,15 @@
 /// OpenGL rendering support.
 
 #include "OVR_CAPI.h"
-
-//-----------------------------------------------------------------------------------
-// ***** GL Specific
-
-#if defined(OVR_OS_WIN32)
-    #ifndef WIN32_LEAN_AND_MEAN
-    #define WIN32_LEAN_AND_MEAN
-    #endif
-    #include <Windows.h>
-    #include <GL/gl.h>
-#elif defined(OVR_OS_MAC)
-    #include <OpenGL/OpenGL.h>
-#elif defined(OVR_OS_MS)
-    #error No OpenGL on non-desktop Microsoft platforms
+#if defined(__APPLE__)
+    #include <OpenGL/gl.h>
 #else
     #include <GL/gl.h>
-    #include <GL/glx.h>
 #endif
 
 
 /// Used to configure slave GL rendering (i.e. for devices created externally).
-typedef struct ovrGLConfigData_s
+typedef struct OVR_ALIGNAS(8) ovrGLConfigData_s
 {
     /// General device settings.
     ovrRenderAPIConfigHeader Header;
@@ -50,11 +37,10 @@
     HWND Window;
     /// The optional device context. If unset, rendering will use a new context.
     HDC  DC;
-#elif defined(OVR_OS_LINUX)
-    /// The optional display. If unset, rendering will use the current display.
-    _XDisplay* Disp;
-    /// The optional window. If unset, rendering will use the current window.
-    Window     Win;
+#elif defined (OVR_OS_LINUX)
+    /// Optional display. If unset, will issue glXGetCurrentDisplay when context
+    /// is current.
+    struct _XDisplay* Disp;
 #endif
 } ovrGLConfigData;
 
@@ -68,7 +54,7 @@
 };
 
 /// Used to pass GL eye texture data to ovrHmd_EndFrame.
-typedef struct ovrGLTextureData_s
+typedef struct OVR_ALIGNAS(8) ovrGLTextureData_s
 {
     /// General device settings.
     ovrTextureHeader Header;
@@ -76,6 +62,8 @@
     GLuint           TexId;       
 } ovrGLTextureData;
 
+static_assert(offsetof(ovrGLTextureData, TexId) == offsetof(ovrTexture, PlatformData), "Mismatch of structs that are presumed binary equivalents.");
+
 /// Contains OpenGL-specific texture information.
 typedef union ovrGLTexture_s
 {
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI_Keys.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_CAPI_Keys.h	2014-12-03 13:25:20.000000000 -0800
@@ -26,19 +26,19 @@
 
 
 
-#define OVR_KEY_USER                        "User"
-#define OVR_KEY_NAME                        "Name"
-#define OVR_KEY_GENDER                      "Gender"
-#define OVR_KEY_PLAYER_HEIGHT               "PlayerHeight"
-#define OVR_KEY_EYE_HEIGHT                  "EyeHeight"
-#define OVR_KEY_IPD                         "IPD"
-#define OVR_KEY_NECK_TO_EYE_DISTANCE        "NeckEyeDistance"
-#define OVR_KEY_EYE_RELIEF_DIAL             "EyeReliefDial"
-#define OVR_KEY_EYE_TO_NOSE_DISTANCE        "EyeToNoseDist"
-#define OVR_KEY_MAX_EYE_TO_PLATE_DISTANCE   "MaxEyeToPlateDist"
-#define OVR_KEY_EYE_CUP                     "EyeCup"
-#define OVR_KEY_CUSTOM_EYE_RENDER           "CustomEyeRender"
-#define OVR_KEY_CAMERA_POSITION				"CenteredFromWorld"
+#define OVR_KEY_USER                        "User"              // string
+#define OVR_KEY_NAME                        "Name"              // string
+#define OVR_KEY_GENDER                      "Gender"            // string
+#define OVR_KEY_PLAYER_HEIGHT               "PlayerHeight"      // float
+#define OVR_KEY_EYE_HEIGHT                  "EyeHeight"         // float
+#define OVR_KEY_IPD                         "IPD"               // float
+#define OVR_KEY_NECK_TO_EYE_DISTANCE        "NeckEyeDistance"   // float[2]
+#define OVR_KEY_EYE_RELIEF_DIAL             "EyeReliefDial"     // int
+#define OVR_KEY_EYE_TO_NOSE_DISTANCE        "EyeToNoseDist"     // float[2]
+#define OVR_KEY_MAX_EYE_TO_PLATE_DISTANCE   "MaxEyeToPlateDist" // float[2]
+#define OVR_KEY_EYE_CUP                     "EyeCup"            // char[16]
+#define OVR_KEY_CUSTOM_EYE_RENDER           "CustomEyeRender"   // bool
+#define OVR_KEY_CAMERA_POSITION				"CenteredFromWorld" // double[7]
 
 // Default measurements empirically determined at Oculus to make us happy
 // The neck model numbers were derived as an average of the male and female averages from ANSUR-88
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_Stereo.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/OVR_Stereo.h	2014-12-03 13:25:20.000000000 -0800
@@ -320,6 +320,9 @@
 	float       ScreenGapSizeInMeters;
 	float       CenterFromTopInMeters;
 	float       LensSeparationInMeters;
+    Vector2f    PelOffsetR;                     // Offsets from the green pel in pixels (i.e. usual values are 0.5 or 0.333)
+    Vector2f    PelOffsetB;
+
 
 	// Timing & shutter data. All values in seconds.
 	struct ShutterInfo
@@ -372,6 +375,8 @@
 		ScreenGapSizeInMeters(0.0f),
 		CenterFromTopInMeters(0),
 		LensSeparationInMeters(0),
+        PelOffsetR(0.0f,0.0f),
+        PelOffsetB(0.0f,0.0f),
       //Shutter (initialized below)
 		DesktopX(0),
 		DesktopY(0),
@@ -409,6 +414,8 @@
 		ScreenGapSizeInMeters = src.ScreenGapSizeInMeters;
 		CenterFromTopInMeters = src.CenterFromTopInMeters;
 		LensSeparationInMeters = src.LensSeparationInMeters;
+        PelOffsetR = src.PelOffsetR;
+        PelOffsetB = src.PelOffsetB;
 		DesktopX = src.DesktopX;
 		DesktopY = src.DesktopY;
 		Shutter = src.Shutter;
@@ -465,6 +472,8 @@
     Size<int>   ResolutionInPixels;
     Size<float> ScreenSizeInMeters;
     float       ScreenGapSizeInMeters;
+    Vector2f    PelOffsetR;                     // Offsets from the green pel in pixels (i.e. usual values are 0.5 or 0.333)
+    Vector2f    PelOffsetB;
 
     // Characteristics of the lenses.
     float       CenterFromTopInMeters;
@@ -509,6 +518,8 @@
         LensSeparationInMeters = 0.0f;
         LensDiameterInMeters = 0.0f;
         LensSurfaceToMidplateInMeters = 0.0f;
+        PelOffsetR = Vector2f ( 0.0f, 0.0f );
+        PelOffsetB = Vector2f ( 0.0f, 0.0f );
         Shutter.Type = HmdShutter_LAST;
         Shutter.VsyncToNextVsync = 0.0f;
         Shutter.VsyncToFirstScanline = 0.0f;
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Util/Util_Render_Stereo.h	2014-10-14 13:42:26.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Util/Util_Render_Stereo.h	2014-12-03 13:25:20.000000000 -0800
@@ -429,6 +429,10 @@
     // The only reliable time in most engines is directly after the frame-present and GPU flush-and-wait.
     // This call should be done right after that to give this system the timing info it needs.
     void        AfterPresentAndFlush(double timeNow);
+    // But some engines queue up the frame-present and only later find out when it actually happened.
+    // They should call these two at those times.
+    void        AfterPresentWithoutFlush();
+    void        AfterPresentFinishes(double timeNow);
 
     // The "average" time the rendered frame will show up,
     // and the predicted pose of the HMD at that time.
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Util/Util_SystemGUI.h	1969-12-31 16:00:00.000000000 -0800
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Util/Util_SystemGUI.h	2014-12-03 13:25:20.000000000 -0800
@@ -0,0 +1,39 @@
+/************************************************************************************
+
+Filename    :   Util_SystemGUI.h
+Content     :   OS GUI access, usually for diagnostics.
+Created     :   October 20, 2014
+Copyright   :   Copyright 2014 Oculus VR, LLC All Rights reserved.
+
+Licensed under the Oculus VR Rift SDK License Version 3.2 (the "License"); 
+you may not use the Oculus VR Rift SDK except in compliance with the License, 
+which is provided at the time of installation or download, or which 
+otherwise accompanies this software in either electronic or hard copy form.
+
+You may obtain a copy of the License at
+
+http://www.oculusvr.com/licenses/LICENSE-3.2 
+
+Unless required by applicable law or agreed to in writing, the Oculus VR SDK 
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+
+*************************************************************************************/
+
+#ifndef OVR_Util_GUI_h
+#define OVR_Util_GUI_h
+
+
+namespace OVR { namespace Util {
+
+    // Displays a modal message box on the default GUI display (not on a VR device). 
+    // The message box interface (e.g. OK button) is not localized.
+    bool DisplayMessageBox(const char* pTitle, const char* pText);
+
+
+} } // namespace OVR::Util
+
+
+#endif
--- ../../../../UE4-QA/Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Util/Util_SystemInfo.h	2014-10-16 07:12:08.000000000 -0700
+++ ./Engine/Source/ThirdParty/Oculus/LibOVR/LibOVR_04/Src/Util/Util_SystemInfo.h	2014-12-03 13:25:20.000000000 -0800
@@ -24,6 +24,10 @@
 
 ************************************************************************************/
 
+
+#ifndef OVR_Util_SystemInfo_h
+#define OVR_Util_SystemInfo_h
+
 #include "../Kernel/OVR_String.h"
 #include "../Kernel/OVR_Types.h"
 #include "../Kernel/OVR_Array.h"
@@ -40,5 +44,8 @@
 String GetDisplayDriverVersion();
 String GetCameraDriverVersion();
 void GetGraphicsCardList(OVR::Array< OVR::String > &gpus);
+String GetProcessorInfo(int* numcores = NULL);
 
 } } // namespace OVR { namespace Util {
\ No newline at end of file
+
+#endif // OVR_Util_SystemInfo_h
